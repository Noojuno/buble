{"version":3,"file":"buble.deps.js","sources":["../node_modules/acorn/dist/acorn.js","../node_modules/acorn-jsx/xhtml.js","../node_modules/acorn-jsx/inject.js","../node_modules/acorn-es7-plugin/acorn-v4.js","../node_modules/acorn-es7-plugin/acorn-v3.js","../node_modules/acorn-es7-plugin/acorn-es7-plugin.js","../node_modules/acorn-object-rest-spread/inject.js","../node_modules/vlq/src/vlq.js","../node_modules/magic-string/dist/magic-string.es6.js","../src/program/keys.js","../src/program/Node.js","../src/utils/spread.js","../src/program/types/ArrayExpression.js","../src/program/types/ArrowFunctionExpression.js","../src/utils/locate.js","../src/utils/getSnippet.js","../src/utils/CompileError.js","../src/program/types/AssignmentExpression.js","../src/program/types/BinaryExpression.js","../src/utils/patterns.js","../src/program/types/BreakStatement.js","../src/program/types/CallExpression.js","../src/utils/array.js","../src/utils/reserved.js","../src/program/types/ClassBody.js","../src/utils/deindent.js","../src/program/types/ClassDeclaration.js","../src/program/types/ClassExpression.js","../src/program/types/ContinueStatement.js","../src/program/types/ExportDefaultDeclaration.js","../src/program/types/ExportNamedDeclaration.js","../src/program/types/shared/LoopStatement.js","../src/program/extractNames.js","../src/program/types/ForStatement.js","../src/program/types/ForInStatement.js","../src/utils/destructure.js","../src/program/types/ForOfStatement.js","../src/program/types/FunctionDeclaration.js","../src/program/types/FunctionExpression.js","../src/utils/isReference.js","../src/program/types/Identifier.js","../src/program/types/IfStatement.js","../src/program/types/ImportDeclaration.js","../src/program/types/ImportDefaultSpecifier.js","../src/program/types/ImportSpecifier.js","../src/program/types/JSXAttribute.js","../src/program/types/JSXClosingElement.js","../src/program/types/JSXElement.js","../src/program/types/JSXExpressionContainer.js","../src/program/types/JSXOpeningElement.js","../src/program/types/JSXSpreadAttribute.js","../node_modules/regenerate/regenerate.js","../node_modules/regexpu-core/data/character-class-escape-sets.js","../node_modules/regexpu-core/data/iu-mappings.json","../node_modules/regjsparser/parser.js","../node_modules/regjsgen/regjsgen.js","../node_modules/regexpu-core/rewrite-pattern.js","../src/program/types/Literal.js","../src/program/types/MemberExpression.js","../src/program/types/NewExpression.js","../src/program/types/ObjectExpression.js","../src/program/types/Property.js","../src/program/types/ReturnStatement.js","../src/program/types/SpreadProperty.js","../src/program/types/Super.js","../src/program/types/TaggedTemplateExpression.js","../src/program/types/TemplateElement.js","../src/program/types/TemplateLiteral.js","../src/program/types/ThisExpression.js","../src/program/types/UpdateExpression.js","../src/program/types/VariableDeclaration.js","../src/program/types/VariableDeclarator.js","../src/program/types/index.js","../src/program/wrap.js","../src/program/Scope.js","../src/program/BlockStatement.js","../src/program/Program.js","../src/support.js","../package.json","../src/index.js"],"sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.acorn = global.acorn || {})));\n}(this, (function (exports) { 'use strict';\n\n// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\nvar keywords = {\n  5: ecma5AndLessKeywords,\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\n\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fd5\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ae\\ua7b0-\\ua7b7\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d4-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c03\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d01-\\u0d03\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1cf8\\u1cf9\\u1dc0-\\u1df5\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua900-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by bin/generate-identifier-regex.js\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,17,26,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,26,45,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,785,52,76,44,33,24,27,35,42,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,54,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,86,25,391,63,32,0,449,56,264,8,2,36,18,0,50,29,881,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,881,68,12,0,67,12,65,0,32,6124,20,754,9486,1,3071,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,4149,196,60,67,1213,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,10591,541];\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,1306,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,52,0,13,2,49,13,10,2,4,9,83,11,7,0,161,11,6,9,7,3,57,0,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,87,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,423,9,838,7,2,7,17,9,57,21,2,13,19882,9,135,4,60,6,26,9,1016,45,17,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,2214,6,110,6,6,9,792487,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) { return false }\n    pos += set[i + 1];\n    if (pos >= code) { return true }\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) { return code === 36 }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) { return code === 36 }\n  if (code < 58) { return true }\n  if (code < 65) { return false }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if ( conf === void 0 ) conf = {};\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nvar beforeExpr = {beforeExpr: true};\nvar startsExpr = {startsExpr: true};\n\n// Map keyword names to token types.\n\nvar keywords$1 = {};\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if ( options === void 0 ) options = {};\n\n  options.keyword = name;\n  return keywords$1[name] = new TokenType(name, options)\n}\n\nvar types = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  invalidTemplate: new TokenType(\"invalidTemplate\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"prefix\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=\", 6),\n  relational: binop(\"</>\", 7),\n  bitShift: binop(\"<</>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true}),\n\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {isLoop: true}),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {isLoop: true}),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\", startsExpr),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\"),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n  _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n  _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n};\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code) {\n  return code === 10 || code === 13 || code === 0x2028 || code === 0x2029\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString;\n\n// Checks if an object has a property.\n\nfunction has(obj, propName) {\n  return hasOwnProperty.call(obj, propName)\n}\n\nvar isArray = Array.isArray || (function (obj) { return (\n  toString.call(obj) === \"[object Array]\"\n); });\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\n\nPosition.prototype.offset = function offset (n) {\n  return new Position(this.line, this.column + n)\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) { this.source = p.sourceFile; }\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    lineBreakG.lastIndex = cur;\n    var match = lineBreakG.exec(input);\n    if (match && match.index < offset) {\n      ++line;\n      cur = match.index + match[0].length;\n    } else {\n      return new Position(line, offset - cur)\n    }\n  }\n}\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must\n  // be either 3, 5, 6 (2015), 7 (2016), or 8 (2017). This influences support\n  // for strict mode, the set of reserved words, and support for\n  // new syntax features. The default is 7.\n  ecmaVersion: 7,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // th position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // When enabled, hashbang directive in the beginning of file\n  // is allowed and treated as a line comment.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false,\n  plugins: {}\n};\n\n// Interpret and default an options object\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var opt in defaultOptions)\n    { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n  if (options.ecmaVersion >= 2015)\n    { options.ecmaVersion -= 2009; }\n\n  if (options.allowReserved == null)\n    { options.allowReserved = options.ecmaVersion < 5; }\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n    options.onToken = function (token) { return tokens.push(token); };\n  }\n  if (isArray(options.onComment))\n    { options.onComment = pushComment(options, options.onComment); }\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations)\n      { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n    if (options.ranges)\n      { comment.range = [start, end]; }\n    array.push(comment);\n  }\n}\n\n// Registered plugins\nvar plugins = {};\n\nfunction keywordRegexp(words) {\n  return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n}\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = keywordRegexp(keywords[options.ecmaVersion >= 6 ? 6 : 5]);\n  var reserved = \"\";\n  if (!options.allowReserved) {\n    for (var v = options.ecmaVersion;; v--)\n      { if (reserved = reservedWords[v]) { break } }\n    if (options.sourceType == \"module\") { reserved += \" await\"; }\n  }\n  this.reservedWords = keywordRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n  this.reservedWordsStrict = keywordRegexp(reservedStrict);\n  this.reservedWordsStrictBind = keywordRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n  this.input = String(input);\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false;\n\n  // Load plugins\n  this.loadPlugins(options.plugins);\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = types.eof;\n  // For tokens that include more information than their type, the value\n  this.value = null;\n  // Its start and end offset\n  this.start = this.end = this.pos;\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition();\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext();\n  this.exprAllowed = true;\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\";\n  this.strict = this.inModule || this.strictDirective(this.pos);\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1;\n\n  // Flags to track whether we are in a function, a generator, an async function.\n  this.inFunction = this.inGenerator = this.inAsync = false;\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = 0;\n  // Labels in scope.\n  this.labels = [];\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n    { this.skipLineComment(2); }\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = [];\n  this.enterFunctionScope();\n};\n\n// DEPRECATED Kept for backwards compatibility until 3.0 in case a plugin uses them\nParser.prototype.isKeyword = function isKeyword (word) { return this.keywords.test(word) };\nParser.prototype.isReservedWord = function isReservedWord (word) { return this.reservedWords.test(word) };\n\nParser.prototype.extend = function extend (name, f) {\n  this[name] = f(this[name]);\n};\n\nParser.prototype.loadPlugins = function loadPlugins (pluginConfigs) {\n    var this$1 = this;\n\n  for (var name in pluginConfigs) {\n    var plugin = plugins[name];\n    if (!plugin) { throw new Error(\"Plugin '\" + name + \"' not found\") }\n    plugin(this$1, pluginConfigs[name]);\n  }\n};\n\nParser.prototype.parse = function parse () {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node)\n};\n\nvar pp = Parser.prototype;\n\n// ## Parser utilities\n\nvar literal = /^(?:'((?:[^']|\\.)*)'|\"((?:[^\"]|\\.)*)\"|;)/;\npp.strictDirective = function(start) {\n  var this$1 = this;\n\n  for (;;) {\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this$1.input)[0].length;\n    var match = literal.exec(this$1.input.slice(start));\n    if (!match) { return false }\n    if ((match[1] || match[2]) == \"use strict\") { return true }\n    start += match[0].length;\n  }\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp.eat = function(type) {\n  if (this.type === type) {\n    this.next();\n    return true\n  } else {\n    return false\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp.isContextual = function(name) {\n  return this.type === types.name && this.value === name\n};\n\n// Consumes contextual keyword if possible.\n\npp.eatContextual = function(name) {\n  return this.value === name && this.eat(types.name)\n};\n\n// Asserts that following token is given contextual keyword.\n\npp.expectContextual = function(name) {\n  if (!this.eatContextual(name)) { this.unexpected(); }\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp.canInsertSemicolon = function() {\n  return this.type === types.eof ||\n    this.type === types.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\npp.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n    return true\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp.semicolon = function() {\n  if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }\n};\n\npp.afterTrailingComma = function(tokType, notNext) {\n  if (this.type == tokType) {\n    if (this.options.onTrailingComma)\n      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n    if (!notNext)\n      { this.next(); }\n    return true\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp.expect = function(type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\n\nfunction DestructuringErrors() {\n  this.shorthandAssign =\n  this.trailingComma =\n  this.parenthesizedAssign =\n  this.parenthesizedBind =\n    -1;\n}\n\npp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) { return }\n  if (refDestructuringErrors.trailingComma > -1)\n    { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n  if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n};\n\npp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  var pos = refDestructuringErrors ? refDestructuringErrors.shorthandAssign : -1;\n  if (!andThrow) { return pos >= 0 }\n  if (pos > -1) { this.raise(pos, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n};\n\npp.checkYieldAwaitInDefaultParams = function() {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n    { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n  if (this.awaitPos)\n    { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n};\n\npp.isSimpleAssignTarget = function(expr) {\n  if (expr.type === \"ParenthesizedExpression\")\n    { return this.isSimpleAssignTarget(expr.expression) }\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n};\n\nvar pp$1 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$1.parseTopLevel = function(node) {\n  var this$1 = this;\n\n  var exports = {};\n  if (!node.body) { node.body = []; }\n  while (this.type !== types.eof) {\n    var stmt = this$1.parseStatement(true, true, exports);\n    node.body.push(stmt);\n  }\n  this.next();\n  if (this.options.ecmaVersion >= 6) {\n    node.sourceType = this.options.sourceType;\n  }\n  return this.finishNode(node, \"Program\")\n};\n\nvar loopLabel = {kind: \"loop\"};\nvar switchLabel = {kind: \"switch\"};\n\npp$1.isLet = function() {\n  if (this.type !== types.name || this.options.ecmaVersion < 6 || this.value != \"let\") { return false }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n  if (nextCh === 91 || nextCh == 123) { return true } // '{' and '['\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n    while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }\n    var ident = this.input.slice(next, pos);\n    if (!this.isKeyword(ident)) { return true }\n  }\n  return false\n};\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$1.isAsyncFunction = function() {\n  if (this.type !== types.name || this.options.ecmaVersion < 8 || this.value != \"async\")\n    { return false }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length;\n  return !lineBreak.test(this.input.slice(this.pos, next)) &&\n    this.input.slice(next, next + 8) === \"function\" &&\n    (next + 8 == this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$1.parseStatement = function(declaration, topLevel, exports) {\n  var starttype = this.type, node = this.startNode(), kind;\n\n  if (this.isLet()) {\n    starttype = types._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case types._debugger: return this.parseDebuggerStatement(node)\n  case types._do: return this.parseDoStatement(node)\n  case types._for: return this.parseForStatement(node)\n  case types._function:\n    if (!declaration && this.options.ecmaVersion >= 6) { this.unexpected(); }\n    return this.parseFunctionStatement(node, false)\n  case types._class:\n    if (!declaration) { this.unexpected(); }\n    return this.parseClass(node, true)\n  case types._if: return this.parseIfStatement(node)\n  case types._return: return this.parseReturnStatement(node)\n  case types._switch: return this.parseSwitchStatement(node)\n  case types._throw: return this.parseThrowStatement(node)\n  case types._try: return this.parseTryStatement(node)\n  case types._const: case types._var:\n    kind = kind || this.value;\n    if (!declaration && kind != \"var\") { this.unexpected(); }\n    return this.parseVarStatement(node, kind)\n  case types._while: return this.parseWhileStatement(node)\n  case types._with: return this.parseWithStatement(node)\n  case types.braceL: return this.parseBlock()\n  case types.semi: return this.parseEmptyStatement(node)\n  case types._export:\n  case types._import:\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n      if (!this.inModule)\n        { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n    }\n    return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    if (this.isAsyncFunction() && declaration) {\n      this.next();\n      return this.parseFunctionStatement(node, true)\n    }\n\n    var maybeName = this.value, expr = this.parseExpression();\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon))\n      { return this.parseLabeledStatement(node, maybeName, expr) }\n    else { return this.parseExpressionStatement(node, expr) }\n  }\n};\n\npp$1.parseBreakContinueStatement = function(node, keyword) {\n  var this$1 = this;\n\n  var isBreak = keyword == \"break\";\n  this.next();\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }\n  else if (this.type !== types.name) { this.unexpected(); }\n  else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0;\n  for (; i < this.labels.length; ++i) {\n    var lab = this$1.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n      if (node.label && isBreak) { break }\n    }\n  }\n  if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n};\n\npp$1.parseDebuggerStatement = function(node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\")\n};\n\npp$1.parseDoStatement = function(node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  this.expect(types._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6)\n    { this.eat(types.semi); }\n  else\n    { this.semicolon(); }\n  return this.finishNode(node, \"DoWhileStatement\")\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$1.parseForStatement = function(node) {\n  this.next();\n  this.labels.push(loopLabel);\n  this.enterLexicalScope();\n  this.expect(types.parenL);\n  if (this.type === types.semi) { return this.parseFor(node, null) }\n  var isLet = this.isLet();\n  if (this.type === types._var || this.type === types._const || isLet) {\n    var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, \"VariableDeclaration\");\n    if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1 &&\n        !(kind !== \"var\" && init$1.declarations[0].init))\n      { return this.parseForIn(node, init$1) }\n    return this.parseFor(node, init$1)\n  }\n  var refDestructuringErrors = new DestructuringErrors;\n  var init = this.parseExpression(true, refDestructuringErrors);\n  if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    this.toAssignable(init);\n    this.checkLVal(init);\n    this.checkPatternErrors(refDestructuringErrors, true);\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  return this.parseFor(node, init)\n};\n\npp$1.parseFunctionStatement = function(node, isAsync) {\n  this.next();\n  return this.parseFunction(node, true, false, isAsync)\n};\n\npp$1.isFunction = function() {\n  return this.type === types._function || this.isAsyncFunction()\n};\n\npp$1.parseIfStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(!this.strict && this.isFunction());\n  node.alternate = this.eat(types._else) ? this.parseStatement(!this.strict && this.isFunction()) : null;\n  return this.finishNode(node, \"IfStatement\")\n};\n\npp$1.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    { this.raise(this.start, \"'return' outside of function\"); }\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }\n  else { node.argument = this.parseExpression(); this.semicolon(); }\n  return this.finishNode(node, \"ReturnStatement\")\n};\n\npp$1.parseSwitchStatement = function(node) {\n  var this$1 = this;\n\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types.braceL);\n  this.labels.push(switchLabel);\n  this.enterLexicalScope();\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n  for (var sawDefault = false; this.type != types.braceR;) {\n    if (this$1.type === types._case || this$1.type === types._default) {\n      var isCase = this$1.type === types._case;\n      if (cur) { this$1.finishNode(cur, \"SwitchCase\"); }\n      node.cases.push(cur = this$1.startNode());\n      cur.consequent = [];\n      this$1.next();\n      if (isCase) {\n        cur.test = this$1.parseExpression();\n      } else {\n        if (sawDefault) { this$1.raiseRecoverable(this$1.lastTokStart, \"Multiple default clauses\"); }\n        sawDefault = true;\n        cur.test = null;\n      }\n      this$1.expect(types.colon);\n    } else {\n      if (!cur) { this$1.unexpected(); }\n      cur.consequent.push(this$1.parseStatement(true));\n    }\n  }\n  this.exitLexicalScope();\n  if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\")\n};\n\npp$1.parseThrowStatement = function(node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\")\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty = [];\n\npp$1.parseTryStatement = function(node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === types._catch) {\n    var clause = this.startNode();\n    this.next();\n    this.expect(types.parenL);\n    clause.param = this.parseBindingAtom();\n    this.enterLexicalScope();\n    this.checkLVal(clause.param, \"let\");\n    this.expect(types.parenR);\n    clause.body = this.parseBlock(false);\n    this.exitLexicalScope();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer)\n    { this.raise(node.start, \"Missing catch or finally clause\"); }\n  return this.finishNode(node, \"TryStatement\")\n};\n\npp$1.parseVarStatement = function(node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\")\n};\n\npp$1.parseWhileStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\")\n};\n\npp$1.parseWithStatement = function(node) {\n  if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(false);\n  return this.finishNode(node, \"WithStatement\")\n};\n\npp$1.parseEmptyStatement = function(node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\")\n};\n\npp$1.parseLabeledStatement = function(node, maybeName, expr) {\n  var this$1 = this;\n\n  for (var i$1 = 0, list = this$1.labels; i$1 < list.length; i$1 += 1)\n    {\n    var label = list[i$1];\n\n    if (label.name === maybeName)\n      { this$1.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n  } }\n  var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this$1.labels[i];\n    if (label$1.statementStart == node.start) {\n      label$1.statementStart = this$1.start;\n      label$1.kind = kind;\n    } else { break }\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n  node.body = this.parseStatement(true);\n  if (node.body.type == \"ClassDeclaration\" ||\n      node.body.type == \"VariableDeclaration\" && node.body.kind != \"var\" ||\n      node.body.type == \"FunctionDeclaration\" && (this.strict || node.body.generator))\n    { this.raiseRecoverable(node.body.start, \"Invalid labeled declaration\"); }\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\")\n};\n\npp$1.parseExpressionStatement = function(node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\")\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$1.parseBlock = function(createNewLexicalScope) {\n  var this$1 = this;\n  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n\n  var node = this.startNode();\n  node.body = [];\n  this.expect(types.braceL);\n  if (createNewLexicalScope) {\n    this.enterLexicalScope();\n  }\n  while (!this.eat(types.braceR)) {\n    var stmt = this$1.parseStatement(true);\n    node.body.push(stmt);\n  }\n  if (createNewLexicalScope) {\n    this.exitLexicalScope();\n  }\n  return this.finishNode(node, \"BlockStatement\")\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$1.parseFor = function(node, init) {\n  node.init = init;\n  this.expect(types.semi);\n  node.test = this.type === types.semi ? null : this.parseExpression();\n  this.expect(types.semi);\n  node.update = this.type === types.parenR ? null : this.parseExpression();\n  this.expect(types.parenR);\n  this.exitLexicalScope();\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\")\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$1.parseForIn = function(node, init) {\n  var type = this.type === types._in ? \"ForInStatement\" : \"ForOfStatement\";\n  this.next();\n  node.left = init;\n  node.right = this.parseExpression();\n  this.expect(types.parenR);\n  this.exitLexicalScope();\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, type)\n};\n\n// Parse a list of variable declarations.\n\npp$1.parseVar = function(node, isFor, kind) {\n  var this$1 = this;\n\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this$1.startNode();\n    this$1.parseVarId(decl, kind);\n    if (this$1.eat(types.eq)) {\n      decl.init = this$1.parseMaybeAssign(isFor);\n    } else if (kind === \"const\" && !(this$1.type === types._in || (this$1.options.ecmaVersion >= 6 && this$1.isContextual(\"of\")))) {\n      this$1.unexpected();\n    } else if (decl.id.type != \"Identifier\" && !(isFor && (this$1.type === types._in || this$1.isContextual(\"of\")))) {\n      this$1.raise(this$1.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this$1.finishNode(decl, \"VariableDeclarator\"));\n    if (!this$1.eat(types.comma)) { break }\n  }\n  return node\n};\n\npp$1.parseVarId = function(decl, kind) {\n  decl.id = this.parseBindingAtom(kind);\n  this.checkLVal(decl.id, kind, false);\n};\n\n// Parse a function declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseFunction = function(node, isStatement, allowExpressionBody, isAsync) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6 && !isAsync)\n    { node.generator = this.eat(types.star); }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  if (isStatement) {\n    node.id = isStatement === \"nullableID\" && this.type != types.name ? null : this.parseIdent();\n    if (node.id) {\n      this.checkLVal(node.id, \"var\");\n    }\n  }\n\n  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n  this.inGenerator = node.generator;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n  this.enterFunctionScope();\n\n  if (!isStatement)\n    { node.id = this.type == types.name ? this.parseIdent() : null; }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\")\n};\n\npp$1.parseFunctionParams = function(node) {\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseClass = function(node, isStatement) {\n  var this$1 = this;\n\n  this.next();\n\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (this$1.eat(types.semi)) { continue }\n    var method = this$1.startNode();\n    var isGenerator = this$1.eat(types.star);\n    var isAsync = false;\n    var isMaybeStatic = this$1.type === types.name && this$1.value === \"static\";\n    this$1.parsePropertyName(method);\n    method.static = isMaybeStatic && this$1.type !== types.parenL;\n    if (method.static) {\n      if (isGenerator) { this$1.unexpected(); }\n      isGenerator = this$1.eat(types.star);\n      this$1.parsePropertyName(method);\n    }\n    if (this$1.options.ecmaVersion >= 8 && !isGenerator && !method.computed &&\n        method.key.type === \"Identifier\" && method.key.name === \"async\" && this$1.type !== types.parenL &&\n        !this$1.canInsertSemicolon()) {\n      isAsync = true;\n      this$1.parsePropertyName(method);\n    }\n    method.kind = \"method\";\n    var isGetSet = false;\n    if (!method.computed) {\n      var key = method.key;\n      if (!isGenerator && !isAsync && key.type === \"Identifier\" && this$1.type !== types.parenL && (key.name === \"get\" || key.name === \"set\")) {\n        isGetSet = true;\n        method.kind = key.name;\n        key = this$1.parsePropertyName(method);\n      }\n      if (!method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n          key.type === \"Literal\" && key.value === \"constructor\")) {\n        if (hadConstructor) { this$1.raise(key.start, \"Duplicate constructor in the same class\"); }\n        if (isGetSet) { this$1.raise(key.start, \"Constructor can't have get/set modifier\"); }\n        if (isGenerator) { this$1.raise(key.start, \"Constructor can't be a generator\"); }\n        if (isAsync) { this$1.raise(key.start, \"Constructor can't be an async method\"); }\n        method.kind = \"constructor\";\n        hadConstructor = true;\n      }\n    }\n    this$1.parseClassMethod(classBody, method, isGenerator, isAsync);\n    if (isGetSet) {\n      var paramCount = method.kind === \"get\" ? 0 : 1;\n      if (method.value.params.length !== paramCount) {\n        var start = method.value.start;\n        if (method.kind === \"get\")\n          { this$1.raiseRecoverable(start, \"getter should have no params\"); }\n        else\n          { this$1.raiseRecoverable(start, \"setter should have exactly one param\"); }\n      } else {\n        if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n          { this$1.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\"); }\n      }\n    }\n  }\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n};\n\npp$1.parseClassMethod = function(classBody, method, isGenerator, isAsync) {\n  method.value = this.parseMethod(isGenerator, isAsync);\n  classBody.body.push(this.finishNode(method, \"MethodDefinition\"));\n};\n\npp$1.parseClassId = function(node, isStatement) {\n  node.id = this.type === types.name ? this.parseIdent() : isStatement === true ? this.unexpected() : null;\n};\n\npp$1.parseClassSuper = function(node) {\n  node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n};\n\n// Parses module export declaration.\n\npp$1.parseExport = function(node, exports) {\n  var this$1 = this;\n\n  this.next();\n  // export * from '...'\n  if (this.eat(types.star)) {\n    this.expectContextual(\"from\");\n    node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(types._default)) { // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart);\n    var isAsync;\n    if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) { this.next(); }\n      node.declaration = this.parseFunction(fNode, \"nullableID\", false, isAsync);\n    } else if (this.type === types._class) {\n      var cNode = this.startNode();\n      node.declaration = this.parseClass(cNode, \"nullableID\");\n    } else {\n      node.declaration = this.parseMaybeAssign();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(true);\n    if (node.declaration.type === \"VariableDeclaration\")\n      { this.checkVariableExport(exports, node.declaration.declarations); }\n    else\n      { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n    node.specifiers = [];\n    node.source = null;\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n    if (this.eatContextual(\"from\")) {\n      node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n    } else {\n      // check for keywords used as local names\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        var spec = list[i];\n\n        this$1.checkUnreserved(spec.local);\n      }\n\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n};\n\npp$1.checkExport = function(exports, name, pos) {\n  if (!exports) { return }\n  if (has(exports, name))\n    { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n  exports[name] = true;\n};\n\npp$1.checkPatternExport = function(exports, pat) {\n  var this$1 = this;\n\n  var type = pat.type;\n  if (type == \"Identifier\")\n    { this.checkExport(exports, pat.name, pat.start); }\n  else if (type == \"ObjectPattern\")\n    { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n      {\n        var prop = list[i];\n\n        this$1.checkPatternExport(exports, prop.value);\n      } }\n  else if (type == \"ArrayPattern\")\n    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n\n        if (elt) { this$1.checkPatternExport(exports, elt); }\n    } }\n  else if (type == \"AssignmentPattern\")\n    { this.checkPatternExport(exports, pat.left); }\n  else if (type == \"ParenthesizedExpression\")\n    { this.checkPatternExport(exports, pat.expression); }\n};\n\npp$1.checkVariableExport = function(exports, decls) {\n  var this$1 = this;\n\n  if (!exports) { return }\n  for (var i = 0, list = decls; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    this$1.checkPatternExport(exports, decl.id);\n  }\n};\n\npp$1.shouldParseExportStatement = function() {\n  return this.type.keyword === \"var\" ||\n    this.type.keyword === \"const\" ||\n    this.type.keyword === \"class\" ||\n    this.type.keyword === \"function\" ||\n    this.isLet() ||\n    this.isAsyncFunction()\n};\n\n// Parses a comma-separated list of module exports.\n\npp$1.parseExportSpecifiers = function(exports) {\n  var this$1 = this;\n\n  var nodes = [], first = true;\n  // export { x, y as z } [from '...']\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node = this$1.startNode();\n    node.local = this$1.parseIdent(true);\n    node.exported = this$1.eatContextual(\"as\") ? this$1.parseIdent(true) : node.local;\n    this$1.checkExport(exports, node.exported.name, node.exported.start);\n    nodes.push(this$1.finishNode(node, \"ExportSpecifier\"));\n  }\n  return nodes\n};\n\n// Parses import declaration.\n\npp$1.parseImport = function(node) {\n  this.next();\n  // import '...'\n  if (this.type === types.string) {\n    node.specifiers = empty;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\")\n};\n\n// Parses a comma-separated list of module imports.\n\npp$1.parseImportSpecifiers = function() {\n  var this$1 = this;\n\n  var nodes = [], first = true;\n  if (this.type === types.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLVal(node.local, \"let\");\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n    if (!this.eat(types.comma)) { return nodes }\n  }\n  if (this.type === types.star) {\n    var node$1 = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node$1.local = this.parseIdent();\n    this.checkLVal(node$1.local, \"let\");\n    nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n    return nodes\n  }\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node$2 = this$1.startNode();\n    node$2.imported = this$1.parseIdent(true);\n    if (this$1.eatContextual(\"as\")) {\n      node$2.local = this$1.parseIdent();\n    } else {\n      this$1.checkUnreserved(node$2.imported);\n      node$2.local = node$2.imported;\n    }\n    this$1.checkLVal(node$2.local, \"let\");\n    nodes.push(this$1.finishNode(node$2, \"ImportSpecifier\"));\n  }\n  return nodes\n};\n\nvar pp$2 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$2.toAssignable = function(node, isBinding) {\n  var this$1 = this;\n\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n      if (this.inAsync && node.name === \"await\")\n        { this.raise(node.start, \"Can not use 'await' as identifier inside an async function\"); }\n      break\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\";\n      for (var i = 0, list = node.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      if (prop.kind !== \"init\") { this$1.raise(prop.key.start, \"Object pattern can't contain getter or setter\"); }\n        this$1.toAssignable(prop.value, isBinding);\n      }\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\";\n      this.toAssignableList(node.elements, isBinding);\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator === \"=\") {\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isBinding);\n        // falls through to AssignmentPattern\n      } else {\n        this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\");\n        break\n      }\n\n    case \"AssignmentPattern\":\n      break\n\n    case \"ParenthesizedExpression\":\n      this.toAssignable(node.expression, isBinding);\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) { break }\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\");\n    }\n  }\n  return node\n};\n\n// Convert list of expression atoms to binding list.\n\npp$2.toAssignableList = function(exprList, isBinding) {\n  var this$1 = this;\n\n  var end = exprList.length;\n  if (end) {\n    var last = exprList[end - 1];\n    if (last && last.type == \"RestElement\") {\n      --end;\n    } else if (last && last.type == \"SpreadElement\") {\n      last.type = \"RestElement\";\n      var arg = last.argument;\n      this.toAssignable(arg, isBinding);\n      --end;\n    }\n\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      { this.unexpected(last.argument.start); }\n  }\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) { this$1.toAssignable(elt, isBinding); }\n  }\n  return exprList\n};\n\n// Parses spread element.\n\npp$2.parseSpread = function(refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\")\n};\n\npp$2.parseRestBinding = function() {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (this.options.ecmaVersion === 6 && this.type !== types.name)\n    { this.unexpected(); }\n\n  node.argument = this.parseBindingAtom();\n\n  return this.finishNode(node, \"RestElement\")\n};\n\n// Parses lvalue (assignable) atom.\n\npp$2.parseBindingAtom = function() {\n  if (this.options.ecmaVersion < 6) { return this.parseIdent() }\n  switch (this.type) {\n  case types.name:\n    return this.parseIdent()\n\n  case types.bracketL:\n    var node = this.startNode();\n    this.next();\n    node.elements = this.parseBindingList(types.bracketR, true, true);\n    return this.finishNode(node, \"ArrayPattern\")\n\n  case types.braceL:\n    return this.parseObj(true)\n\n  default:\n    this.unexpected();\n  }\n};\n\npp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n  var this$1 = this;\n\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (first) { first = false; }\n    else { this$1.expect(types.comma); }\n    if (allowEmpty && this$1.type === types.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this$1.afterTrailingComma(close)) {\n      break\n    } else if (this$1.type === types.ellipsis) {\n      var rest = this$1.parseRestBinding();\n      this$1.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this$1.type === types.comma) { this$1.raise(this$1.start, \"Comma is not permitted after the rest element\"); }\n      this$1.expect(close);\n      break\n    } else {\n      var elem = this$1.parseMaybeDefault(this$1.start, this$1.startLoc);\n      this$1.parseBindingListItem(elem);\n      elts.push(elem);\n    }\n  }\n  return elts\n};\n\npp$2.parseBindingListItem = function(param) {\n  return param\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\")\n};\n\n// Verify that a node is an lval — something that can be assigned\n// to.\n// bindingType can be either:\n// 'var' indicating that the lval creates a 'var' binding\n// 'let' indicating that the lval creates a lexical ('let' or 'const') binding\n// 'none' indicating that the binding should be checked for illegal identifiers, but not for duplicate references\n\npp$2.checkLVal = function(expr, bindingType, checkClashes) {\n  var this$1 = this;\n\n  switch (expr.type) {\n  case \"Identifier\":\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      { this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n    if (checkClashes) {\n      if (has(checkClashes, expr.name))\n        { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n      checkClashes[expr.name] = true;\n    }\n    if (bindingType && bindingType !== \"none\") {\n      if (\n        bindingType === \"var\" && !this.canDeclareVarName(expr.name) ||\n        bindingType !== \"var\" && !this.canDeclareLexicalName(expr.name)\n      ) {\n        this.raiseRecoverable(expr.start, (\"Identifier '\" + (expr.name) + \"' has already been declared\"));\n      }\n      if (bindingType === \"var\") {\n        this.declareVarName(expr.name);\n      } else {\n        this.declareLexicalName(expr.name);\n      }\n    }\n    break\n\n  case \"MemberExpression\":\n    if (bindingType) { this.raiseRecoverable(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" member expression\"); }\n    break\n\n  case \"ObjectPattern\":\n    for (var i = 0, list = expr.properties; i < list.length; i += 1)\n      {\n    var prop = list[i];\n\n    this$1.checkLVal(prop.value, bindingType, checkClashes);\n  }\n    break\n\n  case \"ArrayPattern\":\n    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n      var elem = list$1[i$1];\n\n    if (elem) { this$1.checkLVal(elem, bindingType, checkClashes); }\n    }\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLVal(expr.left, bindingType, checkClashes);\n    break\n\n  case \"RestElement\":\n    this.checkLVal(expr.argument, bindingType, checkClashes);\n    break\n\n  case \"ParenthesizedExpression\":\n    this.checkLVal(expr.expression, bindingType, checkClashes);\n    break\n\n  default:\n    this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nvar pp$3 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$3.checkPropClash = function(prop, propHash) {\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    { return }\n  var key = prop.key;\n  var name;\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) { this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\"); }\n      propHash.proto = true;\n    }\n    return\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var redefinition;\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n    if (redefinition)\n      { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$3.parseExpression = function(noIn, refDestructuringErrors) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n  if (this.type === types.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types.comma)) { node.expressions.push(this$1.parseMaybeAssign(noIn, refDestructuringErrors)); }\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n  if (this.inGenerator && this.isContextual(\"yield\")) { return this.parseYield() }\n\n  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1;\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors;\n    ownDestructuringErrors = true;\n  }\n\n  var startPos = this.start, startLoc = this.startLoc;\n  if (this.type == types.parenL || this.type == types.name)\n    { this.potentialArrowAt = this.start; }\n  var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n  if (this.type.isAssign) {\n    this.checkPatternErrors(refDestructuringErrors, true);\n    if (!ownDestructuringErrors) { DestructuringErrors.call(refDestructuringErrors); }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    node.left = this.type === types.eq ? this.toAssignable(left) : left;\n    refDestructuringErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n    this.checkLVal(left);\n    this.next();\n    node.right = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n  }\n  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n  return left\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprOps(noIn, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  if (this.eat(types.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types.colon);\n    node.alternate = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n};\n\n// Start the precedence parser.\n\npp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  return expr.start == startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n  var prec = this.type.binop;\n  if (prec != null && (!noIn || this.type !== types._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n      var op = this.value;\n      this.next();\n      var startPos = this.start, startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n    }\n  }\n  return left\n};\n\npp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, expr;\n  if (this.inAsync && this.isContextual(\"await\")) {\n    expr = this.parseAwait(refDestructuringErrors);\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(), update = this.type === types.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) { this.checkLVal(node.argument); }\n    else if (this.strict && node.operator === \"delete\" &&\n             node.argument.type === \"Identifier\")\n      { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n    else { sawUnary = true; }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.operator = this$1.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this$1.checkLVal(expr);\n      this$1.next();\n      expr = this$1.finishNode(node$1, \"UpdateExpression\");\n    }\n  }\n\n  if (!sawUnary && this.eat(types.starstar))\n    { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false) }\n  else\n    { return expr }\n};\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$3.parseExprSubscripts = function(refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors);\n  var skipArrowSubscripts = expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\";\n  if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) { return expr }\n  var result = this.parseSubscripts(expr, startPos, startLoc);\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n  }\n  return result\n};\n\npp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n  var this$1 = this;\n\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n      this.lastTokEnd == base.end && !this.canInsertSemicolon();\n  for (var computed = (void 0);;) {\n    if ((computed = this$1.eat(types.bracketL)) || this$1.eat(types.dot)) {\n      var node = this$1.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed ? this$1.parseExpression() : this$1.parseIdent(true);\n      node.computed = !!computed;\n      if (computed) { this$1.expect(types.bracketR); }\n      base = this$1.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this$1.eat(types.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this$1.yieldPos, oldAwaitPos = this$1.awaitPos;\n      this$1.yieldPos = 0;\n      this$1.awaitPos = 0;\n      var exprList = this$1.parseExprList(types.parenR, this$1.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !this$1.canInsertSemicolon() && this$1.eat(types.arrow)) {\n        this$1.checkPatternErrors(refDestructuringErrors, false);\n        this$1.checkYieldAwaitInDefaultParams();\n        this$1.yieldPos = oldYieldPos;\n        this$1.awaitPos = oldAwaitPos;\n        return this$1.parseArrowExpression(this$1.startNodeAt(startPos, startLoc), exprList, true)\n      }\n      this$1.checkExpressionErrors(refDestructuringErrors, true);\n      this$1.yieldPos = oldYieldPos || this$1.yieldPos;\n      this$1.awaitPos = oldAwaitPos || this$1.awaitPos;\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      base = this$1.finishNode(node$1, \"CallExpression\");\n    } else if (this$1.type === types.backQuote) {\n      var node$2 = this$1.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this$1.parseTemplate({isTagged: true});\n      base = this$1.finishNode(node$2, \"TaggedTemplateExpression\");\n    } else {\n      return base\n    }\n  }\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$3.parseExprAtom = function(refDestructuringErrors) {\n  var node, canBeArrow = this.potentialArrowAt == this.start;\n  switch (this.type) {\n  case types._super:\n    if (!this.inFunction)\n      { this.raise(this.start, \"'super' outside of function or class\"); }\n\n  case types._this:\n    var type = this.type === types._this ? \"ThisExpression\" : \"Super\";\n    node = this.startNode();\n    this.next();\n    return this.finishNode(node, type)\n\n  case types.name:\n    var startPos = this.start, startLoc = this.startLoc;\n    var id = this.parseIdent(this.type !== types.name);\n    if (this.options.ecmaVersion >= 8 && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function))\n      { return this.parseFunction(this.startNodeAt(startPos, startLoc), false, false, true) }\n    if (canBeArrow && !this.canInsertSemicolon()) {\n      if (this.eat(types.arrow))\n        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }\n      if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name) {\n        id = this.parseIdent();\n        if (this.canInsertSemicolon() || !this.eat(types.arrow))\n          { this.unexpected(); }\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n      }\n    }\n    return id\n\n  case types.regexp:\n    var value = this.value;\n    node = this.parseLiteral(value.value);\n    node.regex = {pattern: value.pattern, flags: value.flags};\n    return node\n\n  case types.num: case types.string:\n    return this.parseLiteral(this.value)\n\n  case types._null: case types._true: case types._false:\n    node = this.startNode();\n    node.value = this.type === types._null ? null : this.type === types._true;\n    node.raw = this.type.keyword;\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case types.parenL:\n    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);\n    if (refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n        { refDestructuringErrors.parenthesizedAssign = start; }\n      if (refDestructuringErrors.parenthesizedBind < 0)\n        { refDestructuringErrors.parenthesizedBind = start; }\n    }\n    return expr\n\n  case types.bracketL:\n    node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case types.braceL:\n    return this.parseObj(false, refDestructuringErrors)\n\n  case types._function:\n    node = this.startNode();\n    this.next();\n    return this.parseFunction(node, false)\n\n  case types._class:\n    return this.parseClass(this.startNode(), false)\n\n  case types._new:\n    return this.parseNew()\n\n  case types.backQuote:\n    return this.parseTemplate()\n\n  default:\n    this.unexpected();\n  }\n};\n\npp$3.parseLiteral = function(value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  this.next();\n  return this.finishNode(node, \"Literal\")\n};\n\npp$3.parseParenExpression = function() {\n  this.expect(types.parenL);\n  var val = this.parseExpression();\n  this.expect(types.parenR);\n  return val\n};\n\npp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n\n    var innerStartPos = this.start, innerStartLoc = this.startLoc;\n    var exprList = [], first = true, lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart, innerParenStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    while (this.type !== types.parenR) {\n      first ? first = false : this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(types.parenR, true)) {\n        lastIsComma = true;\n        break\n      } else if (this$1.type === types.ellipsis) {\n        spreadStart = this$1.start;\n        exprList.push(this$1.parseParenItem(this$1.parseRestBinding()));\n        if (this$1.type === types.comma) { this$1.raise(this$1.start, \"Comma is not permitted after the rest element\"); }\n        break\n      } else {\n        if (this$1.type === types.parenL && !innerParenStart) {\n          innerParenStart = this$1.start;\n        }\n        exprList.push(this$1.parseMaybeAssign(false, refDestructuringErrors, this$1.parseParenItem));\n      }\n    }\n    var innerEndPos = this.start, innerEndLoc = this.startLoc;\n    this.expect(types.parenR);\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      if (innerParenStart) { this.unexpected(innerParenStart); }\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList)\n    }\n\n    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n    if (spreadStart) { this.unexpected(spreadStart); }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n};\n\npp$3.parseParenItem = function(item) {\n  return item\n};\n\npp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty$1 = [];\n\npp$3.parseNew = function() {\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n    node.meta = meta;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\")\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\"); }\n    if (!this.inFunction)\n      { this.raiseRecoverable(node.start, \"new.target can only be used in functions\"); }\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var startPos = this.start, startLoc = this.startLoc;\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }\n  else { node.arguments = empty$1; }\n  return this.finishNode(node, \"NewExpression\")\n};\n\n// Parse template expression.\n\npp$3.parseTemplateElement = function(ref) {\n  var isTagged = ref.isTagged;\n\n  var elem = this.startNode();\n  if (this.type === types.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n    }\n    elem.value = {\n      raw: this.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    };\n  }\n  this.next();\n  elem.tail = this.type === types.backQuote;\n  return this.finishNode(elem, \"TemplateElement\")\n};\n\npp$3.parseTemplate = function(ref) {\n  var this$1 = this;\n  if ( ref === void 0 ) ref = {};\n  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({isTagged: isTagged});\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    this$1.expect(types.dollarBraceL);\n    node.expressions.push(this$1.parseExpression());\n    this$1.expect(types.braceR);\n    node.quasis.push(curElt = this$1.parseTemplateElement({isTagged: isTagged}));\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\")\n};\n\n// Parse an object literal or binding pattern.\n\npp$3.isAsyncProp = function(prop) {\n  return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n    (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL) &&\n    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\npp$3.parseObj = function(isPattern, refDestructuringErrors) {\n  var this$1 = this;\n\n  var node = this.startNode(), first = true, propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var prop = this$1.startNode(), isGenerator = (void 0), isAsync = (void 0), startPos = (void 0), startLoc = (void 0);\n    if (this$1.options.ecmaVersion >= 6) {\n      prop.method = false;\n      prop.shorthand = false;\n      if (isPattern || refDestructuringErrors) {\n        startPos = this$1.start;\n        startLoc = this$1.startLoc;\n      }\n      if (!isPattern)\n        { isGenerator = this$1.eat(types.star); }\n    }\n    this$1.parsePropertyName(prop);\n    if (!isPattern && this$1.options.ecmaVersion >= 8 && !isGenerator && this$1.isAsyncProp(prop)) {\n      isAsync = true;\n      this$1.parsePropertyName(prop, refDestructuringErrors);\n    } else {\n      isAsync = false;\n    }\n    this$1.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors);\n    this$1.checkPropClash(prop, propHash);\n    node.properties.push(this$1.finishNode(prop, \"Property\"));\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n};\n\npp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors) {\n  if ((isGenerator || isAsync) && this.type === types.colon)\n    { this.unexpected(); }\n\n  if (this.eat(types.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n    if (isPattern) { this.unexpected(); }\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n  } else if (this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n             (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n             (this.type != types.comma && this.type != types.braceR)) {\n    if (isGenerator || isAsync || isPattern) { this.unexpected(); }\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\")\n        { this.raiseRecoverable(start, \"getter should have no params\"); }\n      else\n        { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n    }\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    this.checkUnreserved(prop.key);\n    prop.kind = \"init\";\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else if (this.type === types.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0)\n        { refDestructuringErrors.shorthandAssign = this.start; }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else {\n      prop.value = prop.key;\n    }\n    prop.shorthand = true;\n  } else { this.unexpected(); }\n};\n\npp$3.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types.bracketR);\n      return prop.key\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(true)\n};\n\n// Initialize empty function node.\n\npp$3.initFunction = function(node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = false;\n    node.expression = false;\n  }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = false; }\n};\n\n// Parse object or class method.\n\npp$3.parseMethod = function(isGenerator, isAsync) {\n  var node = this.startNode(), oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6)\n    { node.generator = isGenerator; }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.inGenerator = node.generator;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n  this.enterFunctionScope();\n\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, \"FunctionExpression\")\n};\n\n// Parse arrow function expression with given parameters.\n\npp$3.parseArrowExpression = function(node, params, isAsync) {\n  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n\n  this.enterFunctionScope();\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.inGenerator = false;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n};\n\n// Parse function body and check parameters.\n\npp$3.parseFunctionBody = function(node, isArrowFunction) {\n  var isExpression = isArrowFunction && this.type !== types.braceL;\n  var oldStrict = this.strict, useStrict = false;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign();\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end);\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple)\n        { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels;\n    this.labels = [];\n    if (useStrict) { this.strict = true; }\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && this.isSimpleParamList(node.params));\n    node.body = this.parseBlock(false);\n    node.expression = false;\n    this.labels = oldLabels;\n  }\n  this.exitFunctionScope();\n\n  if (this.strict && node.id) {\n    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n    this.checkLVal(node.id, \"none\");\n  }\n  this.strict = oldStrict;\n};\n\npp$3.isSimpleParamList = function(params) {\n  for (var i = 0, list = params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    if (param.type !== \"Identifier\") { return false\n  } }\n  return true\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$3.checkParams = function(node, allowDuplicates) {\n  var this$1 = this;\n\n  var nameHash = {};\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    this$1.checkLVal(param, \"var\", allowDuplicates ? null : nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var this$1 = this;\n\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(close)) { break }\n    } else { first = false; }\n\n    var elt = (void 0);\n    if (allowEmpty && this$1.type === types.comma)\n      { elt = null; }\n    else if (this$1.type === types.ellipsis) {\n      elt = this$1.parseSpread(refDestructuringErrors);\n      if (refDestructuringErrors && this$1.type === types.comma && refDestructuringErrors.trailingComma < 0)\n        { refDestructuringErrors.trailingComma = this$1.start; }\n    } else {\n      elt = this$1.parseMaybeAssign(false, refDestructuringErrors);\n    }\n    elts.push(elt);\n  }\n  return elts\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$3.checkUnreserved = function(ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n\n  if (this.inGenerator && name === \"yield\")\n    { this.raiseRecoverable(start, \"Can not use 'yield' as identifier inside a generator\"); }\n  if (this.inAsync && name === \"await\")\n    { this.raiseRecoverable(start, \"Can not use 'await' as identifier inside an async function\"); }\n  if (this.isKeyword(name))\n    { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n  if (this.options.ecmaVersion < 6 &&\n    this.input.slice(start, end).indexOf(\"\\\\\") != -1) { return }\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n  if (re.test(name))\n    { this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\")); }\n};\n\npp$3.parseIdent = function(liberal, isBinding) {\n  var node = this.startNode();\n  if (liberal && this.options.allowReserved == \"never\") { liberal = false; }\n  if (this.type === types.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword;\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  this.finishNode(node, \"Identifier\");\n  if (!liberal) { this.checkUnreserved(node); }\n  return node\n};\n\n// Parses yield expression inside generator.\n\npp$3.parseYield = function() {\n  if (!this.yieldPos) { this.yieldPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  if (this.type == types.semi || this.canInsertSemicolon() || (this.type != types.star && !this.type.startsExpr)) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types.star);\n    node.argument = this.parseMaybeAssign();\n  }\n  return this.finishNode(node, \"YieldExpression\")\n};\n\npp$3.parseAwait = function() {\n  if (!this.awaitPos) { this.awaitPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, true);\n  return this.finishNode(node, \"AwaitExpression\")\n};\n\nvar pp$4 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function(pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n  throw err\n};\n\npp$4.raiseRecoverable = pp$4.raise;\n\npp$4.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n};\n\nvar pp$5 = Parser.prototype;\n\n// Object.assign polyfill\nvar assign = Object.assign || function(target) {\n  var sources = [], len = arguments.length - 1;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];\n\n  for (var i = 0, list = sources; i < list.length; i += 1) {\n    var source = list[i];\n\n    for (var key in source) {\n      if (has(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target\n};\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$5.enterFunctionScope = function() {\n  // var: a hash of var-declared names in the current lexical scope\n  // lexical: a hash of lexically-declared names in the current lexical scope\n  // childVar: a hash of var-declared names in all child lexical scopes of the current lexical scope (within the current function scope)\n  // parentLexical: a hash of lexically-declared names in all parent lexical scopes of the current lexical scope (within the current function scope)\n  this.scopeStack.push({var: {}, lexical: {}, childVar: {}, parentLexical: {}});\n};\n\npp$5.exitFunctionScope = function() {\n  this.scopeStack.pop();\n};\n\npp$5.enterLexicalScope = function() {\n  var parentScope = this.scopeStack[this.scopeStack.length - 1];\n  var childScope = {var: {}, lexical: {}, childVar: {}, parentLexical: {}};\n\n  this.scopeStack.push(childScope);\n  assign(childScope.parentLexical, parentScope.lexical, parentScope.parentLexical);\n};\n\npp$5.exitLexicalScope = function() {\n  var childScope = this.scopeStack.pop();\n  var parentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  assign(parentScope.childVar, childScope.var, childScope.childVar);\n};\n\n/**\n * A name can be declared with `var` if there are no variables with the same name declared with `let`/`const`\n * in the current lexical scope or any of the parent lexical scopes in this function.\n */\npp$5.canDeclareVarName = function(name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  return !has(currentScope.lexical, name) && !has(currentScope.parentLexical, name)\n};\n\n/**\n * A name can be declared with `let`/`const` if there are no variables with the same name declared with `let`/`const`\n * in the current scope, and there are no variables with the same name declared with `var` in the current scope or in\n * any child lexical scopes in this function.\n */\npp$5.canDeclareLexicalName = function(name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  return !has(currentScope.lexical, name) && !has(currentScope.var, name) && !has(currentScope.childVar, name)\n};\n\npp$5.declareVarName = function(name) {\n  this.scopeStack[this.scopeStack.length - 1].var[name] = true;\n};\n\npp$5.declareLexicalName = function(name) {\n  this.scopeStack[this.scopeStack.length - 1].lexical[name] = true;\n};\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations)\n    { this.loc = new SourceLocation(parser, loc); }\n  if (parser.options.directSourceFile)\n    { this.sourceFile = parser.options.directSourceFile; }\n  if (parser.options.ranges)\n    { this.range = [pos, 0]; }\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$6 = Parser.prototype;\n\npp$6.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n};\n\npp$6.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations)\n    { node.loc.end = loc; }\n  if (this.options.ranges)\n    { node.range[1] = pos; }\n  return node\n}\n\npp$6.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n};\n\n// Finish node at given position\n\npp$6.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n};\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\n\nvar types$1 = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", false),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n  f_stat: new TokContext(\"function\", false),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n};\n\nvar pp$7 = Parser.prototype;\n\npp$7.initialContext = function() {\n  return [types$1.b_stat]\n};\n\npp$7.braceIsBlock = function(prevType) {\n  var parent = this.curContext();\n  if (parent === types$1.f_expr || parent === types$1.f_stat)\n    { return true }\n  if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))\n    { return !parent.isExpr }\n\n  // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n  if (prevType === types._return || prevType == types.name && this.exprAllowed)\n    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n  if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType == types.arrow)\n    { return true }\n  if (prevType == types.braceL)\n    { return parent === types$1.b_stat }\n  if (prevType == types._var || prevType == types.name)\n    { return false }\n  return !this.exprAllowed\n};\n\npp$7.inGeneratorContext = function() {\n  var this$1 = this;\n\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this$1.context[i];\n    if (context.token === \"function\")\n      { return context.generator }\n  }\n  return false\n};\n\npp$7.updateContext = function(prevType) {\n  var update, type = this.type;\n  if (type.keyword && prevType == types.dot)\n    { this.exprAllowed = false; }\n  else if (update = type.updateContext)\n    { update.call(this, prevType); }\n  else\n    { this.exprAllowed = type.beforeExpr; }\n};\n\n// Token-specific context update code\n\ntypes.parenR.updateContext = types.braceR.updateContext = function() {\n  if (this.context.length == 1) {\n    this.exprAllowed = true;\n    return\n  }\n  var out = this.context.pop();\n  if (out === types$1.b_stat && this.curContext().token === \"function\") {\n    out = this.context.pop();\n  }\n  this.exprAllowed = !out.isExpr;\n};\n\ntypes.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n  this.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function() {\n  this.context.push(types$1.b_tmpl);\n  this.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function(prevType) {\n  var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n  this.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n};\n\ntypes._function.updateContext = types._class.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&\n      !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))\n    { this.context.push(types$1.f_expr); }\n  else\n    { this.context.push(types$1.f_stat); }\n  this.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function() {\n  if (this.curContext() === types$1.q_tmpl)\n    { this.context.pop(); }\n  else\n    { this.context.push(types$1.q_tmpl); }\n  this.exprAllowed = false;\n};\n\ntypes.star.updateContext = function(prevType) {\n  if (prevType == types._function) {\n    var index = this.context.length - 1;\n    if (this.context[index] === types$1.f_expr)\n      { this.context[index] = types$1.f_expr_gen; }\n    else\n      { this.context[index] = types$1.f_gen; }\n  }\n  this.exprAllowed = true;\n};\n\ntypes.name.updateContext = function(prevType) {\n  var allowed = false;\n  if (this.options.ecmaVersion >= 6) {\n    if (this.value == \"of\" && !this.exprAllowed ||\n        this.value == \"yield\" && this.inGeneratorContext())\n      { allowed = true; }\n  }\n  this.exprAllowed = allowed;\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations)\n    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n  if (p.options.ranges)\n    { this.range = [p.start, p.end]; }\n};\n\n// ## Tokenizer\n\nvar pp$8 = Parser.prototype;\n\n// Are we running under Rhino?\nvar isRhino = typeof Packages == \"object\" && Object.prototype.toString.call(Packages) == \"[object JavaPackage]\";\n\n// Move to the next token\n\npp$8.next = function() {\n  if (this.options.onToken)\n    { this.options.onToken(new Token(this)); }\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp$8.getToken = function() {\n  this.next();\n  return new Token(this)\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  { pp$8[Symbol.iterator] = function() {\n    var this$1 = this;\n\n    return {\n      next: function () {\n        var token = this$1.getToken();\n        return {\n          done: token.type === types.eof,\n          value: token\n        }\n      }\n    }\n  }; }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\npp$8.curContext = function() {\n  return this.context[this.context.length - 1]\n};\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp$8.nextToken = function() {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n  this.start = this.pos;\n  if (this.options.locations) { this.startLoc = this.curPosition(); }\n  if (this.pos >= this.input.length) { return this.finishToken(types.eof) }\n\n  if (curContext.override) { return curContext.override(this) }\n  else { this.readToken(this.fullCharCodeAtPos()); }\n};\n\npp$8.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    { return this.readWord() }\n\n  return this.getTokenFromCode(code)\n};\n\npp$8.fullCharCodeAtPos = function() {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xe000) { return code }\n  var next = this.input.charCodeAt(this.pos + 1);\n  return (code << 10) + next - 0x35fdc00\n};\n\npp$8.skipBlockComment = function() {\n  var this$1 = this;\n\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n  this.pos = end + 2;\n  if (this.options.locations) {\n    lineBreakG.lastIndex = start;\n    var match;\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n      ++this$1.curLine;\n      this$1.lineStart = match.index + match[0].length;\n    }\n  }\n  if (this.options.onComment)\n    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\npp$8.skipLineComment = function(startSkip) {\n  var this$1 = this;\n\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this$1.input.charCodeAt(++this$1.pos);\n  }\n  if (this.options.onComment)\n    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp$8.skipSpace = function() {\n  var this$1 = this;\n\n  loop: while (this.pos < this.input.length) {\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    switch (ch) {\n    case 32: case 160: // ' '\n      ++this$1.pos;\n      break\n    case 13:\n      if (this$1.input.charCodeAt(this$1.pos + 1) === 10) {\n        ++this$1.pos;\n      }\n    case 10: case 8232: case 8233:\n      ++this$1.pos;\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n      break\n    case 47: // '/'\n      switch (this$1.input.charCodeAt(this$1.pos + 1)) {\n      case 42: // '*'\n        this$1.skipBlockComment();\n        break\n      case 47:\n        this$1.skipLineComment(2);\n        break\n      default:\n        break loop\n      }\n      break\n    default:\n      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++this$1.pos;\n      } else {\n        break loop\n      }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp$8.finishToken = function(type, val) {\n  this.end = this.pos;\n  if (this.options.locations) { this.endLoc = this.curPosition(); }\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp$8.readToken_dot = function() {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) { return this.readNumber(true) }\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(types.ellipsis)\n  } else {\n    ++this.pos;\n    return this.finishToken(types.dot)\n  }\n};\n\npp$8.readToken_slash = function() { // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.slash, 1)\n};\n\npp$8.readToken_mult_modulo_exp = function(code) { // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types.star : types.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && next === 42) {\n    ++size;\n    tokentype = types.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) { return this.finishOp(types.assign, size + 1) }\n  return this.finishOp(tokentype, size)\n};\n\npp$8.readToken_pipe_amp = function(code) { // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) { return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2) }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)\n};\n\npp$8.readToken_caret = function() { // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.bitwiseXOR, 1)\n};\n\npp$8.readToken_plus_min = function(code) { // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next == 45 && this.input.charCodeAt(this.pos + 2) == 62 &&\n        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    return this.finishOp(types.incDec, 2)\n  }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.plusMin, 1)\n};\n\npp$8.readToken_lt_gt = function(code) { // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }\n    return this.finishOp(types.bitShift, size)\n  }\n  if (next == 33 && code == 60 && this.input.charCodeAt(this.pos + 2) == 45 &&\n      this.input.charCodeAt(this.pos + 3) == 45) {\n    if (this.inModule) { this.unexpected(); }\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken()\n  }\n  if (next === 61) { size = 2; }\n  return this.finishOp(types.relational, size)\n};\n\npp$8.readToken_eq_excl = function(code) { // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2;\n    return this.finishToken(types.arrow)\n  }\n  return this.finishOp(code === 61 ? types.eq : types.prefix, 1)\n};\n\npp$8.getTokenFromCode = function(code) {\n  switch (code) {\n    // The interpretation of a dot depends on whether it is followed\n    // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n    // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(types.parenL)\n  case 41: ++this.pos; return this.finishToken(types.parenR)\n  case 59: ++this.pos; return this.finishToken(types.semi)\n  case 44: ++this.pos; return this.finishToken(types.comma)\n  case 91: ++this.pos; return this.finishToken(types.bracketL)\n  case 93: ++this.pos; return this.finishToken(types.bracketR)\n  case 123: ++this.pos; return this.finishToken(types.braceL)\n  case 125: ++this.pos; return this.finishToken(types.braceR)\n  case 58: ++this.pos; return this.finishToken(types.colon)\n  case 63: ++this.pos; return this.finishToken(types.question)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) { break }\n    ++this.pos;\n    return this.finishToken(types.backQuote)\n\n  case 48: // '0'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n    }\n    // Anything else beginning with a digit is an integer, octal\n    // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n    // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n    // Operators are parsed inline in tiny state machines. '=' (61) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 126: // '~'\n    return this.finishOp(types.prefix, 1)\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp$8.finishOp = function(type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str)\n};\n\n// Parse a regular expression. Some context-awareness is necessary,\n// since a '/' inside a '[]' set does not end the expression.\n\nfunction tryCreateRegexp(src, flags, throwErrorAt, parser) {\n  try {\n    return new RegExp(src, flags)\n  } catch (e) {\n    if (throwErrorAt !== undefined) {\n      if (e instanceof SyntaxError) { parser.raise(throwErrorAt, \"Error parsing regular expression: \" + e.message); }\n      throw e\n    }\n  }\n}\n\nvar regexpUnicodeSupport = !!tryCreateRegexp(\"\\uffff\", \"u\");\n\npp$8.readRegexp = function() {\n  var this$1 = this;\n\n  var escaped, inClass, start = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(start, \"Unterminated regular expression\"); }\n    var ch = this$1.input.charAt(this$1.pos);\n    if (lineBreak.test(ch)) { this$1.raise(start, \"Unterminated regular expression\"); }\n    if (!escaped) {\n      if (ch === \"[\") { inClass = true; }\n      else if (ch === \"]\" && inClass) { inClass = false; }\n      else if (ch === \"/\" && !inClass) { break }\n      escaped = ch === \"\\\\\";\n    } else { escaped = false; }\n    ++this$1.pos;\n  }\n  var content = this.input.slice(start, this.pos);\n  ++this.pos;\n  // Need to use `readWord1` because '\\uXXXX' sequences are allowed\n  // here (don't ask).\n  var mods = this.readWord1();\n  var tmp = content, tmpFlags = \"\";\n  if (mods) {\n    var validFlags = /^[gim]*$/;\n    if (this.options.ecmaVersion >= 6) { validFlags = /^[gimuy]*$/; }\n    if (!validFlags.test(mods)) { this.raise(start, \"Invalid regular expression flag\"); }\n    if (mods.indexOf(\"u\") >= 0) {\n      if (regexpUnicodeSupport) {\n        tmpFlags = \"u\";\n      } else {\n        // Replace each astral symbol and every Unicode escape sequence that\n        // possibly represents an astral symbol or a paired surrogate with a\n        // single ASCII symbol to avoid throwing on regular expressions that\n        // are only valid in combination with the `/u` flag.\n        // Note: replacing with the ASCII symbol `x` might cause false\n        // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n        // perfectly valid pattern that is equivalent to `[a-b]`, but it would\n        // be replaced by `[x-b]` which throws an error.\n        tmp = tmp.replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function (_match, code, offset) {\n          code = Number(\"0x\" + code);\n          if (code > 0x10FFFF) { this$1.raise(start + offset + 3, \"Code point out of bounds\"); }\n          return \"x\"\n        });\n        tmp = tmp.replace(/\\\\u([a-fA-F0-9]{4})|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, \"x\");\n        tmpFlags = tmpFlags.replace(\"u\", \"\");\n      }\n    }\n  }\n  // Detect invalid regular expressions.\n  var value = null;\n  // Rhino's regular expression parser is flaky and throws uncatchable exceptions,\n  // so don't do detection if we are running under Rhino\n  if (!isRhino) {\n    tryCreateRegexp(tmp, tmpFlags, start, this);\n    // Get a regular expression object for this pattern-flag pair, or `null` in\n    // case the current environment doesn't support the flags it uses.\n    value = tryCreateRegexp(content, mods);\n  }\n  return this.finishToken(types.regexp, {pattern: content, flags: mods, value: value})\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp$8.readInt = function(radix, len) {\n  var this$1 = this;\n\n  var start = this.pos, total = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    var code = this$1.input.charCodeAt(this$1.pos), val = (void 0);\n    if (code >= 97) { val = code - 97 + 10; } // a\n    else if (code >= 65) { val = code - 65 + 10; } // A\n    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n    else { val = Infinity; }\n    if (val >= radix) { break }\n    ++this$1.pos;\n    total = total * radix + val;\n  }\n  if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n  return total\n};\n\npp$8.readRadixNumber = function(radix) {\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n  return this.finishToken(types.num, val)\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp$8.readNumber = function(startsWithDot) {\n  var start = this.pos, isFloat = false, octal = this.input.charCodeAt(this.pos) === 48;\n  if (!startsWithDot && this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  if (octal && this.pos == start + 1) { octal = false; }\n  var next = this.input.charCodeAt(this.pos);\n  if (next === 46 && !octal) { // '.'\n    ++this.pos;\n    this.readInt(10);\n    isFloat = true;\n    next = this.input.charCodeAt(this.pos);\n  }\n  if ((next === 69 || next === 101) && !octal) { // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) { ++this.pos; } // '+-'\n    if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    isFloat = true;\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n  var str = this.input.slice(start, this.pos), val;\n  if (isFloat) { val = parseFloat(str); }\n  else if (!octal || str.length === 1) { val = parseInt(str, 10); }\n  else if (this.strict) { this.raise(start, \"Invalid number\"); }\n  else if (/[89]/.test(str)) { val = parseInt(str, 10); }\n  else { val = parseInt(str, 8); }\n  return this.finishToken(types.num, val)\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp$8.readCodePoint = function() {\n  var ch = this.input.charCodeAt(this.pos), code;\n\n  if (ch === 123) { // '{'\n    if (this.options.ecmaVersion < 6) { this.unexpected(); }\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code\n};\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) { return String.fromCharCode(code) }\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\npp$8.readString = function(quote) {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = ++this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, \"Unterminated string constant\"); }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === quote) { break }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(false);\n      chunkStart = this$1.pos;\n    } else {\n      if (isNewLine(ch)) { this$1.raise(this$1.start, \"Unterminated string constant\"); }\n      ++this$1.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types.string, out)\n};\n\n// Reads template string tokens.\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\npp$8.tryReadTemplateToken = function() {\n  this.inTemplateElement = true;\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err\n    }\n  }\n\n  this.inTemplateElement = false;\n};\n\npp$8.invalidStringToken = function(position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR\n  } else {\n    this.raise(position, message);\n  }\n};\n\npp$8.readTmplToken = function() {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, \"Unterminated template\"); }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === 96 || ch === 36 && this$1.input.charCodeAt(this$1.pos + 1) === 123) { // '`', '${'\n      if (this$1.pos === this$1.start && (this$1.type === types.template || this$1.type === types.invalidTemplate)) {\n        if (ch === 36) {\n          this$1.pos += 2;\n          return this$1.finishToken(types.dollarBraceL)\n        } else {\n          ++this$1.pos;\n          return this$1.finishToken(types.backQuote)\n        }\n      }\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      return this$1.finishToken(types.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(true);\n      chunkStart = this$1.pos;\n    } else if (isNewLine(ch)) {\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      ++this$1.pos;\n      switch (ch) {\n      case 13:\n        if (this$1.input.charCodeAt(this$1.pos) === 10) { ++this$1.pos; }\n      case 10:\n        out += \"\\n\";\n        break\n      default:\n        out += String.fromCharCode(ch);\n        break\n      }\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n      chunkStart = this$1.pos;\n    } else {\n      ++this$1.pos;\n    }\n  }\n};\n\n// Reads a template token to search for the end, without validating any escape sequences\npp$8.readInvalidTemplateToken = function() {\n  var this$1 = this;\n\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this$1.input[this$1.pos]) {\n    case \"\\\\\":\n      ++this$1.pos;\n      break\n\n    case \"$\":\n      if (this$1.input[this$1.pos + 1] !== \"{\") {\n        break\n      }\n    // falls through\n\n    case \"`\":\n      return this$1.finishToken(types.invalidTemplate, this$1.input.slice(this$1.start, this$1.pos))\n\n    // no default\n    }\n  }\n  this.raise(this.start, \"Unterminated template\");\n};\n\n// Used to read escaped characters\n\npp$8.readEscapedChar = function(inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n    return \"\"\n  default:\n    if (ch >= 48 && ch <= 55) {\n      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n      var octal = parseInt(octalStr, 8);\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1);\n        octal = parseInt(octalStr, 8);\n      }\n      if (octalStr !== \"0\" && (this.strict || inTemplate)) {\n        this.invalidStringToken(this.pos - 2, \"Octal literal in strict mode\");\n      }\n      this.pos += octalStr.length - 1;\n      return String.fromCharCode(octal)\n    }\n    return String.fromCharCode(ch)\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp$8.readHexChar = function(len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n  return n\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp$8.readWord1 = function() {\n  var this$1 = this;\n\n  this.containsEsc = false;\n  var word = \"\", first = true, chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this$1.fullCharCodeAtPos();\n    if (isIdentifierChar(ch, astral)) {\n      this$1.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) { // \"\\\"\n      this$1.containsEsc = true;\n      word += this$1.input.slice(chunkStart, this$1.pos);\n      var escStart = this$1.pos;\n      if (this$1.input.charCodeAt(++this$1.pos) != 117) // \"u\"\n        { this$1.invalidStringToken(this$1.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n      ++this$1.pos;\n      var esc = this$1.readCodePoint();\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        { this$1.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n      word += codePointToString(esc);\n      chunkStart = this$1.pos;\n    } else {\n      break\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp$8.readWord = function() {\n  var word = this.readWord1();\n  var type = types.name;\n  if (this.keywords.test(word)) {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + word); }\n    type = keywords$1[word];\n  }\n  return this.finishToken(type, word)\n};\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n// various contributors and released under an MIT license.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/ternjs/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/ternjs/acorn/issues\n//\n// This file defines the main parser interface. The library also comes\n// with a [error-tolerant parser][dammit] and an\n// [abstract syntax tree walker][walk], defined in other files.\n//\n// [dammit]: acorn_loose.js\n// [walk]: util/walk.js\n\nvar version = \"5.1.1\";\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return new Parser(options, input).parse()\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  var p = new Parser(options, input, pos);\n  p.nextToken();\n  return p.parseExpression()\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return new Parser(options, input)\n}\n\n// This is a terrible kludge to support the existing, pre-ES6\n// interface where the loose parser module retroactively adds exports\n// to this module.\n // eslint-disable-line camelcase\nfunction addLooseExports(parse, Parser$$1, plugins$$1) {\n  exports.parse_dammit = parse; // eslint-disable-line camelcase\n  exports.LooseParser = Parser$$1;\n  exports.pluginsLoose = plugins$$1;\n}\n\nexports.version = version;\nexports.parse = parse;\nexports.parseExpressionAt = parseExpressionAt;\nexports.tokenizer = tokenizer;\nexports.addLooseExports = addLooseExports;\nexports.Parser = Parser;\nexports.plugins = plugins;\nexports.defaultOptions = defaultOptions;\nexports.Position = Position;\nexports.SourceLocation = SourceLocation;\nexports.getLineInfo = getLineInfo;\nexports.Node = Node;\nexports.TokenType = TokenType;\nexports.tokTypes = types;\nexports.keywordTypes = keywords$1;\nexports.TokContext = TokContext;\nexports.tokContexts = types$1;\nexports.isIdentifierChar = isIdentifierChar;\nexports.isIdentifierStart = isIdentifierStart;\nexports.Token = Token;\nexports.isNewLine = isNewLine;\nexports.lineBreak = lineBreak;\nexports.lineBreakG = lineBreakG;\nexports.nonASCIIwhitespace = nonASCIIwhitespace;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","module.exports = {\n  quot: '\\u0022',\n  amp: '&',\n  apos: '\\u0027',\n  lt: '<',\n  gt: '>',\n  nbsp: '\\u00A0',\n  iexcl: '\\u00A1',\n  cent: '\\u00A2',\n  pound: '\\u00A3',\n  curren: '\\u00A4',\n  yen: '\\u00A5',\n  brvbar: '\\u00A6',\n  sect: '\\u00A7',\n  uml: '\\u00A8',\n  copy: '\\u00A9',\n  ordf: '\\u00AA',\n  laquo: '\\u00AB',\n  not: '\\u00AC',\n  shy: '\\u00AD',\n  reg: '\\u00AE',\n  macr: '\\u00AF',\n  deg: '\\u00B0',\n  plusmn: '\\u00B1',\n  sup2: '\\u00B2',\n  sup3: '\\u00B3',\n  acute: '\\u00B4',\n  micro: '\\u00B5',\n  para: '\\u00B6',\n  middot: '\\u00B7',\n  cedil: '\\u00B8',\n  sup1: '\\u00B9',\n  ordm: '\\u00BA',\n  raquo: '\\u00BB',\n  frac14: '\\u00BC',\n  frac12: '\\u00BD',\n  frac34: '\\u00BE',\n  iquest: '\\u00BF',\n  Agrave: '\\u00C0',\n  Aacute: '\\u00C1',\n  Acirc: '\\u00C2',\n  Atilde: '\\u00C3',\n  Auml: '\\u00C4',\n  Aring: '\\u00C5',\n  AElig: '\\u00C6',\n  Ccedil: '\\u00C7',\n  Egrave: '\\u00C8',\n  Eacute: '\\u00C9',\n  Ecirc: '\\u00CA',\n  Euml: '\\u00CB',\n  Igrave: '\\u00CC',\n  Iacute: '\\u00CD',\n  Icirc: '\\u00CE',\n  Iuml: '\\u00CF',\n  ETH: '\\u00D0',\n  Ntilde: '\\u00D1',\n  Ograve: '\\u00D2',\n  Oacute: '\\u00D3',\n  Ocirc: '\\u00D4',\n  Otilde: '\\u00D5',\n  Ouml: '\\u00D6',\n  times: '\\u00D7',\n  Oslash: '\\u00D8',\n  Ugrave: '\\u00D9',\n  Uacute: '\\u00DA',\n  Ucirc: '\\u00DB',\n  Uuml: '\\u00DC',\n  Yacute: '\\u00DD',\n  THORN: '\\u00DE',\n  szlig: '\\u00DF',\n  agrave: '\\u00E0',\n  aacute: '\\u00E1',\n  acirc: '\\u00E2',\n  atilde: '\\u00E3',\n  auml: '\\u00E4',\n  aring: '\\u00E5',\n  aelig: '\\u00E6',\n  ccedil: '\\u00E7',\n  egrave: '\\u00E8',\n  eacute: '\\u00E9',\n  ecirc: '\\u00EA',\n  euml: '\\u00EB',\n  igrave: '\\u00EC',\n  iacute: '\\u00ED',\n  icirc: '\\u00EE',\n  iuml: '\\u00EF',\n  eth: '\\u00F0',\n  ntilde: '\\u00F1',\n  ograve: '\\u00F2',\n  oacute: '\\u00F3',\n  ocirc: '\\u00F4',\n  otilde: '\\u00F5',\n  ouml: '\\u00F6',\n  divide: '\\u00F7',\n  oslash: '\\u00F8',\n  ugrave: '\\u00F9',\n  uacute: '\\u00FA',\n  ucirc: '\\u00FB',\n  uuml: '\\u00FC',\n  yacute: '\\u00FD',\n  thorn: '\\u00FE',\n  yuml: '\\u00FF',\n  OElig: '\\u0152',\n  oelig: '\\u0153',\n  Scaron: '\\u0160',\n  scaron: '\\u0161',\n  Yuml: '\\u0178',\n  fnof: '\\u0192',\n  circ: '\\u02C6',\n  tilde: '\\u02DC',\n  Alpha: '\\u0391',\n  Beta: '\\u0392',\n  Gamma: '\\u0393',\n  Delta: '\\u0394',\n  Epsilon: '\\u0395',\n  Zeta: '\\u0396',\n  Eta: '\\u0397',\n  Theta: '\\u0398',\n  Iota: '\\u0399',\n  Kappa: '\\u039A',\n  Lambda: '\\u039B',\n  Mu: '\\u039C',\n  Nu: '\\u039D',\n  Xi: '\\u039E',\n  Omicron: '\\u039F',\n  Pi: '\\u03A0',\n  Rho: '\\u03A1',\n  Sigma: '\\u03A3',\n  Tau: '\\u03A4',\n  Upsilon: '\\u03A5',\n  Phi: '\\u03A6',\n  Chi: '\\u03A7',\n  Psi: '\\u03A8',\n  Omega: '\\u03A9',\n  alpha: '\\u03B1',\n  beta: '\\u03B2',\n  gamma: '\\u03B3',\n  delta: '\\u03B4',\n  epsilon: '\\u03B5',\n  zeta: '\\u03B6',\n  eta: '\\u03B7',\n  theta: '\\u03B8',\n  iota: '\\u03B9',\n  kappa: '\\u03BA',\n  lambda: '\\u03BB',\n  mu: '\\u03BC',\n  nu: '\\u03BD',\n  xi: '\\u03BE',\n  omicron: '\\u03BF',\n  pi: '\\u03C0',\n  rho: '\\u03C1',\n  sigmaf: '\\u03C2',\n  sigma: '\\u03C3',\n  tau: '\\u03C4',\n  upsilon: '\\u03C5',\n  phi: '\\u03C6',\n  chi: '\\u03C7',\n  psi: '\\u03C8',\n  omega: '\\u03C9',\n  thetasym: '\\u03D1',\n  upsih: '\\u03D2',\n  piv: '\\u03D6',\n  ensp: '\\u2002',\n  emsp: '\\u2003',\n  thinsp: '\\u2009',\n  zwnj: '\\u200C',\n  zwj: '\\u200D',\n  lrm: '\\u200E',\n  rlm: '\\u200F',\n  ndash: '\\u2013',\n  mdash: '\\u2014',\n  lsquo: '\\u2018',\n  rsquo: '\\u2019',\n  sbquo: '\\u201A',\n  ldquo: '\\u201C',\n  rdquo: '\\u201D',\n  bdquo: '\\u201E',\n  dagger: '\\u2020',\n  Dagger: '\\u2021',\n  bull: '\\u2022',\n  hellip: '\\u2026',\n  permil: '\\u2030',\n  prime: '\\u2032',\n  Prime: '\\u2033',\n  lsaquo: '\\u2039',\n  rsaquo: '\\u203A',\n  oline: '\\u203E',\n  frasl: '\\u2044',\n  euro: '\\u20AC',\n  image: '\\u2111',\n  weierp: '\\u2118',\n  real: '\\u211C',\n  trade: '\\u2122',\n  alefsym: '\\u2135',\n  larr: '\\u2190',\n  uarr: '\\u2191',\n  rarr: '\\u2192',\n  darr: '\\u2193',\n  harr: '\\u2194',\n  crarr: '\\u21B5',\n  lArr: '\\u21D0',\n  uArr: '\\u21D1',\n  rArr: '\\u21D2',\n  dArr: '\\u21D3',\n  hArr: '\\u21D4',\n  forall: '\\u2200',\n  part: '\\u2202',\n  exist: '\\u2203',\n  empty: '\\u2205',\n  nabla: '\\u2207',\n  isin: '\\u2208',\n  notin: '\\u2209',\n  ni: '\\u220B',\n  prod: '\\u220F',\n  sum: '\\u2211',\n  minus: '\\u2212',\n  lowast: '\\u2217',\n  radic: '\\u221A',\n  prop: '\\u221D',\n  infin: '\\u221E',\n  ang: '\\u2220',\n  and: '\\u2227',\n  or: '\\u2228',\n  cap: '\\u2229',\n  cup: '\\u222A',\n  'int': '\\u222B',\n  there4: '\\u2234',\n  sim: '\\u223C',\n  cong: '\\u2245',\n  asymp: '\\u2248',\n  ne: '\\u2260',\n  equiv: '\\u2261',\n  le: '\\u2264',\n  ge: '\\u2265',\n  sub: '\\u2282',\n  sup: '\\u2283',\n  nsub: '\\u2284',\n  sube: '\\u2286',\n  supe: '\\u2287',\n  oplus: '\\u2295',\n  otimes: '\\u2297',\n  perp: '\\u22A5',\n  sdot: '\\u22C5',\n  lceil: '\\u2308',\n  rceil: '\\u2309',\n  lfloor: '\\u230A',\n  rfloor: '\\u230B',\n  lang: '\\u2329',\n  rang: '\\u232A',\n  loz: '\\u25CA',\n  spades: '\\u2660',\n  clubs: '\\u2663',\n  hearts: '\\u2665',\n  diams: '\\u2666'\n};\n","'use strict';\n\nvar XHTMLEntities = require('./xhtml');\n\nvar hexNumber = /^[\\da-fA-F]+$/;\nvar decimalNumber = /^\\d+$/;\n\nmodule.exports = function(acorn) {\n  var tt = acorn.tokTypes;\n  var tc = acorn.tokContexts;\n\n  tc.j_oTag = new acorn.TokContext('<tag', false);\n  tc.j_cTag = new acorn.TokContext('</tag', false);\n  tc.j_expr = new acorn.TokContext('<tag>...</tag>', true, true);\n\n  tt.jsxName = new acorn.TokenType('jsxName');\n  tt.jsxText = new acorn.TokenType('jsxText', {beforeExpr: true});\n  tt.jsxTagStart = new acorn.TokenType('jsxTagStart');\n  tt.jsxTagEnd = new acorn.TokenType('jsxTagEnd');\n\n  tt.jsxTagStart.updateContext = function() {\n    this.context.push(tc.j_expr); // treat as beginning of JSX expression\n    this.context.push(tc.j_oTag); // start opening tag context\n    this.exprAllowed = false;\n  };\n  tt.jsxTagEnd.updateContext = function(prevType) {\n    var out = this.context.pop();\n    if (out === tc.j_oTag && prevType === tt.slash || out === tc.j_cTag) {\n      this.context.pop();\n      this.exprAllowed = this.curContext() === tc.j_expr;\n    } else {\n      this.exprAllowed = true;\n    }\n  };\n\n  var pp = acorn.Parser.prototype;\n\n  // Reads inline JSX contents token.\n\n  pp.jsx_readToken = function() {\n    var out = '', chunkStart = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length)\n        this.raise(this.start, 'Unterminated JSX contents');\n      var ch = this.input.charCodeAt(this.pos);\n\n      switch (ch) {\n      case 60: // '<'\n      case 123: // '{'\n        if (this.pos === this.start) {\n          if (ch === 60 && this.exprAllowed) {\n            ++this.pos;\n            return this.finishToken(tt.jsxTagStart);\n          }\n          return this.getTokenFromCode(ch);\n        }\n        out += this.input.slice(chunkStart, this.pos);\n        return this.finishToken(tt.jsxText, out);\n\n      case 38: // '&'\n        out += this.input.slice(chunkStart, this.pos);\n        out += this.jsx_readEntity();\n        chunkStart = this.pos;\n        break;\n\n      default:\n        if (acorn.isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readNewLine(true);\n          chunkStart = this.pos;\n        } else {\n          ++this.pos;\n        }\n      }\n    }\n  };\n\n  pp.jsx_readNewLine = function(normalizeCRLF) {\n    var ch = this.input.charCodeAt(this.pos);\n    var out;\n    ++this.pos;\n    if (ch === 13 && this.input.charCodeAt(this.pos) === 10) {\n      ++this.pos;\n      out = normalizeCRLF ? '\\n' : '\\r\\n';\n    } else {\n      out = String.fromCharCode(ch);\n    }\n    if (this.options.locations) {\n      ++this.curLine;\n      this.lineStart = this.pos;\n    }\n\n    return out;\n  };\n\n  pp.jsx_readString = function(quote) {\n    var out = '', chunkStart = ++this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length)\n        this.raise(this.start, 'Unterminated string constant');\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === quote) break;\n      if (ch === 38) { // '&'\n        out += this.input.slice(chunkStart, this.pos);\n        out += this.jsx_readEntity();\n        chunkStart = this.pos;\n      } else if (acorn.isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.pos);\n        out += this.jsx_readNewLine(false);\n        chunkStart = this.pos;\n      } else {\n        ++this.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.pos++);\n    return this.finishToken(tt.string, out);\n  };\n\n  pp.jsx_readEntity = function() {\n    var str = '', count = 0, entity;\n    var ch = this.input[this.pos];\n    if (ch !== '&')\n      this.raise(this.pos, 'Entity must start with an ampersand');\n    var startPos = ++this.pos;\n    while (this.pos < this.input.length && count++ < 10) {\n      ch = this.input[this.pos++];\n      if (ch === ';') {\n        if (str[0] === '#') {\n          if (str[1] === 'x') {\n            str = str.substr(2);\n            if (hexNumber.test(str))\n              entity = String.fromCharCode(parseInt(str, 16));\n          } else {\n            str = str.substr(1);\n            if (decimalNumber.test(str))\n              entity = String.fromCharCode(parseInt(str, 10));\n          }\n        } else {\n          entity = XHTMLEntities[str];\n        }\n        break;\n      }\n      str += ch;\n    }\n    if (!entity) {\n      this.pos = startPos;\n      return '&';\n    }\n    return entity;\n  };\n\n\n  // Read a JSX identifier (valid tag or attribute name).\n  //\n  // Optimized version since JSX identifiers can't contain\n  // escape characters and so can be read as single slice.\n  // Also assumes that first character was already checked\n  // by isIdentifierStart in readToken.\n\n  pp.jsx_readWord = function() {\n    var ch, start = this.pos;\n    do {\n      ch = this.input.charCodeAt(++this.pos);\n    } while (acorn.isIdentifierChar(ch) || ch === 45); // '-'\n    return this.finishToken(tt.jsxName, this.input.slice(start, this.pos));\n  };\n\n  // Transforms JSX element name to string.\n\n  function getQualifiedJSXName(object) {\n    if (object.type === 'JSXIdentifier')\n      return object.name;\n\n    if (object.type === 'JSXNamespacedName')\n      return object.namespace.name + ':' + object.name.name;\n\n    if (object.type === 'JSXMemberExpression')\n      return getQualifiedJSXName(object.object) + '.' +\n      getQualifiedJSXName(object.property);\n  }\n\n  // Parse next token as JSX identifier\n\n  pp.jsx_parseIdentifier = function() {\n    var node = this.startNode();\n    if (this.type === tt.jsxName)\n      node.name = this.value;\n    else if (this.type.keyword)\n      node.name = this.type.keyword;\n    else\n      this.unexpected();\n    this.next();\n    return this.finishNode(node, 'JSXIdentifier');\n  };\n\n  // Parse namespaced identifier.\n\n  pp.jsx_parseNamespacedName = function() {\n    var startPos = this.start, startLoc = this.startLoc;\n    var name = this.jsx_parseIdentifier();\n    if (!this.options.plugins.jsx.allowNamespaces || !this.eat(tt.colon)) return name;\n    var node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsx_parseIdentifier();\n    return this.finishNode(node, 'JSXNamespacedName');\n  };\n\n  // Parses element name in any form - namespaced, member\n  // or single identifier.\n\n  pp.jsx_parseElementName = function() {\n    var startPos = this.start, startLoc = this.startLoc;\n    var node = this.jsx_parseNamespacedName();\n    if (this.type === tt.dot && node.type === 'JSXNamespacedName' && !this.options.plugins.jsx.allowNamespacedObjects) {\n      this.unexpected();\n    }\n    while (this.eat(tt.dot)) {\n      var newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsx_parseIdentifier();\n      node = this.finishNode(newNode, 'JSXMemberExpression');\n    }\n    return node;\n  };\n\n  // Parses any type of JSX attribute value.\n\n  pp.jsx_parseAttributeValue = function() {\n    switch (this.type) {\n    case tt.braceL:\n      var node = this.jsx_parseExpressionContainer();\n      if (node.expression.type === 'JSXEmptyExpression')\n        this.raise(node.start, 'JSX attributes must only be assigned a non-empty expression');\n      return node;\n\n    case tt.jsxTagStart:\n    case tt.string:\n      return this.parseExprAtom();\n\n    default:\n      this.raise(this.start, 'JSX value should be either an expression or a quoted JSX text');\n    }\n  };\n\n  // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n  // and so it should start at the end of last read token (left brace) and finish\n  // at the beginning of the next one (right brace).\n\n  pp.jsx_parseEmptyExpression = function() {\n    var node = this.startNodeAt(this.lastTokEnd, this.lastTokEndLoc);\n    return this.finishNodeAt(node, 'JSXEmptyExpression', this.start, this.startLoc);\n  };\n\n  // Parses JSX expression enclosed into curly brackets.\n\n\n  pp.jsx_parseExpressionContainer = function() {\n    var node = this.startNode();\n    this.next();\n    node.expression = this.type === tt.braceR\n      ? this.jsx_parseEmptyExpression()\n      : this.parseExpression();\n    this.expect(tt.braceR);\n    return this.finishNode(node, 'JSXExpressionContainer');\n  };\n\n  // Parses following JSX attribute name-value pair.\n\n  pp.jsx_parseAttribute = function() {\n    var node = this.startNode();\n    if (this.eat(tt.braceL)) {\n      this.expect(tt.ellipsis);\n      node.argument = this.parseMaybeAssign();\n      this.expect(tt.braceR);\n      return this.finishNode(node, 'JSXSpreadAttribute');\n    }\n    node.name = this.jsx_parseNamespacedName();\n    node.value = this.eat(tt.eq) ? this.jsx_parseAttributeValue() : null;\n    return this.finishNode(node, 'JSXAttribute');\n  };\n\n  // Parses JSX opening tag starting after '<'.\n\n  pp.jsx_parseOpeningElementAt = function(startPos, startLoc) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.attributes = [];\n    node.name = this.jsx_parseElementName();\n    while (this.type !== tt.slash && this.type !== tt.jsxTagEnd)\n      node.attributes.push(this.jsx_parseAttribute());\n    node.selfClosing = this.eat(tt.slash);\n    this.expect(tt.jsxTagEnd);\n    return this.finishNode(node, 'JSXOpeningElement');\n  };\n\n  // Parses JSX closing tag starting after '</'.\n\n  pp.jsx_parseClosingElementAt = function(startPos, startLoc) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.name = this.jsx_parseElementName();\n    this.expect(tt.jsxTagEnd);\n    return this.finishNode(node, 'JSXClosingElement');\n  };\n\n  // Parses entire JSX element, including it's opening tag\n  // (starting after '<'), attributes, contents and closing tag.\n\n  pp.jsx_parseElementAt = function(startPos, startLoc) {\n    var node = this.startNodeAt(startPos, startLoc);\n    var children = [];\n    var openingElement = this.jsx_parseOpeningElementAt(startPos, startLoc);\n    var closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.type) {\n        case tt.jsxTagStart:\n          startPos = this.start; startLoc = this.startLoc;\n          this.next();\n          if (this.eat(tt.slash)) {\n            closingElement = this.jsx_parseClosingElementAt(startPos, startLoc);\n            break contents;\n          }\n          children.push(this.jsx_parseElementAt(startPos, startLoc));\n          break;\n\n        case tt.jsxText:\n          children.push(this.parseExprAtom());\n          break;\n\n        case tt.braceL:\n          children.push(this.jsx_parseExpressionContainer());\n          break;\n\n        default:\n          this.unexpected();\n        }\n      }\n      if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n        this.raise(\n          closingElement.start,\n          'Expected corresponding JSX closing tag for <' + getQualifiedJSXName(openingElement.name) + '>');\n      }\n    }\n\n    node.openingElement = openingElement;\n    node.closingElement = closingElement;\n    node.children = children;\n    if (this.type === tt.relational && this.value === \"<\") {\n      this.raise(this.start, \"Adjacent JSX elements must be wrapped in an enclosing tag\");\n    }\n    return this.finishNode(node, 'JSXElement');\n  };\n\n  // Parses entire JSX element from current position.\n\n  pp.jsx_parseElement = function() {\n    var startPos = this.start, startLoc = this.startLoc;\n    this.next();\n    return this.jsx_parseElementAt(startPos, startLoc);\n  };\n\n  acorn.plugins.jsx = function(instance, opts) {\n    if (!opts) {\n      return;\n    }\n\n    if (typeof opts !== 'object') {\n      opts = {};\n    }\n\n    instance.options.plugins.jsx = {\n      allowNamespaces: opts.allowNamespaces !== false,\n      allowNamespacedObjects: !!opts.allowNamespacedObjects\n    };\n\n    instance.extend('parseExprAtom', function(inner) {\n      return function(refShortHandDefaultPos) {\n        if (this.type === tt.jsxText)\n          return this.parseLiteral(this.value);\n        else if (this.type === tt.jsxTagStart)\n          return this.jsx_parseElement();\n        else\n          return inner.call(this, refShortHandDefaultPos);\n      };\n    });\n\n    instance.extend('readToken', function(inner) {\n      return function(code) {\n        var context = this.curContext();\n\n        if (context === tc.j_expr) return this.jsx_readToken();\n\n        if (context === tc.j_oTag || context === tc.j_cTag) {\n          if (acorn.isIdentifierStart(code)) return this.jsx_readWord();\n\n          if (code == 62) {\n            ++this.pos;\n            return this.finishToken(tt.jsxTagEnd);\n          }\n\n          if ((code === 34 || code === 39) && context == tc.j_oTag)\n            return this.jsx_readString(code);\n        }\n\n        if (code === 60 && this.exprAllowed) {\n          ++this.pos;\n          return this.finishToken(tt.jsxTagStart);\n        }\n        return inner.call(this, code);\n      };\n    });\n\n    instance.extend('updateContext', function(inner) {\n      return function(prevType) {\n        if (this.type == tt.braceL) {\n          var curContext = this.curContext();\n          if (curContext == tc.j_oTag) this.context.push(tc.b_expr);\n          else if (curContext == tc.j_expr) this.context.push(tc.b_tmpl);\n          else inner.call(this, prevType);\n          this.exprAllowed = true;\n        } else if (this.type === tt.slash && prevType === tt.jsxTagStart) {\n          this.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n          this.context.push(tc.j_cTag); // reconsider as closing tag context\n          this.exprAllowed = false;\n        } else {\n          return inner.call(this, prevType);\n        }\n      };\n    });\n  };\n\n  return acorn;\n};\n","var asyncExit = /^async[\\t ]+(return|throw)/ ;\nvar atomOrPropertyOrLabel = /^\\s*[):;]/ ;\nvar removeComments = /([^\\n])\\/\\*(\\*(?!\\/)|[^\\n*])*\\*\\/([^\\n])/g ;\n\nfunction hasLineTerminatorBeforeNext(st, since) {\n    return st.lineStart >= since;\n}\n\nfunction test(regex,st,noComment) {\n    var src = st.input.slice(st.start) ;\n    if (noComment) {\n        src = src.replace(removeComments,\"$1 $3\") ;\n    }\n    return regex.test(src);\n}\n\n/* Create a new parser derived from the specified parser, so that in the\n * event of an error we can back out and try again */\nfunction subParse(parser, pos, extensions) {\n    var p = new parser.constructor(parser.options, parser.input, pos);\n    if (extensions)\n        for (var k in extensions)\n            p[k] = extensions[k] ;\n\n    var src = parser ;\n    var dest = p ;\n    ['inFunction','inAsync','inGenerator','inModule'].forEach(function(k){\n        if (k in src)\n            dest[k] = src[k] ;\n    }) ;\n    p.nextToken();\n    return p;\n}\n\nfunction asyncAwaitPlugin (parser,options){\n    if (!options || typeof options !== \"object\")\n        options = {} ;\n\n    parser.extend(\"parse\",function(base){\n        return function(){\n            this.inAsync = options.inAsyncFunction ;\n            if (options.awaitAnywhere && options.inAsyncFunction)\n                parser.raise(node.start,\"The options awaitAnywhere and inAsyncFunction are mutually exclusive\") ;\n\n            return base.apply(this,arguments);\n        }\n    }) ;\n\n    parser.extend(\"parseStatement\",function(base){\n        return function (declaration, topLevel) {\n            var start = this.start;\n            var startLoc = this.startLoc;\n            if (this.type.label==='name') {\n                if ((options.asyncExits) && test(asyncExit,this)) {\n                    // TODO: Ensure this function is itself nested in an async function or Method\n                    this.next() ;\n\n                    var r = this.parseStatement(declaration, topLevel) ;\n                    r.async = true ;\n                    r.start = start;\n                    r.loc && (r.loc.start = startLoc);\n                    r.range && (r.range[0] = start);\n                    return r ;\n                }\n            }\n            return base.apply(this,arguments);\n        }\n    }) ;\n\n    parser.extend(\"parseIdent\",function(base){\n        return function(liberal) {\n            if (this.options.sourceType==='module' && this.options.ecmaVersion >= 8 && options.awaitAnywhere)\n                return base.call(this,true) ; // Force liberal mode if awaitAnywhere is set\n            return base.apply(this,arguments) ;\n        }\n    }) ;\n\n    parser.extend(\"parseExprAtom\",function(base){\n        var NotAsync = {};\n        return function(refShorthandDefaultPos){\n            var start = this.start ;\n            var startLoc = this.startLoc;\n\n            var rhs,r = base.apply(this,arguments);\n\n            if (r.type==='Identifier') {\n                if (r.name==='await' && !this.inAsync) {\n                    if (options.awaitAnywhere) {\n                        var n = this.startNodeAt(r.start, r.loc && r.loc.start);\n\n                        start = this.start ;\n\n                        var parseHooks = {\n                            raise:function(){\n                                try {\n                                    return pp.raise.apply(this,arguments) ;\n                                } catch(ex) {\n                                    throw /*inBody?ex:*/NotAsync ;\n                                }\n                            }\n                        } ;\n\n                        try {\n                            rhs = subParse(this,start-4,parseHooks).parseExprSubscripts() ;\n                            if (rhs.end<=start) {\n                                rhs = subParse(this,start,parseHooks).parseExprSubscripts() ;\n                                n.argument = rhs ;\n                                n = this.finishNodeAt(n,'AwaitExpression', rhs.end, rhs.loc && rhs.loc.end) ;\n                                this.pos = rhs.end;\n                                this.end = rhs.end ;\n                                this.endLoc = rhs.endLoc ;\n                                this.next();\n                                return n ;\n                            }\n                        } catch (ex) {\n                            if (ex===NotAsync)\n                                return r ;\n                            throw ex ;\n                        }\n                    }\n                }\n            }\n            return r ;\n        }\n    }) ;\n\n    var allowedPropValues = {\n        undefined:true,\n        get:true,\n        set:true,\n        static:true,\n        async:true,\n        constructor:true\n    };\n    parser.extend(\"parsePropertyName\",function(base){\n        return function (prop) {\n            var prevName = prop.key && prop.key.name ;\n            var key = base.apply(this,arguments) ;\n            if (this.value==='get') {\n                prop.__maybeStaticAsyncGetter = true ;\n            }\n            var next ;\n            if (allowedPropValues[this.value])\n                return key ;\n\n            if (key.type === \"Identifier\" && (key.name === \"async\" || prevName === \"async\") && !hasLineTerminatorBeforeNext(this, key.end) \n                // Look-ahead to see if this is really a property or label called async or await\n                && !this.input.slice(key.end).match(atomOrPropertyOrLabel)) {\n                if (prop.kind === 'set' || key.name === 'set') \n                    this.raise(key.start,\"'set <member>(value)' cannot be be async\") ;\n                else {\n                    this.__isAsyncProp = true ;\n                    key = base.apply(this,arguments) ;\n                    if (key.type==='Identifier') {\n                        if (key.name==='set')\n                            this.raise(key.start,\"'set <member>(value)' cannot be be async\") ;\n                    }\n                }\n            } else {\n                delete prop.__maybeStaticAsyncGetter ;\n            }\n            return key;\n        };\n    }) ;\n\n    parser.extend(\"parseClassMethod\",function(base){\n        return function (classBody, method, isGenerator) {\n            var r = base.apply(this,arguments) ;\n            if (method.__maybeStaticAsyncGetter) {\n                delete method.__maybeStaticAsyncGetter ;\n                if (method.key.name!=='get')\n                    method.kind = \"get\" ;\n            }\n            return r ;\n        }\n    }) ;\n\n\n    parser.extend(\"parseFunctionBody\",function(base){\n        return function (node, isArrowFunction) {\n            var wasAsync = this.inAsync ;\n            if (this.__isAsyncProp) {\n                node.async = true ;\n                this.inAsync = true ;\n                delete this.__isAsyncProp ;\n            }\n            var r = base.apply(this,arguments) ;\n            this.inAsync = wasAsync ;\n            return r ;\n        }\n    }) ;\n}\n\nmodule.exports = asyncAwaitPlugin ;\n","var NotAsync = {} ;\nvar asyncExit = /^async[\\t ]+(return|throw)/ ;\nvar asyncFunction = /^async[\\t ]+function/ ;\nvar atomOrPropertyOrLabel = /^\\s*[():;]/ ;\nvar removeComments = /([^\\n])\\/\\*(\\*(?!\\/)|[^\\n*])*\\*\\/([^\\n])/g ;\nvar matchAsyncGet = /\\s*(get|set)\\s*\\(/ ;\n\nfunction hasLineTerminatorBeforeNext(st, since) {\n    return st.lineStart >= since;\n}\n\nfunction test(regex,st,noComment) {\n    var src = st.input.slice(st.start) ;\n    if (noComment) {\n        src = src.replace(removeComments,\"$1 $3\") ;\n  }\n    return regex.test(src);\n}\n\n/* Create a new parser derived from the specified parser, so that in the\n * event of an error we can back out and try again */\nfunction subParse(parser, pos, extensions,parens) {\n    var p = new parser.constructor(parser.options, parser.input, pos);\n    if (extensions)\n        for (var k in extensions)\n            p[k] = extensions[k] ;\n\n    var src = parser ;\n    var dest = p ;\n    ['inFunction','inAsyncFunction','inAsync','inGenerator','inModule'].forEach(function(k){\n        if (k in src)\n            dest[k] = src[k] ;\n    }) ;\n    if (parens)\n        p.options.preserveParens = true ;\n    p.nextToken();\n    return p;\n}\n\n//TODO: Implement option noAsyncGetters\n\nfunction asyncAwaitPlugin (parser,options){\n    var es7check = function(){} ;\n\n    parser.extend(\"initialContext\",function(base){\n        return function(){\n            if (this.options.ecmaVersion < 7) {\n                es7check = function(node) {\n                    parser.raise(node.start,\"async/await keywords only available when ecmaVersion>=7\") ;\n                } ;\n            }\n            this.reservedWords = new RegExp(this.reservedWords.toString().replace(/await|async/g,\"\").replace(\"|/\",\"/\").replace(\"/|\",\"/\").replace(\"||\",\"|\")) ;\n            this.reservedWordsStrict = new RegExp(this.reservedWordsStrict.toString().replace(/await|async/g,\"\").replace(\"|/\",\"/\").replace(\"/|\",\"/\").replace(\"||\",\"|\")) ;\n            this.reservedWordsStrictBind = new RegExp(this.reservedWordsStrictBind.toString().replace(/await|async/g,\"\").replace(\"|/\",\"/\").replace(\"/|\",\"/\").replace(\"||\",\"|\")) ;\n            this.inAsyncFunction = options.inAsyncFunction ;\n            if (options.awaitAnywhere && options.inAsyncFunction)\n                parser.raise(node.start,\"The options awaitAnywhere and inAsyncFunction are mutually exclusive\") ;\n\n            return base.apply(this,arguments);\n        }\n    }) ;\n\n    parser.extend(\"shouldParseExportStatement\",function(base){\n        return function(){\n            if (this.type.label==='name' && this.value==='async' && test(asyncFunction,this)) {\n                return true ;\n            }\n            return base.apply(this,arguments) ;\n        }\n    }) ;\n\n    parser.extend(\"parseStatement\",function(base){\n        return function (declaration, topLevel) {\n            var start = this.start;\n            var startLoc = this.startLoc;\n            if (this.type.label==='name') {\n                if (test(asyncFunction,this,true)) {\n                    var wasAsync = this.inAsyncFunction ;\n                    try {\n                        this.inAsyncFunction = true ;\n                        this.next() ;\n                        var r = this.parseStatement(declaration, topLevel) ;\n                        r.async = true ;\n                        r.start = start;\n                        r.loc && (r.loc.start = startLoc);\n                        r.range && (r.range[0] = start);\n                        return r ;\n                    } finally {\n                        this.inAsyncFunction = wasAsync ;\n                    }\n                } else if ((typeof options===\"object\" && options.asyncExits) && test(asyncExit,this)) {\n                    // NON-STANDARD EXTENSION iff. options.asyncExits is set, the\n                    // extensions 'async return <expr>?' and 'async throw <expr>?'\n                    // are enabled. In each case they are the standard ESTree nodes\n                    // with the flag 'async:true'\n                    this.next() ;\n                    var r = this.parseStatement(declaration, topLevel) ;\n                    r.async = true ;\n                    r.start = start;\n                    r.loc && (r.loc.start = startLoc);\n                    r.range && (r.range[0] = start);\n                   return r ;\n                }\n            }\n            return base.apply(this,arguments);\n        }\n    }) ;\n\n  parser.extend(\"parseIdent\",function(base){\n        return function(liberal){\n                var id = base.apply(this,arguments);\n                if (this.inAsyncFunction && id.name==='await') {\n                    if (arguments.length===0) {\n                        this.raise(id.start,\"'await' is reserved within async functions\") ;\n                    }\n                }\n                return id ;\n        }\n    }) ;\n\n  parser.extend(\"parseExprAtom\",function(base){\n        return function(refShorthandDefaultPos){\n            var start = this.start ;\n            var startLoc = this.startLoc;\n            var rhs,r = base.apply(this,arguments);\n            if (r.type==='Identifier') {\n                if (r.name==='async' && !hasLineTerminatorBeforeNext(this, r.end)) {\n                    // Is this really an async function?\n                    var isAsync = this.inAsyncFunction ;\n                    try {\n                        this.inAsyncFunction = true ;\n                        var pp = this ;\n                        var inBody = false ;\n\n                        var parseHooks = {\n                            parseFunctionBody:function(node,isArrowFunction){\n                                try {\n                                    var wasInBody = inBody ;\n                                    inBody = true ;\n                                    return pp.parseFunctionBody.apply(this,arguments) ;\n                                } finally {\n                                    inBody = wasInBody ;\n                                }\n                            },\n                            raise:function(){\n                                try {\n                                    return pp.raise.apply(this,arguments) ;\n                                } catch(ex) {\n                                    throw inBody?ex:NotAsync ;\n                                }\n                            }\n                        } ;\n\n                        rhs = subParse(this,this.start,parseHooks,true).parseExpression() ;\n                        if (rhs.type==='SequenceExpression')\n                            rhs = rhs.expressions[0] ;\n                        if (rhs.type === 'CallExpression')\n                            rhs = rhs.callee ;\n                        if (rhs.type==='FunctionExpression' || rhs.type==='FunctionDeclaration' || rhs.type==='ArrowFunctionExpression') {\n                            // Because we don't know if the top level parser supprts preserveParens, we have to re-parse\n                            // without it set\n                            rhs = subParse(this,this.start,parseHooks).parseExpression() ;\n                            if (rhs.type==='SequenceExpression')\n                                rhs = rhs.expressions[0] ;\n                            if (rhs.type === 'CallExpression')\n                                rhs = rhs.callee ;\n                            \n                            rhs.async = true ;\n                            rhs.start = start;\n                            rhs.loc && (rhs.loc.start = startLoc);\n                            rhs.range && (rhs.range[0] = start);\n                            this.pos = rhs.end;\n                            this.end = rhs.end ;\n                            this.endLoc = rhs.endLoc ;\n                            this.next();\n                            es7check(rhs) ;\n                            return rhs ;\n                        }\n                    } catch (ex) {\n                        if (ex!==NotAsync)\n                            throw ex ;\n                    }\n                    finally {\n                        this.inAsyncFunction = isAsync ;\n                    }\n                }\n                else if (r.name==='await') {\n                    var n = this.startNodeAt(r.start, r.loc && r.loc.start);\n                    if (this.inAsyncFunction) {\n                        rhs = this.parseExprSubscripts() ;\n                        n.operator = 'await' ;\n                        n.argument = rhs ;\n                        n = this.finishNodeAt(n,'AwaitExpression', rhs.end, rhs.loc && rhs.loc.end) ;\n                        es7check(n) ;\n                        return n ;\n                    }\n                    // NON-STANDARD EXTENSION iff. options.awaitAnywhere is true,\n                    // an 'AwaitExpression' is allowed anywhere the token 'await'\n                    // could not be an identifier with the name 'await'.\n\n                    // Look-ahead to see if this is really a property or label called async or await\n                    if (this.input.slice(r.end).match(atomOrPropertyOrLabel)) {\n                        if (!options.awaitAnywhere && this.options.sourceType === 'module')\n                            return this.raise(r.start,\"'await' is reserved within modules\") ;\n                        return r ; // This is a valid property name or label\n                    }\n\n                    if (typeof options===\"object\" && options.awaitAnywhere) {\n                        start = this.start ;\n                        rhs = subParse(this,start-4).parseExprSubscripts() ;\n                        if (rhs.end<=start) {\n                            rhs = subParse(this,start).parseExprSubscripts() ;\n                            n.operator = 'await' ;\n                            n.argument = rhs ;\n                            n = this.finishNodeAt(n,'AwaitExpression', rhs.end, rhs.loc && rhs.loc.end) ;\n                            this.pos = rhs.end;\n                            this.end = rhs.end ;\n                            this.endLoc = rhs.endLoc ;\n                            this.next();\n                            es7check(n) ;\n                            return n ;\n                        }\n                    }\n\n                    if (!options.awaitAnywhere && this.options.sourceType === 'module')\n                        return this.raise(r.start,\"'await' is reserved within modules\") ;\n                }\n            }\n            return r ;\n        }\n    }) ;\n\n    parser.extend('finishNodeAt',function(base){\n            return function(node,type,pos,loc) {\n                if (node.__asyncValue) {\n                    delete node.__asyncValue ;\n                    node.value.async = true ;\n                }\n                return base.apply(this,arguments) ;\n            }\n    }) ;\n\n    parser.extend('finishNode',function(base){\n            return function(node,type) {\n                if (node.__asyncValue) {\n                    delete node.__asyncValue ;\n                    node.value.async = true ;\n                }\n                return base.apply(this,arguments) ;\n            }\n    }) ;\n\n    var allowedPropSpecifiers = {\n        get:true,\n        set:true,\n        async:true\n    };\n    \n    parser.extend(\"parsePropertyName\",function(base){\n        return function (prop) {\n            var prevName = prop.key && prop.key.name ;\n            var key = base.apply(this,arguments) ;\n            if (key.type === \"Identifier\" && (key.name === \"async\") && !hasLineTerminatorBeforeNext(this, key.end)) {\n                // Look-ahead to see if this is really a property or label called async or await\n                if (!this.input.slice(key.end).match(atomOrPropertyOrLabel)){\n                    // Cheese - eliminate the cases 'async get(){}' and async set(){}'\n                    if (matchAsyncGet.test(this.input.slice(key.end))) {\n                        key = base.apply(this,arguments) ;\n                        prop.__asyncValue = true ;\n                    } else {\n                        es7check(prop) ;\n                        if (prop.kind === 'set') \n                            this.raise(key.start,\"'set <member>(value)' cannot be be async\") ;\n                        \n                        key = base.apply(this,arguments) ;\n                        if (key.type==='Identifier') {\n                            if (key.name==='set')\n                                this.raise(key.start,\"'set <member>(value)' cannot be be async\") ;\n                        }\n                        prop.__asyncValue = true ;\n                    }\n                }\n            }\n            return key;\n        };\n    }) ;\n\n    parser.extend(\"parseClassMethod\",function(base){\n        return function (classBody, method, isGenerator) {\n            var wasAsync ;\n            if (method.__asyncValue) {\n                if (method.kind==='constructor')\n                    this.raise(method.start,\"class constructor() cannot be be async\") ;\n                wasAsync = this.inAsyncFunction ;\n                this.inAsyncFunction = true ;\n            }\n            var r = base.apply(this,arguments) ;\n            this.inAsyncFunction = wasAsync ;\n            return r ;\n        }\n    }) ;\n\n    parser.extend(\"parseMethod\",function(base){\n        return function (isGenerator) {\n            var wasAsync ;\n            if (this.__currentProperty && this.__currentProperty.__asyncValue) {\n                wasAsync = this.inAsyncFunction ;\n                this.inAsyncFunction = true ;\n            }\n            var r = base.apply(this,arguments) ;\n            this.inAsyncFunction = wasAsync ;\n            return r ;\n        }\n    }) ;\n\n    parser.extend(\"parsePropertyValue\",function(base){\n        return function (prop, isPattern, isGenerator, startPos, startLoc, refDestructuringErrors) {\n            var prevProp = this.__currentProperty ; \n            this.__currentProperty = prop ;\n            var wasAsync ;\n            if (prop.__asyncValue) {\n                wasAsync = this.inAsyncFunction ;\n                this.inAsyncFunction = true ;\n            }\n            var r = base.apply(this,arguments) ;\n            this.inAsyncFunction = wasAsync ;\n            this.__currentProperty = prevProp ;\n            return r ;\n        }\n    }) ;\n}\n\nmodule.exports = asyncAwaitPlugin ;\n","module.exports = function(acorn) {\n    switch (parseInt(acorn.version)) {\n    case 2:\n    case 3:\n        acorn.plugins.asyncawait = require('./acorn-v3') ;\n        break ;\n    case 4:\n        acorn.plugins.asyncawait = require('./acorn-v4') ;\n        break ;\n    case 5:\n        acorn.plugins.asyncawait = require('./acorn-v4') ;\n        break ;\n    default:\n        throw new Error(\"acorn-es7-plugin requires Acorn v2, 3, 4 or 5\") ;\n    }\n    return acorn\n}\n","'use strict';\n\nmodule.exports = function(acorn) {\n  var tt = acorn.tokTypes;\n\n  // modified version of parseObj from acorn/src/expression.js\n  // with rest/spread code from https://github.com/babel/babylon/blob/master/src/parser/expression.js\n  function parseObj(isPattern, refDestructuringErrors) {\n    let node = this.startNode(), first = true, propHash = {}\n    node.properties = []\n    this.next()\n    while (!this.eat(tt.braceR)) {\n      if (!first) {\n        this.expect(tt.comma)\n        if (this.afterTrailingComma(tt.braceR)) break\n      } else first = false\n\n      let prop = this.startNode(), isGenerator, isAsync, startPos, startLoc\n      if (this.options.ecmaVersion >= 6) {\n        // code for spread is adapted from babylon parser\n        if (this.type === tt.ellipsis) {\n          prop = this.parseSpread()\n          if (isPattern) {\n            prop.type = \"RestElement\"\n            prop.value = this.toAssignable(prop.argument, true)\n          } else {\n            prop.type = \"SpreadElement\"\n          }\n          node.properties.push(prop)\n          continue\n        }\n\n        prop.method = false\n        prop.shorthand = false\n        if (isPattern || refDestructuringErrors) {\n          startPos = this.start\n          startLoc = this.startLoc\n        }\n        if (!isPattern)\n          isGenerator = this.eat(tt.star)\n      }\n\n      this.parsePropertyName(prop)\n      if (!isPattern && this.options.ecmaVersion >= 8 && !isGenerator && !prop.computed &&\n        prop.key.type === \"Identifier\" && prop.key.name === \"async\" && this.type !== tt.parenL &&\n        this.type !== tt.colon && !this.canInsertSemicolon()) {\n        isAsync = true\n        this.parsePropertyName(prop, refDestructuringErrors)\n      } else {\n        isAsync = false\n      }\n      this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors)\n      this.checkPropClash(prop, propHash)\n      node.properties.push(this.finishNode(prop, \"Property\"))\n    }\n    return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n  }\n\n  acorn.plugins.objectRestSpread = function objectRestSpreadPlugin(parser) {\n    acorn.Parser.prototype.parseObj = parseObj\n\n    parser.extend(\"toAssignable\", function(nextMethod) {\n      return function(node, isBinding) {\n        if (this.options.ecmaVersion >= 6 && node && node.type === \"ObjectExpression\") {\n          node.type = \"ObjectPattern\"\n\n          for (var i = 0; i < node.properties.length; i++) {\n            var prop = node.properties[i]\n            if (prop.kind === \"init\") {\n              this.toAssignable(prop.value, isBinding)\n            } else if (prop.type === \"SpreadElement\") {\n              prop.value = this.toAssignable(prop.argument, isBinding)\n            } else {\n              this.raise(prop.key.start, \"Object pattern can't contain getter or setter\")\n            }\n          }\n          return node\n        }\n\n        return nextMethod.call(this, node, isBinding)\n      }\n    })\n  };\n\n  return acorn;\n};\n","var charToInteger = {};\nvar integerToChar = {};\n\n'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='.split( '' ).forEach( function ( char, i ) {\n\tcharToInteger[ char ] = i;\n\tintegerToChar[ i ] = char;\n});\n\nexport function decode ( string ) {\n\tvar result = [],\n\t\tlen = string.length,\n\t\ti,\n\t\thasContinuationBit,\n\t\tshift = 0,\n\t\tvalue = 0,\n\t\tinteger,\n\t\tshouldNegate;\n\n\tfor ( i = 0; i < len; i += 1 ) {\n\t\tinteger = charToInteger[ string[i] ];\n\n\t\tif ( integer === undefined ) {\n\t\t\tthrow new Error( 'Invalid character (' + string[i] + ')' );\n\t\t}\n\n\t\thasContinuationBit = integer & 32;\n\n\t\tinteger &= 31;\n\t\tvalue += integer << shift;\n\n\t\tif ( hasContinuationBit ) {\n\t\t\tshift += 5;\n\t\t} else {\n\t\t\tshouldNegate = value & 1;\n\t\t\tvalue >>= 1;\n\n\t\t\tresult.push( shouldNegate ? -value : value );\n\n\t\t\t// reset\n\t\t\tvalue = shift = 0;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function encode ( value ) {\n\tvar result, i;\n\n\tif ( typeof value === 'number' ) {\n\t\tresult = encodeInteger( value );\n\t} else {\n\t\tresult = '';\n\t\tfor ( i = 0; i < value.length; i += 1 ) {\n\t\t\tresult += encodeInteger( value[i] );\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction encodeInteger ( num ) {\n\tvar result = '', clamped;\n\n\tif ( num < 0 ) {\n\t\tnum = ( -num << 1 ) | 1;\n\t} else {\n\t\tnum <<= 1;\n\t}\n\n\tdo {\n\t\tclamped = num & 31;\n\t\tnum >>= 5;\n\n\t\tif ( num > 0 ) {\n\t\t\tclamped |= 32;\n\t\t}\n\n\t\tresult += integerToChar[ clamped ];\n\t} while ( num > 0 );\n\n\treturn result;\n}\n","import { encode } from 'vlq';\n\nfunction Chunk ( start, end, content ) {\n\tthis.start = start;\n\tthis.end = end;\n\tthis.original = content;\n\n\tthis.intro = '';\n\tthis.outro = '';\n\n\tthis.content = content;\n\tthis.storeName = false;\n\tthis.edited = false;\n\n\t// we make these non-enumerable, for sanity while debugging\n\tObject.defineProperties( this, {\n\t\tprevious: { writable: true, value: null },\n\t\tnext: { writable: true, value: null }\n\t});\n}\n\nChunk.prototype = {\n\tappend: function append ( content ) {\n\t\tthis.outro += content;\n\t},\n\n\tclone: function clone () {\n\t\tvar chunk = new Chunk( this.start, this.end, this.original );\n\n\t\tchunk.intro = this.intro;\n\t\tchunk.outro = this.outro;\n\t\tchunk.content = this.content;\n\t\tchunk.storeName = this.storeName;\n\t\tchunk.edited = this.edited;\n\n\t\treturn chunk;\n\t},\n\n\tcontains: function contains ( index ) {\n\t\treturn this.start < index && index < this.end;\n\t},\n\n\teachNext: function eachNext ( fn ) {\n\t\tvar chunk = this;\n\t\twhile ( chunk ) {\n\t\t\tfn( chunk );\n\t\t\tchunk = chunk.next;\n\t\t}\n\t},\n\n\teachPrevious: function eachPrevious ( fn ) {\n\t\tvar chunk = this;\n\t\twhile ( chunk ) {\n\t\t\tfn( chunk );\n\t\t\tchunk = chunk.previous;\n\t\t}\n\t},\n\n\tedit: function edit ( content, storeName ) {\n\t\tthis.content = content;\n\t\tthis.storeName = storeName;\n\n\t\tthis.edited = true;\n\n\t\treturn this;\n\t},\n\n\tprepend: function prepend ( content ) {\n\t\tthis.intro = content + this.intro;\n\t},\n\n\tsplit: function split ( index ) {\n\t\tvar sliceIndex = index - this.start;\n\n\t\tvar originalBefore = this.original.slice( 0, sliceIndex );\n\t\tvar originalAfter = this.original.slice( sliceIndex );\n\n\t\tthis.original = originalBefore;\n\n\t\tvar newChunk = new Chunk( index, this.end, originalAfter );\n\t\tnewChunk.outro = this.outro;\n\t\tthis.outro = '';\n\n\t\tthis.end = index;\n\n\t\tif ( this.edited ) {\n\t\t\t// TODO is this block necessary?...\n\t\t\tnewChunk.edit( '', false );\n\t\t\tthis.content = '';\n\t\t} else {\n\t\t\tthis.content = originalBefore;\n\t\t}\n\n\t\tnewChunk.next = this.next;\n\t\tif ( newChunk.next ) newChunk.next.previous = newChunk;\n\t\tnewChunk.previous = this;\n\t\tthis.next = newChunk;\n\n\t\treturn newChunk;\n\t},\n\n\ttoString: function toString () {\n\t\treturn this.intro + this.content + this.outro;\n\t},\n\n\ttrimEnd: function trimEnd ( rx ) {\n\t\tthis.outro = this.outro.replace( rx, '' );\n\t\tif ( this.outro.length ) return true;\n\n\t\tvar trimmed = this.content.replace( rx, '' );\n\n\t\tif ( trimmed.length ) {\n\t\t\tif ( trimmed !== this.content ) {\n\t\t\t\tthis.split( this.start + trimmed.length ).edit( '', false );\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit( '', false );\n\n\t\t\tthis.intro = this.intro.replace( rx, '' );\n\t\t\tif ( this.intro.length ) return true;\n\t\t}\n\t},\n\n\ttrimStart: function trimStart ( rx ) {\n\t\tthis.intro = this.intro.replace( rx, '' );\n\t\tif ( this.intro.length ) return true;\n\n\t\tvar trimmed = this.content.replace( rx, '' );\n\n\t\tif ( trimmed.length ) {\n\t\t\tif ( trimmed !== this.content ) {\n\t\t\t\tthis.split( this.end - trimmed.length );\n\t\t\t\tthis.edit( '', false );\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit( '', false );\n\n\t\t\tthis.outro = this.outro.replace( rx, '' );\n\t\t\tif ( this.outro.length ) return true;\n\t\t}\n\t}\n};\n\nvar _btoa;\n\nif ( typeof window !== 'undefined' && typeof window.btoa === 'function' ) {\n\t_btoa = window.btoa;\n} else if ( typeof Buffer === 'function' ) {\n\t_btoa = function (str) { return new Buffer( str ).toString( 'base64' ); };\n} else {\n\t_btoa = function () {\n\t\tthrow new Error( 'Unsupported environment: `window.btoa` or `Buffer` should be supported.' );\n\t};\n}\n\nvar btoa = _btoa;\n\nfunction SourceMap ( properties ) {\n\tthis.version = 3;\n\n\tthis.file           = properties.file;\n\tthis.sources        = properties.sources;\n\tthis.sourcesContent = properties.sourcesContent;\n\tthis.names          = properties.names;\n\tthis.mappings       = properties.mappings;\n}\n\nSourceMap.prototype = {\n\ttoString: function toString () {\n\t\treturn JSON.stringify( this );\n\t},\n\n\ttoUrl: function toUrl () {\n\t\treturn 'data:application/json;charset=utf-8;base64,' + btoa( this.toString() );\n\t}\n};\n\nfunction guessIndent ( code ) {\n\tvar lines = code.split( '\\n' );\n\n\tvar tabbed = lines.filter( function (line) { return /^\\t+/.test( line ); } );\n\tvar spaced = lines.filter( function (line) { return /^ {2,}/.test( line ); } );\n\n\tif ( tabbed.length === 0 && spaced.length === 0 ) {\n\t\treturn null;\n\t}\n\n\t// More lines tabbed than spaced? Assume tabs, and\n\t// default to tabs in the case of a tie (or nothing\n\t// to go on)\n\tif ( tabbed.length >= spaced.length ) {\n\t\treturn '\\t';\n\t}\n\n\t// Otherwise, we need to guess the multiple\n\tvar min = spaced.reduce( function ( previous, current ) {\n\t\tvar numSpaces = /^ +/.exec( current )[0].length;\n\t\treturn Math.min( numSpaces, previous );\n\t}, Infinity );\n\n\treturn new Array( min + 1 ).join( ' ' );\n}\n\nfunction getLocator ( source ) {\n\tvar originalLines = source.split( '\\n' );\n\n\tvar start = 0;\n\tvar lineRanges = originalLines.map( function ( line, i ) {\n\t\tvar end = start + line.length + 1;\n\t\tvar range = { start: start, end: end, line: i };\n\n\t\tstart = end;\n\t\treturn range;\n\t});\n\n\tvar i = 0;\n\n\tfunction rangeContains ( range, index ) {\n\t\treturn range.start <= index && index < range.end;\n\t}\n\n\tfunction getLocation ( range, index ) {\n\t\treturn { line: range.line, column: index - range.start };\n\t}\n\n\treturn function locate ( index ) {\n\t\tvar range = lineRanges[i];\n\n\t\tvar d = index >= range.end ? 1 : -1;\n\n\t\twhile ( range ) {\n\t\t\tif ( rangeContains( range, index ) ) return getLocation( range, index );\n\n\t\t\ti += d;\n\t\t\trange = lineRanges[i];\n\t\t}\n\t};\n}\n\nvar nonWhitespace = /\\S/;\n\nfunction encodeMappings ( original, intro, outro, chunk, hires, sourcemapLocations, sourceIndex, offsets, names ) {\n\tvar rawLines = [];\n\n\tvar generatedCodeLine = intro.split( '\\n' ).length - 1;\n\tvar rawSegments = rawLines[ generatedCodeLine ] = [];\n\n\tvar generatedCodeColumn = 0;\n\n\tvar locate = getLocator( original );\n\n\tfunction addEdit ( content, original, loc, nameIndex, i ) {\n\t\tif ( i || ( content.length && nonWhitespace.test( content ) ) ) {\n\t\t\trawSegments.push({\n\t\t\t\tgeneratedCodeLine: generatedCodeLine,\n\t\t\t\tgeneratedCodeColumn: generatedCodeColumn,\n\t\t\t\tsourceCodeLine: loc.line,\n\t\t\t\tsourceCodeColumn: loc.column,\n\t\t\t\tsourceCodeName: nameIndex,\n\t\t\t\tsourceIndex: sourceIndex\n\t\t\t});\n\t\t}\n\n\t\tvar lines = content.split( '\\n' );\n\t\tvar lastLine = lines.pop();\n\n\t\tif ( lines.length ) {\n\t\t\tgeneratedCodeLine += lines.length;\n\t\t\trawLines[ generatedCodeLine ] = rawSegments = [];\n\t\t\tgeneratedCodeColumn = lastLine.length;\n\t\t} else {\n\t\t\tgeneratedCodeColumn += lastLine.length;\n\t\t}\n\n\t\tlines = original.split( '\\n' );\n\t\tlastLine = lines.pop();\n\n\t\tif ( lines.length ) {\n\t\t\tloc.line += lines.length;\n\t\t\tloc.column = lastLine.length;\n\t\t} else {\n\t\t\tloc.column += lastLine.length;\n\t\t}\n\t}\n\n\tfunction addUneditedChunk ( chunk, loc ) {\n\t\tvar originalCharIndex = chunk.start;\n\t\tvar first = true;\n\n\t\twhile ( originalCharIndex < chunk.end ) {\n\t\t\tif ( hires || first || sourcemapLocations[ originalCharIndex ] ) {\n\t\t\t\trawSegments.push({\n\t\t\t\t\tgeneratedCodeLine: generatedCodeLine,\n\t\t\t\t\tgeneratedCodeColumn: generatedCodeColumn,\n\t\t\t\t\tsourceCodeLine: loc.line,\n\t\t\t\t\tsourceCodeColumn: loc.column,\n\t\t\t\t\tsourceCodeName: -1,\n\t\t\t\t\tsourceIndex: sourceIndex\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif ( original[ originalCharIndex ] === '\\n' ) {\n\t\t\t\tloc.line += 1;\n\t\t\t\tloc.column = 0;\n\t\t\t\tgeneratedCodeLine += 1;\n\t\t\t\trawLines[ generatedCodeLine ] = rawSegments = [];\n\t\t\t\tgeneratedCodeColumn = 0;\n\t\t\t} else {\n\t\t\t\tloc.column += 1;\n\t\t\t\tgeneratedCodeColumn += 1;\n\t\t\t}\n\n\t\t\toriginalCharIndex += 1;\n\t\t\tfirst = false;\n\t\t}\n\t}\n\n\tvar hasContent = false;\n\n\twhile ( chunk ) {\n\t\tvar loc = locate( chunk.start );\n\n\t\tif ( chunk.intro.length ) {\n\t\t\taddEdit( chunk.intro, '', loc, -1, hasContent );\n\t\t}\n\n\t\tif ( chunk.edited ) {\n\t\t\taddEdit( chunk.content, chunk.original, loc, chunk.storeName ? names.indexOf( chunk.original ) : -1, hasContent );\n\t\t} else {\n\t\t\taddUneditedChunk( chunk, loc );\n\t\t}\n\n\t\tif ( chunk.outro.length ) {\n\t\t\taddEdit( chunk.outro, '', loc, -1, hasContent );\n\t\t}\n\n\t\tif ( chunk.content || chunk.intro || chunk.outro ) hasContent = true;\n\n\t\tvar nextChunk = chunk.next;\n\t\tchunk = nextChunk;\n\t}\n\n\toffsets.sourceIndex = offsets.sourceIndex || 0;\n\toffsets.sourceCodeLine = offsets.sourceCodeLine || 0;\n\toffsets.sourceCodeColumn = offsets.sourceCodeColumn || 0;\n\toffsets.sourceCodeName = offsets.sourceCodeName || 0;\n\n\tvar outroSemis = outro.split( '\\n' ).map( function () { return ''; } ).join( ';' );\n\n\tvar encoded = rawLines.map( function (segments) {\n\t\tvar generatedCodeColumn = 0;\n\n\t\treturn segments.map( function (segment) {\n\t\t\tvar arr = [\n\t\t\t\tsegment.generatedCodeColumn - generatedCodeColumn,\n\t\t\t\tsegment.sourceIndex - offsets.sourceIndex,\n\t\t\t\tsegment.sourceCodeLine - offsets.sourceCodeLine,\n\t\t\t\tsegment.sourceCodeColumn - offsets.sourceCodeColumn\n\t\t\t];\n\n\t\t\tgeneratedCodeColumn = segment.generatedCodeColumn;\n\t\t\toffsets.sourceIndex = segment.sourceIndex;\n\t\t\toffsets.sourceCodeLine = segment.sourceCodeLine;\n\t\t\toffsets.sourceCodeColumn = segment.sourceCodeColumn;\n\n\t\t\tif ( ~segment.sourceCodeName ) {\n\t\t\t\tarr.push( segment.sourceCodeName - offsets.sourceCodeName );\n\t\t\t\toffsets.sourceCodeName = segment.sourceCodeName;\n\t\t\t}\n\n\t\t\treturn encode( arr );\n\t\t}).join( ',' );\n\t}).join( ';' ) + outroSemis;\n\n\treturn encoded;\n}\n\nfunction getRelativePath ( from, to ) {\n\tvar fromParts = from.split( /[\\/\\\\]/ );\n\tvar toParts = to.split( /[\\/\\\\]/ );\n\n\tfromParts.pop(); // get dirname\n\n\twhile ( fromParts[0] === toParts[0] ) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\tif ( fromParts.length ) {\n\t\tvar i = fromParts.length;\n\t\twhile ( i-- ) fromParts[i] = '..';\n\t}\n\n\treturn fromParts.concat( toParts ).join( '/' );\n}\n\nvar toString = Object.prototype.toString;\n\nfunction isObject ( thing ) {\n\treturn toString.call( thing ) === '[object Object]';\n}\n\nfunction MagicString ( string, options ) {\n\tif ( options === void 0 ) options = {};\n\n\tvar chunk = new Chunk( 0, string.length, string );\n\n\tObject.defineProperties( this, {\n\t\toriginal:              { writable: true, value: string },\n\t\toutro:                 { writable: true, value: '' },\n\t\tintro:                 { writable: true, value: '' },\n\t\tfirstChunk:            { writable: true, value: chunk },\n\t\tlastChunk:             { writable: true, value: chunk },\n\t\tlastSearchedChunk:     { writable: true, value: chunk },\n\t\tbyStart:               { writable: true, value: {} },\n\t\tbyEnd:                 { writable: true, value: {} },\n\t\tfilename:              { writable: true, value: options.filename },\n\t\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\n\t\tsourcemapLocations:    { writable: true, value: {} },\n\t\tstoredNames:           { writable: true, value: {} },\n\t\tindentStr:             { writable: true, value: guessIndent( string ) }\n\t});\n\n\tif ( false ) {}\n\n\tthis.byStart[ 0 ] = chunk;\n\tthis.byEnd[ string.length ] = chunk;\n}\n\nMagicString.prototype = {\n\taddSourcemapLocation: function addSourcemapLocation ( char ) {\n\t\tthis.sourcemapLocations[ char ] = true;\n\t},\n\n\tappend: function append ( content ) {\n\t\tif ( typeof content !== 'string' ) throw new TypeError( 'outro content must be a string' );\n\n\t\tthis.outro += content;\n\t\treturn this;\n\t},\n\n\tclone: function clone () {\n\t\tvar cloned = new MagicString( this.original, { filename: this.filename });\n\n\t\tvar originalChunk = this.firstChunk;\n\t\tvar clonedChunk = cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone();\n\n\t\twhile ( originalChunk ) {\n\t\t\tcloned.byStart[ clonedChunk.start ] = clonedChunk;\n\t\t\tcloned.byEnd[ clonedChunk.end ] = clonedChunk;\n\n\t\t\tvar nextOriginalChunk = originalChunk.next;\n\t\t\tvar nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();\n\n\t\t\tif ( nextClonedChunk ) {\n\t\t\t\tclonedChunk.next = nextClonedChunk;\n\t\t\t\tnextClonedChunk.previous = clonedChunk;\n\n\t\t\t\tclonedChunk = nextClonedChunk;\n\t\t\t}\n\n\t\t\toriginalChunk = nextOriginalChunk;\n\t\t}\n\n\t\tcloned.lastChunk = clonedChunk;\n\n\t\tif ( this.indentExclusionRanges ) {\n\t\t\tcloned.indentExclusionRanges = typeof this.indentExclusionRanges[0] === 'number' ?\n\t\t\t\t[ this.indentExclusionRanges[0], this.indentExclusionRanges[1] ] :\n\t\t\t\tthis.indentExclusionRanges.map( function (range) { return [ range.start, range.end ]; } );\n\t\t}\n\n\t\tObject.keys( this.sourcemapLocations ).forEach( function (loc) {\n\t\t\tcloned.sourcemapLocations[ loc ] = true;\n\t\t});\n\n\t\treturn cloned;\n\t},\n\n\tgenerateMap: function generateMap ( options ) {\n\t\toptions = options || {};\n\n\t\tvar names = Object.keys( this.storedNames );\n\n\t\tif ( false ) {}\n\t\tvar map = new SourceMap({\n\t\t\tfile: ( options.file ? options.file.split( /[\\/\\\\]/ ).pop() : null ),\n\t\t\tsources: [ options.source ? getRelativePath( options.file || '', options.source ) : null ],\n\t\t\tsourcesContent: options.includeContent ? [ this.original ] : [ null ],\n\t\t\tnames: names,\n\t\t\tmappings: this.getMappings( options.hires, 0, {}, names )\n\t\t});\n\t\tif ( false ) {}\n\n\t\treturn map;\n\t},\n\n\tgetIndentString: function getIndentString () {\n\t\treturn this.indentStr === null ? '\\t' : this.indentStr;\n\t},\n\n\tgetMappings: function getMappings ( hires, sourceIndex, offsets, names ) {\n\t\treturn encodeMappings( this.original, this.intro, this.outro, this.firstChunk, hires, this.sourcemapLocations, sourceIndex, offsets, names );\n\t},\n\n\tindent: function indent ( indentStr, options ) {\n\t\tvar this$1 = this;\n\n\t\tvar pattern = /^[^\\r\\n]/gm;\n\n\t\tif ( isObject( indentStr ) ) {\n\t\t\toptions = indentStr;\n\t\t\tindentStr = undefined;\n\t\t}\n\n\t\tindentStr = indentStr !== undefined ? indentStr : ( this.indentStr || '\\t' );\n\n\t\tif ( indentStr === '' ) return this; // noop\n\n\t\toptions = options || {};\n\n\t\t// Process exclusion ranges\n\t\tvar isExcluded = {};\n\n\t\tif ( options.exclude ) {\n\t\t\tvar exclusions = typeof options.exclude[0] === 'number' ? [ options.exclude ] : options.exclude;\n\t\t\texclusions.forEach( function (exclusion) {\n\t\t\t\tfor ( var i = exclusion[0]; i < exclusion[1]; i += 1 ) {\n\t\t\t\t\tisExcluded[i] = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tvar shouldIndentNextCharacter = options.indentStart !== false;\n\t\tvar replacer = function (match) {\n\t\t\tif ( shouldIndentNextCharacter ) return (\"\" + indentStr + match);\n\t\t\tshouldIndentNextCharacter = true;\n\t\t\treturn match;\n\t\t};\n\n\t\tthis.intro = this.intro.replace( pattern, replacer );\n\n\t\tvar charIndex = 0;\n\n\t\tvar chunk = this.firstChunk;\n\n\t\twhile ( chunk ) {\n\t\t\tvar end = chunk.end;\n\n\t\t\tif ( chunk.edited ) {\n\t\t\t\tif ( !isExcluded[ charIndex ] ) {\n\t\t\t\t\tchunk.content = chunk.content.replace( pattern, replacer );\n\n\t\t\t\t\tif ( chunk.content.length ) {\n\t\t\t\t\t\tshouldIndentNextCharacter = chunk.content[ chunk.content.length - 1 ] === '\\n';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcharIndex = chunk.start;\n\n\t\t\t\twhile ( charIndex < end ) {\n\t\t\t\t\tif ( !isExcluded[ charIndex ] ) {\n\t\t\t\t\t\tvar char = this$1.original[ charIndex ];\n\n\t\t\t\t\t\tif ( char === '\\n' ) {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = true;\n\t\t\t\t\t\t} else if ( char !== '\\r' && shouldIndentNextCharacter ) {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = false;\n\n\t\t\t\t\t\t\tif ( charIndex === chunk.start ) {\n\t\t\t\t\t\t\t\tchunk.prepend( indentStr );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar rhs = chunk.split( charIndex );\n\t\t\t\t\t\t\t\trhs.prepend( indentStr );\n\n\t\t\t\t\t\t\t\tthis$1.byStart[ charIndex ] = rhs;\n\t\t\t\t\t\t\t\tthis$1.byEnd[ charIndex ] = chunk;\n\n\t\t\t\t\t\t\t\tchunk = rhs;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcharIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcharIndex = chunk.end;\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tthis.outro = this.outro.replace( pattern, replacer );\n\n\t\treturn this;\n\t},\n\n\tinsert: function insert () {\n\t\tthrow new Error( 'magicString.insert(...) is deprecated. Use insertRight(...) or insertLeft(...)' );\n\t},\n\n\tinsertLeft: function insertLeft ( index, content ) {\n\t\tif ( typeof content !== 'string' ) throw new TypeError( 'inserted content must be a string' );\n\n\t\tif ( false ) {}\n\n\t\tthis._split( index );\n\n\t\tvar chunk = this.byEnd[ index ];\n\n\t\tif ( chunk ) {\n\t\t\tchunk.append( content );\n\t\t} else {\n\t\t\tthis.intro += content;\n\t\t}\n\n\t\tif ( false ) {}\n\t\treturn this;\n\t},\n\n\tinsertRight: function insertRight ( index, content ) {\n\t\tif ( typeof content !== 'string' ) throw new TypeError( 'inserted content must be a string' );\n\n\t\tif ( false ) {}\n\n\t\tthis._split( index );\n\n\t\tvar chunk = this.byStart[ index ];\n\n\t\tif ( chunk ) {\n\t\t\tchunk.prepend( content );\n\t\t} else {\n\t\t\tthis.outro += content;\n\t\t}\n\n\t\tif ( false ) {}\n\t\treturn this;\n\t},\n\n\tmove: function move ( start, end, index ) {\n\t\tif ( index >= start && index <= end ) throw new Error( 'Cannot move a selection inside itself' );\n\n\t\tif ( false ) {}\n\n\t\tthis._split( start );\n\t\tthis._split( end );\n\t\tthis._split( index );\n\n\t\tvar first = this.byStart[ start ];\n\t\tvar last = this.byEnd[ end ];\n\n\t\tvar oldLeft = first.previous;\n\t\tvar oldRight = last.next;\n\n\t\tvar newRight = this.byStart[ index ];\n\t\tif ( !newRight && last === this.lastChunk ) return this;\n\t\tvar newLeft = newRight ? newRight.previous : this.lastChunk;\n\n\t\tif ( oldLeft ) oldLeft.next = oldRight;\n\t\tif ( oldRight ) oldRight.previous = oldLeft;\n\n\t\tif ( newLeft ) newLeft.next = first;\n\t\tif ( newRight ) newRight.previous = last;\n\n\t\tif ( !first.previous ) this.firstChunk = last.next;\n\t\tif ( !last.next ) {\n\t\t\tthis.lastChunk = first.previous;\n\t\t\tthis.lastChunk.next = null;\n\t\t}\n\n\t\tfirst.previous = newLeft;\n\t\tlast.next = newRight;\n\n\t\tif ( !newLeft ) this.firstChunk = first;\n\t\tif ( !newRight ) this.lastChunk = last;\n\n\t\tif ( false ) {}\n\t\treturn this;\n\t},\n\n\toverwrite: function overwrite ( start, end, content, storeName ) {\n\t\tvar this$1 = this;\n\n\t\tif ( typeof content !== 'string' ) throw new TypeError( 'replacement content must be a string' );\n\n\t\twhile ( start < 0 ) start += this$1.original.length;\n\t\twhile ( end < 0 ) end += this$1.original.length;\n\n\t\tif ( end > this.original.length ) throw new Error( 'end is out of bounds' );\n\t\tif ( start === end ) throw new Error( 'Cannot overwrite a zero-length range – use insertLeft or insertRight instead' );\n\n\t\tif ( false ) {}\n\n\t\tthis._split( start );\n\t\tthis._split( end );\n\n\t\tif ( storeName ) {\n\t\t\tvar original = this.original.slice( start, end );\n\t\t\tthis.storedNames[ original ] = true;\n\t\t}\n\n\t\tvar first = this.byStart[ start ];\n\t\tvar last = this.byEnd[ end ];\n\n\t\tif ( first ) {\n\t\t\tfirst.edit( content, storeName );\n\n\t\t\tif ( first !== last ) {\n\t\t\t\tfirst.outro = '';\n\n\t\t\t\tvar chunk = first.next;\n\t\t\t\twhile ( chunk !== last ) {\n\t\t\t\t\tchunk.edit( '', false );\n\t\t\t\t\tchunk.intro = chunk.outro = '';\n\t\t\t\t\tchunk = chunk.next;\n\t\t\t\t}\n\n\t\t\t\tchunk.edit( '', false );\n\t\t\t\tchunk.intro = '';\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\t// must be inserting at the end\n\t\t\tvar newChunk = new Chunk( start, end, '' ).edit( content, storeName );\n\n\t\t\t// TODO last chunk in the array may not be the last chunk, if it's moved...\n\t\t\tlast.next = newChunk;\n\t\t\tnewChunk.previous = last;\n\t\t}\n\n\t\tif ( false ) {}\n\t\treturn this;\n\t},\n\n\tprepend: function prepend ( content ) {\n\t\tif ( typeof content !== 'string' ) throw new TypeError( 'outro content must be a string' );\n\n\t\tthis.intro = content + this.intro;\n\t\treturn this;\n\t},\n\n\tremove: function remove ( start, end ) {\n\t\tvar this$1 = this;\n\n\t\twhile ( start < 0 ) start += this$1.original.length;\n\t\twhile ( end < 0 ) end += this$1.original.length;\n\n\t\tif ( start === end ) return this;\n\n\t\tif ( start < 0 || end > this.original.length ) throw new Error( 'Character is out of bounds' );\n\t\tif ( start > end ) throw new Error( 'end must be greater than start' );\n\n\t\treturn this.overwrite( start, end, '', false );\n\t},\n\n\tslice: function slice ( start, end ) {\n\t\tvar this$1 = this;\n\t\tif ( start === void 0 ) start = 0;\n\t\tif ( end === void 0 ) end = this.original.length;\n\n\t\twhile ( start < 0 ) start += this$1.original.length;\n\t\twhile ( end < 0 ) end += this$1.original.length;\n\n\t\tvar result = '';\n\n\t\t// find start chunk\n\t\tvar chunk = this.firstChunk;\n\t\twhile ( chunk && ( chunk.start > start || chunk.end <= start ) ) {\n\n\t\t\t// found end chunk before start\n\t\t\tif ( chunk.start < end && chunk.end >= end ) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tif ( chunk && chunk.edited && chunk.start !== start ) throw new Error((\"Cannot use replaced character \" + start + \" as slice start anchor.\"));\n\n\t\tvar startChunk = chunk;\n\t\twhile ( chunk ) {\n\t\t\tif ( chunk.intro && ( startChunk !== chunk || chunk.start === start ) ) {\n\t\t\t\tresult += chunk.intro;\n\t\t\t}\n\n\t\t\tvar containsEnd = chunk.start < end && chunk.end >= end;\n\t\t\tif ( containsEnd && chunk.edited && chunk.end !== end ) throw new Error((\"Cannot use replaced character \" + end + \" as slice end anchor.\"));\n\n\t\t\tvar sliceStart = startChunk === chunk ? start - chunk.start : 0;\n\t\t\tvar sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;\n\n\t\t\tresult += chunk.content.slice( sliceStart, sliceEnd );\n\n\t\t\tif ( chunk.outro && ( !containsEnd || chunk.end === end ) ) {\n\t\t\t\tresult += chunk.outro;\n\t\t\t}\n\n\t\t\tif ( containsEnd ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\t// TODO deprecate this? not really very useful\n\tsnip: function snip ( start, end ) {\n\t\tvar clone = this.clone();\n\t\tclone.remove( 0, start );\n\t\tclone.remove( end, clone.original.length );\n\n\t\treturn clone;\n\t},\n\n\t_split: function _split ( index ) {\n\t\tvar this$1 = this;\n\n\t\tif ( this.byStart[ index ] || this.byEnd[ index ] ) return;\n\n\t\tif ( false ) {}\n\n\t\tvar chunk = this.lastSearchedChunk;\n\t\tvar searchForward = index > chunk.end;\n\n\t\twhile ( true ) {\n\t\t\tif ( chunk.contains( index ) ) return this$1._splitChunk( chunk, index );\n\n\t\t\tchunk = searchForward ?\n\t\t\t\tthis$1.byStart[ chunk.end ] :\n\t\t\t\tthis$1.byEnd[ chunk.start ];\n\t\t}\n\t},\n\n\t_splitChunk: function _splitChunk ( chunk, index ) {\n\t\tif ( chunk.edited && chunk.content.length ) { // zero-length edited chunks are a special case (overlapping replacements)\n\t\t\tvar loc = getLocator( this.original )( index );\n\t\t\tthrow new Error( (\"Cannot split a chunk that has already been edited (\" + (loc.line) + \":\" + (loc.column) + \" – \\\"\" + (chunk.original) + \"\\\")\") );\n\t\t}\n\n\t\tvar newChunk = chunk.split( index );\n\n\t\tthis.byEnd[ index ] = chunk;\n\t\tthis.byStart[ index ] = newChunk;\n\t\tthis.byEnd[ newChunk.end ] = newChunk;\n\n\t\tif ( chunk === this.lastChunk ) this.lastChunk = newChunk;\n\n\t\tthis.lastSearchedChunk = chunk;\n\t\tif ( false ) {}\n\t\treturn true;\n\t},\n\n\ttoString: function toString () {\n\t\tvar str = this.intro;\n\n\t\tvar chunk = this.firstChunk;\n\t\twhile ( chunk ) {\n\t\t\tstr += chunk.toString();\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn str + this.outro;\n\t},\n\n\ttrimLines: function trimLines () {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t},\n\n\ttrim: function trim ( charType ) {\n\t\treturn this.trimStart( charType ).trimEnd( charType );\n\t},\n\n\ttrimEnd: function trimEnd ( charType ) {\n\t\tvar this$1 = this;\n\n\t\tvar rx = new RegExp( ( charType || '\\\\s' ) + '+$' );\n\n\t\tthis.outro = this.outro.replace( rx, '' );\n\t\tif ( this.outro.length ) return this;\n\n\t\tvar chunk = this.lastChunk;\n\n\t\tdo {\n\t\t\tvar end = chunk.end;\n\t\t\tvar aborted = chunk.trimEnd( rx );\n\n\t\t\t// if chunk was trimmed, we have a new lastChunk\n\t\t\tif ( chunk.end !== end ) {\n\t\t\t\tthis$1.lastChunk = chunk.next;\n\n\t\t\t\tthis$1.byEnd[ chunk.end ] = chunk;\n\t\t\t\tthis$1.byStart[ chunk.next.start ] = chunk.next;\n\t\t\t}\n\n\t\t\tif ( aborted ) return this$1;\n\t\t\tchunk = chunk.previous;\n\t\t} while ( chunk );\n\n\t\treturn this;\n\t},\n\n\ttrimStart: function trimStart ( charType ) {\n\t\tvar this$1 = this;\n\n\t\tvar rx = new RegExp( '^' + ( charType || '\\\\s' ) + '+' );\n\n\t\tthis.intro = this.intro.replace( rx, '' );\n\t\tif ( this.intro.length ) return this;\n\n\t\tvar chunk = this.firstChunk;\n\n\t\tdo {\n\t\t\tvar end = chunk.end;\n\t\t\tvar aborted = chunk.trimStart( rx );\n\n\t\t\tif ( chunk.end !== end ) {\n\t\t\t\t// special case...\n\t\t\t\tif ( chunk === this$1.lastChunk ) this$1.lastChunk = chunk.next;\n\n\t\t\t\tthis$1.byEnd[ chunk.end ] = chunk;\n\t\t\t\tthis$1.byStart[ chunk.next.start ] = chunk.next;\n\t\t\t}\n\n\t\t\tif ( aborted ) return this$1;\n\t\t\tchunk = chunk.next;\n\t\t} while ( chunk );\n\n\t\treturn this;\n\t}\n};\n\nvar hasOwnProp = Object.prototype.hasOwnProperty;\n\nfunction Bundle ( options ) {\n\tif ( options === void 0 ) options = {};\n\n\tthis.intro = options.intro || '';\n\tthis.separator = options.separator !== undefined ? options.separator : '\\n';\n\n\tthis.sources = [];\n\n\tthis.uniqueSources = [];\n\tthis.uniqueSourceIndexByFilename = {};\n}\n\nBundle.prototype = {\n\taddSource: function addSource ( source ) {\n\t\tif ( source instanceof MagicString ) {\n\t\t\treturn this.addSource({\n\t\t\t\tcontent: source,\n\t\t\t\tfilename: source.filename,\n\t\t\t\tseparator: this.separator\n\t\t\t});\n\t\t}\n\n\t\tif ( !isObject( source ) || !source.content ) {\n\t\t\tthrow new Error( 'bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`' );\n\t\t}\n\n\t\t[ 'filename', 'indentExclusionRanges', 'separator' ].forEach( function (option) {\n\t\t\tif ( !hasOwnProp.call( source, option ) ) source[ option ] = source.content[ option ];\n\t\t});\n\n\t\tif ( source.separator === undefined ) { // TODO there's a bunch of this sort of thing, needs cleaning up\n\t\t\tsource.separator = this.separator;\n\t\t}\n\n\t\tif ( source.filename ) {\n\t\t\tif ( !hasOwnProp.call( this.uniqueSourceIndexByFilename, source.filename ) ) {\n\t\t\t\tthis.uniqueSourceIndexByFilename[ source.filename ] = this.uniqueSources.length;\n\t\t\t\tthis.uniqueSources.push({ filename: source.filename, content: source.content.original });\n\t\t\t} else {\n\t\t\t\tvar uniqueSource = this.uniqueSources[ this.uniqueSourceIndexByFilename[ source.filename ] ];\n\t\t\t\tif ( source.content.original !== uniqueSource.content ) {\n\t\t\t\t\tthrow new Error( (\"Illegal source: same filename (\" + (source.filename) + \"), different contents\") );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.sources.push( source );\n\t\treturn this;\n\t},\n\n\tappend: function append ( str, options ) {\n\t\tthis.addSource({\n\t\t\tcontent: new MagicString( str ),\n\t\t\tseparator: ( options && options.separator ) || ''\n\t\t});\n\n\t\treturn this;\n\t},\n\n\tclone: function clone () {\n\t\tvar bundle = new Bundle({\n\t\t\tintro: this.intro,\n\t\t\tseparator: this.separator\n\t\t});\n\n\t\tthis.sources.forEach( function (source) {\n\t\t\tbundle.addSource({\n\t\t\t\tfilename: source.filename,\n\t\t\t\tcontent: source.content.clone(),\n\t\t\t\tseparator: source.separator\n\t\t\t});\n\t\t});\n\n\t\treturn bundle;\n\t},\n\n\tgenerateMap: function generateMap ( options ) {\n\t\tvar this$1 = this;\n\n\t\tvar offsets = {};\n\n\t\tvar names = [];\n\t\tthis.sources.forEach( function (source) {\n\t\t\tObject.keys( source.content.storedNames ).forEach( function (name) {\n\t\t\t\tif ( !~names.indexOf( name ) ) names.push( name );\n\t\t\t});\n\t\t});\n\n\t\tvar encoded = (\n\t\t\tgetSemis( this.intro ) +\n\t\t\tthis.sources.map( function ( source, i ) {\n\t\t\t\tvar prefix = ( i > 0 ) ? ( getSemis( source.separator ) || ',' ) : '';\n\t\t\t\tvar mappings;\n\n\t\t\t\t// we don't bother encoding sources without a filename\n\t\t\t\tif ( !source.filename ) {\n\t\t\t\t\tmappings = getSemis( source.content.toString() );\n\t\t\t\t} else {\n\t\t\t\t\tvar sourceIndex = this$1.uniqueSourceIndexByFilename[ source.filename ];\n\t\t\t\t\tmappings = source.content.getMappings( options.hires, sourceIndex, offsets, names );\n\t\t\t\t}\n\n\t\t\t\treturn prefix + mappings;\n\t\t\t}).join( '' )\n\t\t);\n\n\t\treturn new SourceMap({\n\t\t\tfile: ( options.file ? options.file.split( /[\\/\\\\]/ ).pop() : null ),\n\t\t\tsources: this.uniqueSources.map( function (source) {\n\t\t\t\treturn options.file ? getRelativePath( options.file, source.filename ) : source.filename;\n\t\t\t}),\n\t\t\tsourcesContent: this.uniqueSources.map( function (source) {\n\t\t\t\treturn options.includeContent ? source.content : null;\n\t\t\t}),\n\t\t\tnames: names,\n\t\t\tmappings: encoded\n\t\t});\n\t},\n\n\tgetIndentString: function getIndentString () {\n\t\tvar indentStringCounts = {};\n\n\t\tthis.sources.forEach( function (source) {\n\t\t\tvar indentStr = source.content.indentStr;\n\n\t\t\tif ( indentStr === null ) return;\n\n\t\t\tif ( !indentStringCounts[ indentStr ] ) indentStringCounts[ indentStr ] = 0;\n\t\t\tindentStringCounts[ indentStr ] += 1;\n\t\t});\n\n\t\treturn ( Object.keys( indentStringCounts ).sort( function ( a, b ) {\n\t\t\treturn indentStringCounts[a] - indentStringCounts[b];\n\t\t})[0] ) || '\\t';\n\t},\n\n\tindent: function indent ( indentStr ) {\n\t\tvar this$1 = this;\n\n\t\tif ( !arguments.length ) {\n\t\t\tindentStr = this.getIndentString();\n\t\t}\n\n\t\tif ( indentStr === '' ) return this; // noop\n\n\t\tvar trailingNewline = !this.intro || this.intro.slice( -1 ) === '\\n';\n\n\t\tthis.sources.forEach( function ( source, i ) {\n\t\t\tvar separator = source.separator !== undefined ? source.separator : this$1.separator;\n\t\t\tvar indentStart = trailingNewline || ( i > 0 && /\\r?\\n$/.test( separator ) );\n\n\t\t\tsource.content.indent( indentStr, {\n\t\t\t\texclude: source.indentExclusionRanges,\n\t\t\t\tindentStart: indentStart//: trailingNewline || /\\r?\\n$/.test( separator )  //true///\\r?\\n/.test( separator )\n\t\t\t});\n\n\t\t\t// TODO this is a very slow way to determine this\n\t\t\ttrailingNewline = source.content.toString().slice( 0, -1 ) === '\\n';\n\t\t});\n\n\t\tif ( this.intro ) {\n\t\t\tthis.intro = indentStr + this.intro.replace( /^[^\\n]/gm, function ( match, index ) {\n\t\t\t\treturn index > 0 ? indentStr + match : match;\n\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tprepend: function prepend ( str ) {\n\t\tthis.intro = str + this.intro;\n\t\treturn this;\n\t},\n\n\ttoString: function toString () {\n\t\tvar this$1 = this;\n\n\t\tvar body = this.sources.map( function ( source, i ) {\n\t\t\tvar separator = source.separator !== undefined ? source.separator : this$1.separator;\n\t\t\tvar str = ( i > 0 ? separator : '' ) + source.content.toString();\n\n\t\t\treturn str;\n\t\t}).join( '' );\n\n\t\treturn this.intro + body;\n\t},\n\n\ttrimLines: function trimLines () {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t},\n\n\ttrim: function trim ( charType ) {\n\t\treturn this.trimStart( charType ).trimEnd( charType );\n\t},\n\n\ttrimStart: function trimStart ( charType ) {\n\t\tvar this$1 = this;\n\n\t\tvar rx = new RegExp( '^' + ( charType || '\\\\s' ) + '+' );\n\t\tthis.intro = this.intro.replace( rx, '' );\n\n\t\tif ( !this.intro ) {\n\t\t\tvar source;\n\t\t\tvar i = 0;\n\n\t\t\tdo {\n\t\t\t\tsource = this$1.sources[i];\n\n\t\t\t\tif ( !source ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tsource.content.trimStart( charType );\n\t\t\t\ti += 1;\n\t\t\t} while ( source.content.toString() === '' ); // TODO faster way to determine non-empty source?\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttrimEnd: function trimEnd ( charType ) {\n\t\tvar this$1 = this;\n\n\t\tvar rx = new RegExp( ( charType || '\\\\s' ) + '+$' );\n\n\t\tvar source;\n\t\tvar i = this.sources.length - 1;\n\n\t\tdo {\n\t\t\tsource = this$1.sources[i];\n\n\t\t\tif ( !source ) {\n\t\t\t\tthis$1.intro = this$1.intro.replace( rx, '' );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tsource.content.trimEnd( charType );\n\t\t\ti -= 1;\n\t\t} while ( source.content.toString() === '' ); // TODO faster way to determine non-empty source?\n\n\t\treturn this;\n\t}\n};\n\nfunction getSemis ( str ) {\n\treturn new Array( str.split( '\\n' ).length ).join( ';' );\n}\n\nexport { Bundle };export default MagicString;\n//# sourceMappingURL=magic-string.es6.js.map","export default {\r\n\tProgram: [ 'body' ],\r\n\tLiteral: []\r\n};\r\n","import wrap from './wrap.js';\r\nimport keys from './keys.js';\r\n\r\n// used for debugging, without the noise created by\r\n// circular references\r\nfunction toJSON ( node ) {\r\n\tvar obj = {};\r\n\r\n\tObject.keys( node ).forEach( key => {\r\n\t\tif ( key === 'parent' || key === 'program' || key === 'keys' || key === '__wrapped' ) return;\r\n\r\n\t\tif ( Array.isArray( node[ key ] ) ) {\r\n\t\t\tobj[ key ] = node[ key ].map( toJSON );\r\n\t\t} else if ( node[ key ] && node[ key ].toJSON ) {\r\n\t\t\tobj[ key ] = node[ key ].toJSON();\r\n\t\t} else {\r\n\t\t\tobj[ key ] = node[ key ];\r\n\t\t}\r\n\t});\r\n\r\n\treturn obj;\r\n}\r\n\r\nexport default class Node {\r\n\tconstructor ( raw, parent ) {\r\n\t\traw.parent = parent;\r\n\t\traw.program = parent.program || parent;\r\n\t\traw.depth = parent.depth + 1;\r\n\t\traw.keys = keys[ raw.type ];\r\n\t\traw.indentation = undefined;\r\n\r\n\t\tfor ( const key of keys[ raw.type ] ) {\r\n\t\t\twrap( raw[ key ], raw );\r\n\t\t}\r\n\r\n\t\traw.program.magicString.addSourcemapLocation( raw.start );\r\n\t\traw.program.magicString.addSourcemapLocation( raw.end );\r\n\t}\r\n\r\n\tancestor ( level ) {\r\n\t\tlet node = this;\r\n\t\twhile ( level-- ) {\r\n\t\t\tnode = node.parent;\r\n\t\t\tif ( !node ) return null;\r\n\t\t}\r\n\r\n\t\treturn node;\r\n\t}\r\n\r\n\tcontains ( node ) {\r\n\t\twhile ( node ) {\r\n\t\t\tif ( node === this ) return true;\r\n\t\t\tnode = node.parent;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfindLexicalBoundary () {\r\n\t\treturn this.parent.findLexicalBoundary();\r\n\t}\r\n\r\n\tfindNearest ( type ) {\r\n\t\tif ( typeof type === 'string' ) type = new RegExp( `^${type}$` );\r\n\t\tif ( type.test( this.type ) ) return this;\r\n\t\treturn this.parent.findNearest( type );\r\n\t}\r\n\r\n\tunparenthesizedParent () {\r\n\t\tlet node = this.parent;\r\n\t\twhile ( node && node.type === 'ParenthesizedExpression' ) {\r\n\t\t\tnode = node.parent;\r\n\t\t}\r\n\t\treturn node;\r\n\t}\r\n\r\n\tunparenthesize () {\r\n\t\tlet node = this;\r\n\t\twhile ( node.type === 'ParenthesizedExpression' ) {\r\n\t\t\tnode = node.expression;\r\n\t\t}\r\n\t\treturn node;\r\n\t}\r\n\r\n\tfindScope ( functionScope ) {\r\n\t\treturn this.parent.findScope( functionScope );\r\n\t}\r\n\r\n\tgetIndentation () {\r\n\t\treturn this.parent.getIndentation();\r\n\t}\r\n\r\n\tinitialise ( transforms ) {\r\n\t\tfor ( var key of this.keys ) {\r\n\t\t\tconst value = this[ key ];\r\n\r\n\t\t\tif ( Array.isArray( value ) ) {\r\n\t\t\t\tvalue.forEach( node => node && node.initialise( transforms ) );\r\n\t\t\t} else if ( value && typeof value === 'object' ) {\r\n\t\t\t\tvalue.initialise( transforms );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttoJSON () {\r\n\t\treturn toJSON( this );\r\n\t}\r\n\r\n\ttoString () {\r\n\t\treturn this.program.magicString.original.slice( this.start, this.end );\r\n\t}\r\n\r\n\ttranspile ( code, transforms ) {\r\n\t\tfor ( const key of this.keys ) {\r\n\t\t\tconst value = this[ key ];\r\n\r\n\t\t\tif ( Array.isArray( value ) ) {\r\n\t\t\t\tvalue.forEach( node => node && node.transpile( code, transforms ) );\r\n\t\t\t} else if ( value && typeof value === 'object' ) {\r\n\t\t\t\tvalue.transpile( code, transforms );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","export function isArguments ( node ) {\r\n\treturn node.type === 'Identifier' && node.name === 'arguments';\r\n}\r\n\r\nexport default function spread ( code, elements, start, argumentsArrayAlias, isNew ) {\r\n\tlet i = elements.length;\r\n\tlet firstSpreadIndex = -1;\r\n\r\n\twhile ( i-- ) {\r\n\t\tconst element = elements[i];\r\n\t\tif ( element && element.type === 'SpreadElement' ) {\r\n\t\t\tif ( isArguments( element.argument ) ) {\r\n\t\t\t\tcode.overwrite( element.argument.start, element.argument.end, argumentsArrayAlias );\r\n\t\t\t}\r\n\r\n\t\t\tfirstSpreadIndex = i;\r\n\t\t}\r\n\t}\r\n\r\n\tif ( firstSpreadIndex === -1 ) return false; // false indicates no spread elements\r\n\r\n\tif (isNew) {\r\n\t\tfor ( i = 0; i < elements.length; i += 1 ) {\r\n\t\t\tlet element = elements[i];\r\n\t\t\tif ( element.type === 'SpreadElement' ) {\r\n\t\t\t\tcode.remove( element.start, element.argument.start );\r\n\t\t\t} else {\r\n\t\t\t\tcode.insertRight( element.start, '[' );\r\n\t\t\t\tcode.insertRight( element.end, ']' );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true; // true indicates some spread elements\r\n\t}\r\n\r\n\tlet element = elements[ firstSpreadIndex ];\r\n\tconst previousElement = elements[ firstSpreadIndex - 1 ];\r\n\r\n\tif ( !previousElement ) {\r\n\t\tcode.remove( start, element.start );\r\n\t\tcode.overwrite( element.end, elements[1].start, '.concat( ' );\r\n\t} else {\r\n\t\tcode.overwrite( previousElement.end, element.start, ' ].concat( ' );\r\n\t}\r\n\r\n\tfor ( i = firstSpreadIndex; i < elements.length; i += 1 ) {\r\n\t\telement = elements[i];\r\n\r\n\t\tif ( element ) {\r\n\t\t\tif ( element.type === 'SpreadElement' ) {\r\n\t\t\t\tcode.remove( element.start, element.argument.start );\r\n\t\t\t} else {\r\n\t\t\t\tcode.insertLeft( element.start, '[' );\r\n\t\t\t\tcode.insertLeft( element.end, ']' );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn true; // true indicates some spread elements\r\n}\r\n","import Node from '../Node.js';\r\nimport spread, { isArguments } from '../../utils/spread.js';\r\n\r\nexport default class ArrayExpression extends Node {\r\n\tinitialise ( transforms ) {\r\n\t\tif ( transforms.spreadRest && this.elements.length ) {\r\n\t\t\tconst lexicalBoundary = this.findLexicalBoundary();\r\n\r\n\t\t\tlet i = this.elements.length;\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tconst element = this.elements[i];\r\n\t\t\t\tif ( element && element.type === 'SpreadElement' && isArguments( element.argument ) ) {\r\n\t\t\t\t\tthis.argumentsArrayAlias = lexicalBoundary.getArgumentsArrayAlias();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.initialise( transforms );\r\n\t}\r\n\r\n\ttranspile ( code, transforms ) {\r\n\t\tif ( transforms.spreadRest ) {\r\n\t\t\t// erase trailing comma after last array element if not an array hole\r\n\t\t\tif ( this.elements.length ) {\r\n\t\t\t\tlet lastElement = this.elements[ this.elements.length - 1 ];\r\n\t\t\t\tif ( lastElement && /\\s*,/.test( code.original.slice( lastElement.end, this.end ) ) ) {\r\n\t\t\t\t\tcode.overwrite( lastElement.end, this.end - 1, ' ' );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.elements.length === 1 ) {\r\n\t\t\t\tconst element = this.elements[0];\r\n\r\n\t\t\t\tif ( element && element.type === 'SpreadElement' ) {\r\n\t\t\t\t\t// special case – [ ...arguments ]\r\n\t\t\t\t\tif ( isArguments( element.argument ) ) {\r\n\t\t\t\t\t\tcode.overwrite( this.start, this.end, `[].concat( ${this.argumentsArrayAlias} )` ); // TODO if this is the only use of argsArray, don't bother concating\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcode.overwrite( this.start, element.argument.start, '[].concat( ' );\r\n\t\t\t\t\t\tcode.overwrite( element.end, this.end, ' )' );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst hasSpreadElements = spread( code, this.elements, this.start, this.argumentsArrayAlias );\r\n\r\n\t\t\t\tif ( hasSpreadElements ) {\r\n\t\t\t\t\tcode.overwrite( this.end - 1, this.end, ')' );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.transpile( code, transforms );\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\n\r\nexport default class ArrowFunctionExpression extends Node {\r\n\tinitialise ( transforms ) {\r\n\t\tthis.body.createScope();\r\n\t\tsuper.initialise( transforms );\r\n\t}\r\n\r\n\ttranspile ( code, transforms ) {\r\n\t\tif ( transforms.arrow ) {\r\n\t\t\t// remove arrow\r\n\t\t\tlet charIndex = this.body.start;\r\n\t\t\twhile ( code.original[ charIndex ] !== '=' ) {\r\n\t\t\t\tcharIndex -= 1;\r\n\t\t\t}\r\n\t\t\tcode.remove( charIndex, this.body.start );\r\n\r\n\t\t\t// wrap naked parameter\r\n\t\t\tif ( this.params.length === 1 && this.start === this.params[0].start ) {\r\n\t\t\t\tcode.insertRight( this.params[0].start, '(' );\r\n\t\t\t\tcode.insertLeft( this.params[0].end, ')' );\r\n\t\t\t}\r\n\r\n\t\t\t// add function\r\n\t\t\tif ( this.parent && this.parent.type === 'ExpressionStatement' ) {\r\n\t\t\t\t// standalone expression statement\r\n\t\t\t\tcode.insertRight( this.start, '(function' );\r\n\t\t\t\tcode.insertRight( this.end, ')' );\r\n\t\t\t} else {\r\n\t\t\t\tcode.insertRight( this.start, 'function ' );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.transpile( code, transforms );\r\n\t}\r\n}\r\n","export default function locate ( source, index ) {\r\n\tvar lines = source.split( '\\n' );\r\n\tvar len = lines.length;\r\n\r\n\tvar lineStart = 0;\r\n\tvar i;\r\n\r\n\tfor ( i = 0; i < len; i += 1 ) {\r\n\t\tvar line = lines[i];\r\n\t\tvar lineEnd =  lineStart + line.length + 1; // +1 for newline\r\n\r\n\t\tif ( lineEnd > index ) {\r\n\t\t\treturn { line: i + 1, column: index - lineStart, char: i };\r\n\t\t}\r\n\r\n\t\tlineStart = lineEnd;\r\n\t}\r\n\r\n\tthrow new Error( 'Could not determine location of character' );\r\n}\r\n","function pad ( num, len ) {\r\n\tlet result = String( num );\r\n\treturn result + repeat( ' ', len - result.length );\r\n}\r\n\r\nfunction repeat ( str, times ) {\r\n\tlet result = '';\r\n\twhile ( times-- ) result += str;\r\n\treturn result;\r\n}\r\n\r\nexport default function getSnippet ( source, loc, length = 1 ) {\r\n\tconst first = Math.max( loc.line - 5, 0 );\r\n\tconst last = loc.line;\r\n\r\n\tconst numDigits = String( last ).length;\r\n\r\n\tconst lines = source.split( '\\n' ).slice( first, last );\r\n\r\n\tconst lastLine = lines[ lines.length - 1 ];\r\n\tconst offset = lastLine.slice( 0, loc.column ).replace( /\\t/g, '  ' ).length;\r\n\r\n\tlet snippet = lines\r\n\t\t.map( ( line, i ) => `${pad( i + first + 1, numDigits )} : ${line.replace( /\\t/g, '  ')}` )\r\n\t\t.join( '\\n' );\r\n\r\n\tsnippet += '\\n' + repeat( ' ', numDigits + 3 + offset ) + repeat( '^', length );\r\n\r\n\treturn snippet;\r\n}\r\n","import locate from './locate.js';\r\nimport getSnippet from './getSnippet.js';\r\n\r\nexport default class CompileError extends Error {\r\n\tconstructor ( node, message ) {\r\n\t\tsuper();\r\n\r\n\t\tconst source = node.program.magicString.original;\r\n\t\tconst loc = locate( source, node.start );\r\n\r\n\t\tthis.name = 'CompileError';\r\n\t\tthis.message = message + ` (${loc.line}:${loc.column})`;\r\n\r\n\t\tthis.stack = new Error().stack.replace( new RegExp( `.+new ${this.name}.+\\\\n`, 'm' ), '' );\r\n\r\n\t\tthis.loc = loc;\r\n\t\tthis.snippet = getSnippet( source, loc, node.end - node.start );\r\n\t}\r\n\r\n\ttoString () {\r\n\t\treturn `${this.name}: ${this.message}\\n${this.snippet}`;\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\nimport CompileError from '../../utils/CompileError.js';\r\n\r\nexport default class AssignmentExpression extends Node {\r\n\tinitialise ( transforms ) {\r\n\t\tif ( this.left.type === 'Identifier' ) {\r\n\t\t\tconst declaration = this.findScope( false ).findDeclaration( this.left.name );\r\n\t\t\tif ( declaration && declaration.kind === 'const' ) {\r\n\t\t\t\tthrow new CompileError( this.left, `${this.left.name} is read-only` );\r\n\t\t\t}\r\n\r\n\t\t\t// special case – https://gitlab.com/Rich-Harris/buble/issues/11\r\n\t\t\tconst statement = declaration && declaration.node.ancestor( 3 );\r\n\t\t\tif ( statement && statement.type === 'ForStatement' && statement.body.contains( this ) ) {\r\n\t\t\t\tstatement.reassigned[ this.left.name ] = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.initialise( transforms );\r\n\t}\r\n\r\n\ttranspile ( code, transforms ) {\r\n\t\tif ( this.operator === '**=' && transforms.exponentiation ) {\r\n\t\t\tthis.transpileExponentiation( code, transforms );\r\n\t\t}\r\n\r\n\t\telse if ( /Pattern/.test( this.left.type ) && transforms.destructuring ) {\r\n\t\t\tthis.transpileDestructuring( code, transforms );\r\n\t\t}\r\n\r\n\t\tsuper.transpile( code, transforms );\r\n\t}\r\n\r\n\ttranspileDestructuring ( code ) {\r\n\t\tconst scope = this.findScope( true );\r\n\t\tconst assign = scope.createIdentifier( 'assign' );\r\n\t\tconst temporaries = [ assign ];\r\n\r\n\t\tconst start = this.start;\r\n\r\n\t\t// We need to pick out some elements from the original code,\r\n\t\t// interleaved with generated code. These helpers are used to\r\n\t\t// easily do that while keeping the order of the output\r\n\t\t// predictable.\r\n\t\tlet text = '';\r\n\t\tfunction use ( node ) {\r\n\t\t\tcode.insertRight( node.start, text );\r\n\t\t\tcode.move( node.start, node.end, start );\r\n\t\t\ttext = '';\r\n\t\t}\r\n\t\tfunction write ( string ) {\r\n\t\t\ttext += string;\r\n\t\t}\r\n\r\n\t\twrite( `(${assign} = ` );\r\n\t\tuse( this.right );\r\n\r\n\t\t// Walk `pattern`, generating code that assigns the value in\r\n\t\t// `ref` to it. When `mayDuplicate` is false, the function\r\n\t\t// must take care to only output `ref` once.\r\n\t\tfunction destructure ( pattern, ref, mayDuplicate ) {\r\n\t\t\tif ( pattern.type === 'Identifier' || pattern.type === 'MemberExpression' ) {\r\n\t\t\t\twrite( ', ' );\r\n\t\t\t\tuse( pattern );\r\n\t\t\t\twrite( ` = ${ref}` );\r\n\t\t\t}\r\n\r\n\t\t\telse if ( pattern.type === 'AssignmentPattern' ) {\r\n\t\t\t\tif ( pattern.left.type === 'Identifier' ) {\r\n\t\t\t\t\tconst target = pattern.left.name;\r\n\t\t\t\t\tlet source = ref;\r\n\t\t\t\t\tif ( !mayDuplicate ) {\r\n\t\t\t\t\t\twrite( `, ${target} = ${ref}` );\r\n\t\t\t\t\t\tsource = target;\r\n\t\t\t\t\t}\r\n\t\t\t\t\twrite( `, ${target} = ${source} === void 0 ? ` );\r\n\t\t\t\t\tuse( pattern.right );\r\n\t\t\t\t\twrite( ` : ${source}` );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconst target = scope.createIdentifier( 'temp' );\r\n\t\t\t\t\tlet source = ref;\r\n\t\t\t\t\ttemporaries.push( target );\r\n\t\t\t\t\tif ( !mayDuplicate ) {\r\n\t\t\t\t\t\twrite( `, ${target} = ${ref}` );\r\n\t\t\t\t\t\tsource = target;\r\n\t\t\t\t\t}\r\n\t\t\t\t\twrite( `, ${target} = ${source} === void 0 ? ` );\r\n\t\t\t\t\tuse( pattern.right );\r\n\t\t\t\t\twrite( ` : ${source}` );\r\n\t\t\t\t\tdestructure( pattern.left, target, true );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\telse if ( pattern.type === 'ArrayPattern' ) {\r\n\t\t\t\tconst elements = pattern.elements;\r\n\t\t\t\tif ( elements.length === 1 ) {\r\n\t\t\t\t\tdestructure( elements[0], `${ref}[0]`, false );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif ( !mayDuplicate ) {\r\n\t\t\t\t\t\tconst temp = scope.createIdentifier( 'array' );\r\n\t\t\t\t\t\ttemporaries.push( temp );\r\n\t\t\t\t\t\twrite( `, ${temp} = ${ref}` );\r\n\t\t\t\t\t\tref = temp;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telements.forEach( ( element, i ) => {\r\n\t\t\t\t\t\tif ( element ) {\r\n\t\t\t\t\t\t\tif ( element.type === 'RestElement' ) {\r\n\t\t\t\t\t\t\t\tdestructure( element.argument, `${ref}.slice(${i})`, false );\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tdestructure( element, `${ref}[${i}]`, false );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\telse if ( pattern.type === 'ObjectPattern' ) {\r\n\t\t\t\tconst props = pattern.properties;\r\n\t\t\t\tif ( props.length == 1 ) {\r\n\t\t\t\t\tconst prop = props[0];\r\n\t\t\t\t\tconst value = prop.computed || prop.key.type !== 'Identifier' ? `${ref}[${code.slice(prop.key.start, prop.key.end)}]` : `${ref}.${prop.key.name}`;\r\n\t\t\t\t\tdestructure( prop.value, value, false );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif ( !mayDuplicate ) {\r\n\t\t\t\t\t\tconst temp = scope.createIdentifier( 'obj' );\r\n\t\t\t\t\t\ttemporaries.push( temp );\r\n\t\t\t\t\t\twrite( `, ${temp} = ${ref}` );\r\n\t\t\t\t\t\tref = temp;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tprops.forEach( prop => {\r\n\t\t\t\t\t\tconst value = prop.computed || prop.key.type !== 'Identifier' ? `${ref}[${code.slice(prop.key.start, prop.key.end)}]` : `${ref}.${prop.key.name}`;\r\n\t\t\t\t\t\tdestructure( prop.value, value, false );\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\telse {\r\n\t\t\t\tthrow new Error( `Unexpected node type in destructuring assignment (${pattern.type})` );\r\n\t\t\t}\r\n\t\t}\r\n\t\tdestructure( this.left, assign, true );\r\n\r\n\t\tif ( this.unparenthesizedParent().type === 'ExpressionStatement' ) {\r\n\t\t\t// no rvalue needed for expression statement\r\n\t\t\tcode.insertRight( start, `${text})` );\r\n\t\t} else {\r\n\t\t\t// destructuring is part of an expression - need an rvalue\r\n\t\t\tcode.insertRight( start, `${text}, ${assign})` );\r\n\t\t}\r\n\r\n\t\tcode.remove( start, this.right.start );\r\n\r\n\t\tconst statement = this.findNearest( /(?:Statement|Declaration)$/ );\r\n\t\tcode.insertLeft( statement.start, `var ${temporaries.join( ', ' )};\\n${statement.getIndentation()}` );\r\n\t}\r\n\r\n\ttranspileExponentiation ( code ) {\r\n\t\tconst scope = this.findScope( false );\r\n\t\tconst getAlias = name => {\r\n\t\t\tconst declaration = scope.findDeclaration( name );\r\n\t\t\treturn declaration ? declaration.name : name;\r\n\t\t};\r\n\r\n\t\t// first, the easy part – `**=` -> `=`\r\n\t\tlet charIndex = this.left.end;\r\n\t\twhile ( code.original[ charIndex ] !== '*' ) charIndex += 1;\r\n\t\tcode.remove( charIndex, charIndex + 2 );\r\n\r\n\t\t// how we do the next part depends on a number of factors – whether\r\n\t\t// this is a top-level statement, and whether we're updating a\r\n\t\t// simple or complex reference\r\n\t\tlet base;\r\n\r\n\t\tconst left = this.left.unparenthesize();\r\n\r\n\t\tif ( left.type === 'Identifier' ) {\r\n\t\t\tbase = getAlias( left.name );\r\n\t\t} else if ( left.type === 'MemberExpression' ) {\r\n\t\t\tlet object;\r\n\t\t\tlet needsObjectVar = false;\r\n\t\t\tlet property;\r\n\t\t\tlet needsPropertyVar = false;\r\n\r\n\t\t\tconst statement = this.findNearest( /(?:Statement|Declaration)$/ );\r\n\t\t\tconst i0 = statement.getIndentation();\r\n\r\n\t\t\tif ( left.property.type === 'Identifier' ) {\r\n\t\t\t\tproperty = left.computed ? getAlias( left.property.name ) : left.property.name;\r\n\t\t\t} else {\r\n\t\t\t\tproperty = scope.createIdentifier( 'property' );\r\n\t\t\t\tneedsPropertyVar = true;\r\n\t\t\t}\r\n\r\n\t\t\tif ( left.object.type === 'Identifier' ) {\r\n\t\t\t\tobject = getAlias( left.object.name );\r\n\t\t\t} else {\r\n\t\t\t\tobject = scope.createIdentifier( 'object' );\r\n\t\t\t\tneedsObjectVar = true;\r\n\t\t\t}\r\n\r\n\t\t\tif ( left.start === statement.start ) {\r\n\t\t\t\tif ( needsObjectVar && needsPropertyVar ) {\r\n\t\t\t\t\tcode.insertRight( statement.start, `var ${object} = ` );\r\n\t\t\t\t\tcode.overwrite( left.object.end, left.property.start, `;\\n${i0}var ${property} = ` );\r\n\t\t\t\t\tcode.overwrite( left.property.end, left.end, `;\\n${i0}${object}[${property}]` );\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if ( needsObjectVar ) {\r\n\t\t\t\t\tcode.insertRight( statement.start, `var ${object} = ` );\r\n\t\t\t\t\tcode.insertLeft( left.object.end, `;\\n${i0}` );\r\n\t\t\t\t\tcode.insertLeft( left.object.end, object );\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if ( needsPropertyVar ) {\r\n\t\t\t\t\tcode.insertRight( left.property.start, `var ${property} = ` );\r\n\t\t\t\t\tcode.insertLeft( left.property.end, `;\\n${i0}` );\r\n\t\t\t\t\tcode.move( left.property.start, left.property.end, this.start );\r\n\r\n\t\t\t\t\tcode.insertLeft( left.object.end, `[${property}]` );\r\n\t\t\t\t\tcode.remove( left.object.end, left.property.start );\r\n\t\t\t\t\tcode.remove( left.property.end, left.end );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\telse {\r\n\t\t\t\tlet declarators = [];\r\n\t\t\t\tif ( needsObjectVar ) declarators.push( object );\r\n\t\t\t\tif ( needsPropertyVar ) declarators.push( property );\r\n\r\n\t\t\t\tif ( declarators.length ) {\r\n\t\t\t\t\tcode.insertRight( statement.start, `var ${declarators.join( ', ' )};\\n${i0}` );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( needsObjectVar && needsPropertyVar ) {\r\n\t\t\t\t\tcode.insertRight( left.start, `( ${object} = ` );\r\n\t\t\t\t\tcode.overwrite( left.object.end, left.property.start, `, ${property} = ` );\r\n\t\t\t\t\tcode.overwrite( left.property.end, left.end, `, ${object}[${property}]` );\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if ( needsObjectVar ) {\r\n\t\t\t\t\tcode.insertRight( left.start, `( ${object} = ` );\r\n\t\t\t\t\tcode.insertLeft( left.object.end, `, ${object}` );\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if ( needsPropertyVar ) {\r\n\t\t\t\t\tcode.insertRight( left.property.start, `( ${property} = ` );\r\n\t\t\t\t\tcode.insertLeft( left.property.end, `, ` );\r\n\t\t\t\t\tcode.move( left.property.start, left.property.end, left.start );\r\n\r\n\t\t\t\t\tcode.overwrite( left.object.end, left.property.start, `[${property}]` );\r\n\t\t\t\t\tcode.remove( left.property.end, left.end );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( needsPropertyVar ) {\r\n\t\t\t\t\tcode.insertLeft( this.end, ` )` );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tbase = object + ( left.computed || needsPropertyVar ? `[${property}]` : `.${property}` );\r\n\t\t}\r\n\r\n\t\tcode.insertRight( this.right.start, `Math.pow( ${base}, ` );\r\n\t\tcode.insertLeft( this.right.end, ` )` );\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\n\r\nexport default class BinaryExpression extends Node {\r\n\ttranspile ( code, transforms ) {\r\n\t\tif ( this.operator === '**' && transforms.exponentiation ) {\r\n\t\t\tcode.insertRight( this.start, `Math.pow( ` );\r\n\t\t\tcode.overwrite( this.left.end, this.right.start, `, ` );\r\n\t\t\tcode.insertLeft( this.end, ` )` );\r\n\t\t}\r\n\t\tsuper.transpile( code, transforms );\r\n\t}\r\n}\r\n","export const loopStatement = /(?:For(?:In|Of)?|While)Statement/;\r\n","import Node from '../Node.js';\r\nimport CompileError from '../../utils/CompileError.js';\r\nimport { loopStatement } from '../../utils/patterns.js';\r\n\r\nexport default class BreakStatement extends Node {\r\n\tinitialise () {\r\n\t\tconst loop = this.findNearest( loopStatement );\r\n\t\tconst switchCase = this.findNearest( 'SwitchCase' );\r\n\r\n\t\tif ( loop && ( !switchCase || loop.depth > switchCase.depth ) ) {\r\n\t\t\tloop.canBreak = true;\r\n\t\t\tthis.loop = loop;\r\n\t\t}\r\n\t}\r\n\r\n\ttranspile ( code ) {\r\n\t\tif ( this.loop && this.loop.shouldRewriteAsFunction ) {\r\n\t\t\tif ( this.label ) throw new CompileError( this, 'Labels are not currently supported in a loop with locally-scoped variables' );\r\n\t\t\tcode.overwrite( this.start, this.start + 5, `return 'break'` );\r\n\t\t}\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\nimport spread, { isArguments } from '../../utils/spread.js';\r\n\r\nexport default class CallExpression extends Node {\r\n\tinitialise ( transforms ) {\r\n\t\tif ( transforms.spreadRest && this.arguments.length > 1 ) {\r\n\t\t\tconst lexicalBoundary = this.findLexicalBoundary();\r\n\r\n\t\t\tlet i = this.arguments.length;\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tconst arg = this.arguments[i];\r\n\t\t\t\tif ( arg.type === 'SpreadElement' && isArguments( arg.argument ) ) {\r\n\t\t\t\t\tthis.argumentsArrayAlias = lexicalBoundary.getArgumentsArrayAlias();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.initialise( transforms );\r\n\t}\r\n\r\n\ttranspile ( code, transforms ) {\r\n\t\tif ( transforms.spreadRest && this.arguments.length ) {\r\n\t\t\tlet hasSpreadElements = false;\r\n\t\t\tlet context;\r\n\r\n\t\t\tconst firstArgument = this.arguments[0];\r\n\r\n\t\t\tif ( this.arguments.length === 1 ) {\r\n\t\t\t\tif ( firstArgument.type === 'SpreadElement' ) {\r\n\t\t\t\t\tcode.remove( firstArgument.start, firstArgument.argument.start );\r\n\t\t\t\t\thasSpreadElements = true;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\thasSpreadElements = spread( code, this.arguments, firstArgument.start, this.argumentsArrayAlias );\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasSpreadElements ) {\r\n\r\n\t\t\t\t// we need to handle super() and super.method() differently\r\n\t\t\t\t// due to its instance\r\n\t\t\t\tlet _super = null;\r\n\t\t\t\tif ( this.callee.type === 'Super' ) {\r\n\t\t\t\t\t_super = this.callee;\r\n\t\t\t\t}\r\n\t\t\t\telse if ( this.callee.type === 'MemberExpression' && this.callee.object.type === 'Super' ) {\r\n\t\t\t\t\t_super = this.callee.object;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( !_super && this.callee.type === 'MemberExpression' ) {\r\n\t\t\t\t\tif ( this.callee.object.type === 'Identifier' ) {\r\n\t\t\t\t\t\tcontext = this.callee.object.name;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcontext = this.findScope( true ).createIdentifier( 'ref' );\r\n\t\t\t\t\t\tconst callExpression = this.callee.object;\r\n\t\t\t\t\t\tconst enclosure = callExpression.findNearest( /Function/ );\r\n\t\t\t\t\t\tconst block = enclosure ? enclosure.body.body\r\n\t\t\t\t\t\t\t: callExpression.findNearest( /^Program$/ ).body;\r\n\t\t\t\t\t\tconst lastStatementInBlock = block[ block.length - 1 ];\r\n\t\t\t\t\t\tconst i0 = lastStatementInBlock.getIndentation();\r\n\t\t\t\t\t\tcode.insertRight( callExpression.start, `(${context} = ` );\r\n\t\t\t\t\t\tcode.insertLeft( callExpression.end, `)` );\r\n\t\t\t\t\t\tcode.insertLeft( lastStatementInBlock.end, `\\n${i0}var ${context};` );\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcontext = 'void 0';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcode.insertLeft( this.callee.end, '.apply' );\r\n\r\n\t\t\t\tif ( _super ) {\r\n\t\t\t\t\t_super.noCall = true; // bit hacky...\r\n\r\n\t\t\t\t\tif ( this.arguments.length > 1 ) {\r\n\t\t\t\t\t\tif ( firstArgument.type !== 'SpreadElement' ) {\r\n\t\t\t\t\t\t\tcode.insertRight( firstArgument.start, `[ ` );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcode.insertLeft( this.arguments[ this.arguments.length - 1 ].end, ' )' );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if ( this.arguments.length === 1 ) {\r\n\t\t\t\t\tcode.insertRight( firstArgument.start, `${context}, ` );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif ( firstArgument.type === 'SpreadElement' ) {\r\n\t\t\t\t\t\tcode.insertLeft( firstArgument.start, `${context}, ` );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcode.insertLeft( firstArgument.start, `${context}, [ ` );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcode.insertLeft( this.arguments[ this.arguments.length - 1 ].end, ' )' );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.transpile( code, transforms );\r\n\t}\r\n}\r\n","export function findIndex ( array, fn ) {\r\n\tfor ( let i = 0; i < array.length; i += 1 ) {\r\n\t\tif ( fn( array[i], i ) ) return i;\r\n\t}\r\n\r\n\treturn -1;\r\n}\r\n\r\nexport function find ( array, fn ) {\r\n\treturn array[ findIndex( array, fn ) ];\r\n}\r\n","let reserved = Object.create( null );\r\n'do if in for let new try var case else enum eval null this true void with await break catch class const false super throw while yield delete export import public return static switch typeof default extends finally package private continue debugger function arguments interface protected implements instanceof'.split( ' ' )\r\n\t.forEach( word => reserved[ word ] = true );\r\n\r\nexport default reserved;\r\n","import Node from '../Node.js';\r\nimport { findIndex } from '../../utils/array.js';\r\nimport reserved from '../../utils/reserved.js';\r\n\r\n// TODO this code is pretty wild, tidy it up\r\nexport default class ClassBody extends Node {\r\n\ttranspile ( code, transforms, inFunctionExpression, superName ) {\r\n\t\tif ( transforms.classes ) {\r\n\t\t\tconst name = this.parent.name;\r\n\r\n\t\t\tconst indentStr = code.getIndentString();\r\n\t\t\tconst i0 = this.getIndentation() + ( inFunctionExpression ? indentStr : '' );\r\n\t\t\tconst i1 = i0 + indentStr;\r\n\r\n\t\t\tconst constructorIndex = findIndex( this.body, node => node.kind === 'constructor' );\r\n\t\t\tconst constructor = this.body[ constructorIndex ];\r\n\r\n\t\t\tlet introBlock = '';\r\n\t\t\tlet outroBlock = '';\r\n\r\n\t\t\tif ( this.body.length ) {\r\n\t\t\t\tcode.remove( this.start, this.body[0].start );\r\n\t\t\t\tcode.remove( this.body[ this.body.length - 1 ].end, this.end );\r\n\t\t\t} else {\r\n\t\t\t\tcode.remove( this.start, this.end );\r\n\t\t\t}\r\n\r\n\t\t\tif ( constructor ) {\r\n\t\t\t\tconstructor.value.body.isConstructorBody = true;\r\n\r\n\t\t\t\tconst previousMethod = this.body[ constructorIndex - 1 ];\r\n\t\t\t\tconst nextMethod = this.body[ constructorIndex + 1 ];\r\n\r\n\t\t\t\t// ensure constructor is first\r\n\t\t\t\tif ( constructorIndex > 0 ) {\r\n\t\t\t\t\tcode.remove( previousMethod.end, constructor.start );\r\n\t\t\t\t\tcode.move( constructor.start, nextMethod ? nextMethod.start : this.end - 1, this.body[0].start );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( !inFunctionExpression ) code.insertLeft( constructor.end, ';' );\r\n\t\t\t}\r\n\r\n\t\t\tlet namedFunctions = this.program.options.namedFunctionExpressions !== false;\r\n\t\t\tlet namedConstructor = namedFunctions || this.parent.superClass || this.parent.type !== 'ClassDeclaration';\r\n\t\t\tif ( this.parent.superClass ) {\r\n\t\t\t\tlet inheritanceBlock = `if ( ${superName} ) ${name}.__proto__ = ${superName};\\n${i0}${name}.prototype = Object.create( ${superName} && ${superName}.prototype );\\n${i0}${name}.prototype.constructor = ${name};`;\r\n\r\n\t\t\t\tif ( constructor ) {\r\n\t\t\t\t\tintroBlock += `\\n\\n${i0}` + inheritanceBlock;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst fn = `function ${name} () {` + ( superName ?\r\n\t\t\t\t\t\t`\\n${i1}${superName}.apply(this, arguments);\\n${i0}}` :\r\n\t\t\t\t\t\t`}` ) + ( inFunctionExpression ? '' : ';' ) + ( this.body.length ? `\\n\\n${i0}` : '' );\r\n\r\n\t\t\t\t\tinheritanceBlock = fn + inheritanceBlock;\r\n\t\t\t\t\tintroBlock += inheritanceBlock + `\\n\\n${i0}`;\r\n\t\t\t\t}\r\n\t\t\t} else if ( !constructor ) {\r\n\t\t\t\tlet fn = 'function ' + (namedConstructor ? name + ' ' : '') + '() {}';\r\n\t\t\t\tif ( this.parent.type === 'ClassDeclaration' ) fn += ';';\r\n\t\t\t\tif ( this.body.length ) fn += `\\n\\n${i0}`;\r\n\r\n\t\t\t\tintroBlock += fn;\r\n\t\t\t}\r\n\r\n\t\t\tconst scope = this.findScope( false );\r\n\r\n\t\t\tlet prototypeGettersAndSetters = [];\r\n\t\t\tlet staticGettersAndSetters = [];\r\n\t\t\tlet prototypeAccessors;\r\n\t\t\tlet staticAccessors;\r\n\r\n\t\t\tthis.body.forEach( ( method, i ) => {\r\n\t\t\t\tif ( method.kind === 'constructor' ) {\r\n\t\t\t\t\tlet constructorName = namedConstructor ? ' ' + name : '';\r\n\t\t\t\t\tcode.overwrite( method.key.start, method.key.end, `function${constructorName}` );\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( method.static ) {\r\n\t\t\t\t\tconst len = code.original[ method.start + 6 ] == ' ' ? 7 : 6;\r\n\t\t\t\t\tcode.remove( method.start, method.start + len );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst isAccessor = method.kind !== 'method';\r\n\t\t\t\tlet lhs;\r\n\r\n\t\t\t\tlet methodName = method.key.name;\r\n\t\t\t\tif ( reserved[ methodName ] || method.value.body.scope.references[methodName] ) {\r\n\t\t\t\t\tmethodName = scope.createIdentifier( methodName );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// when method name is a string or a number let's pretend it's a computed method\r\n\r\n\t\t\t\tlet fake_computed = false;\r\n\t\t\t\tif ( ! method.computed && method.key.type === 'Literal' ) {\r\n\t\t\t\t\tfake_computed = true;\r\n\t\t\t\t\tmethod.computed = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( isAccessor ) {\r\n\t\t\t\t\tif ( method.computed ) {\r\n\t\t\t\t\t\tthrow new Error( 'Computed accessor properties are not currently supported' );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcode.remove( method.start, method.key.start );\r\n\r\n\t\t\t\t\tif ( method.static ) {\r\n\t\t\t\t\t\tif ( !~staticGettersAndSetters.indexOf( method.key.name ) ) staticGettersAndSetters.push( method.key.name );\r\n\t\t\t\t\t\tif ( !staticAccessors ) staticAccessors = scope.createIdentifier( 'staticAccessors' );\r\n\r\n\t\t\t\t\t\tlhs = `${staticAccessors}`;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif ( !~prototypeGettersAndSetters.indexOf( method.key.name ) ) prototypeGettersAndSetters.push( method.key.name );\r\n\t\t\t\t\t\tif ( !prototypeAccessors ) prototypeAccessors = scope.createIdentifier( 'prototypeAccessors' );\r\n\r\n\t\t\t\t\t\tlhs = `${prototypeAccessors}`;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlhs = method.static ?\r\n\t\t\t\t\t\t`${name}` :\r\n\t\t\t\t\t\t`${name}.prototype`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( !method.computed ) lhs += '.';\r\n\r\n\t\t\t\tconst insertNewlines = ( constructorIndex > 0 && i === constructorIndex + 1 ) ||\r\n\t\t\t\t                       ( i === 0 && constructorIndex === this.body.length - 1 );\r\n\r\n\t\t\t\tif ( insertNewlines ) lhs = `\\n\\n${i0}${lhs}`;\r\n\r\n\t\t\t\tlet c = method.key.end;\r\n\t\t\t\tif ( method.computed ) {\r\n\t\t\t\t\tif ( fake_computed ) {\r\n\t\t\t\t\t\tcode.insertRight( method.key.start, '[' );\r\n\t\t\t\t\t\tcode.insertLeft( method.key.end, ']' );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\twhile ( code.original[c] !== ']' ) c += 1;\r\n\t\t\t\t\t\tc += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Hack. Deletes the first 6 characters to remove async\r\n\t\t\t\tif ( method.value.async )\r\n\t\t\t\t\tcode.remove( method.start, method.start+6 );\r\n\r\n\t\t\t\tcode.insertRight( method.start, lhs );\r\n\r\n\t\t\t\tconst funcName = method.computed || isAccessor || !namedFunctions ? '' : `${methodName} `;\r\n\t\t\t\tconst rhs = ( isAccessor ? `.${method.kind}` : '' ) + ` = ` + ( method.value.async ? 'async ' : '' ) + `function` + ( method.value.generator ? '* ' : ' ' ) + funcName;\r\n\t\t\t\tcode.remove( c, method.value.start );\r\n\t\t\t\tcode.insertRight( method.value.start, rhs );\r\n\t\t\t\tcode.insertLeft( method.end, ';' );\r\n\r\n\t\t\t\tif ( method.value.generator ) code.remove( method.start, method.key.start );\r\n\t\t\t});\r\n\r\n\t\t\tif ( prototypeGettersAndSetters.length || staticGettersAndSetters.length ) {\r\n\t\t\t\tlet intro = [];\r\n\t\t\t\tlet outro = [];\r\n\r\n\t\t\t\tif ( prototypeGettersAndSetters.length ) {\r\n\t\t\t\t\tintro.push( `var ${prototypeAccessors} = { ${prototypeGettersAndSetters.map( name => `${name}: {}` ).join( ',' )} };` );\r\n\t\t\t\t\toutro.push( `Object.defineProperties( ${name}.prototype, ${prototypeAccessors} );` );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( staticGettersAndSetters.length ) {\r\n\t\t\t\t\tintro.push( `var ${staticAccessors} = { ${staticGettersAndSetters.map( name => `${name}: {}` ).join( ',' )} };` );\r\n\t\t\t\t\toutro.push( `Object.defineProperties( ${name}, ${staticAccessors} );` );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( constructor ) introBlock += `\\n\\n${i0}`;\r\n\t\t\t\tintroBlock += intro.join( `\\n${i0}` );\r\n\t\t\t\tif ( !constructor ) introBlock += `\\n\\n${i0}`;\r\n\r\n\t\t\t\toutroBlock += `\\n\\n${i0}` + outro.join( `\\n${i0}` );\r\n\t\t\t}\r\n\r\n\t\t\tif ( constructor ) {\r\n\t\t\t\tcode.insertLeft( constructor.end, introBlock );\r\n\t\t\t} else {\r\n\t\t\t\tcode.insertRight( this.start, introBlock );\r\n\t\t\t}\r\n\r\n\t\t\tcode.insertLeft( this.end, outroBlock );\r\n\t\t}\r\n\r\n\t\tsuper.transpile( code, transforms );\r\n\t}\r\n}\r\n","// TODO this function is slightly flawed – it works on the original string,\r\n// not its current edited state.\r\n// That's not a problem for the way that it's currently used, but it could\r\n// be in future...\r\nexport default function deindent ( node, code ) {\r\n\tconst start = node.start;\r\n\tconst end = node.end;\r\n\r\n\tconst indentStr = code.getIndentString();\r\n\tconst indentStrLen = indentStr.length;\r\n\tconst indentStart = start - indentStrLen;\r\n\r\n\tif ( !node.program.indentExclusions[ indentStart ]\r\n\t&& code.original.slice( indentStart, start ) === indentStr ) {\r\n\t\tcode.remove( indentStart, start );\r\n\t}\r\n\r\n\tconst pattern = new RegExp( indentStr + '\\\\S', 'g' );\r\n\tconst slice = code.original.slice( start, end );\r\n\tlet match;\r\n\r\n\twhile ( match = pattern.exec( slice ) ) {\r\n\t\tconst removeStart = start + match.index;\r\n\t\tif ( !node.program.indentExclusions[ removeStart ] ) {\r\n\t\t\tcode.remove( removeStart, removeStart + indentStrLen );\r\n\t\t}\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\nimport deindent from '../../utils/deindent.js';\r\n\r\nexport default class ClassDeclaration extends Node {\r\n\tinitialise ( transforms ) {\r\n\t\tthis.name = this.id.name;\r\n\t\tthis.findScope( true ).addDeclaration( this.id, 'class' );\r\n\r\n\t\tsuper.initialise( transforms );\r\n\t}\r\n\r\n\ttranspile ( code, transforms ) {\r\n\t\tif ( transforms.classes ) {\r\n\t\t\tif ( !this.superClass ) deindent( this.body, code );\r\n\r\n\t\t\tconst superName = this.superClass && ( this.superClass.name || 'superclass' );\r\n\r\n\t\t\tconst i0 = this.getIndentation();\r\n\t\t\tconst i1 = i0 + code.getIndentString();\r\n\r\n\t\t\t// if this is an export default statement, we have to move the export to\r\n\t\t\t// after the declaration, because `export default var Foo = ...` is illegal\r\n\t\t\tconst syntheticDefaultExport = this.parent.type === 'ExportDefaultDeclaration' ?\r\n\t\t\t\t`\\n\\n${i0}export default ${this.id.name};` :\r\n\t\t\t\t'';\r\n\r\n\t\t\tif ( syntheticDefaultExport ) code.remove( this.parent.start, this.start );\r\n\r\n\t\t\tcode.overwrite( this.start, this.id.start, 'var ' );\r\n\r\n\t\t\tif ( this.superClass ) {\r\n\t\t\t\tif ( this.superClass.end === this.body.start ) {\r\n\t\t\t\t\tcode.remove( this.id.end, this.superClass.start );\r\n\t\t\t\t\tcode.insertLeft( this.id.end, ` = (function (${superName}) {\\n${i1}` );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcode.overwrite( this.id.end, this.superClass.start, ' = ' );\r\n\t\t\t\t\tcode.overwrite( this.superClass.end, this.body.start, `(function (${superName}) {\\n${i1}` );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif ( this.id.end === this.body.start ) {\r\n\t\t\t\t\tcode.insertLeft( this.id.end, ' = ' );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcode.overwrite( this.id.end, this.body.start, ' = ' );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.body.transpile( code, transforms, !!this.superClass, superName );\r\n\r\n\t\t\tif ( this.superClass ) {\r\n\t\t\t\tcode.insertLeft( this.end, `\\n\\n${i1}return ${this.name};\\n${i0}}(` );\r\n\t\t\t\tcode.move( this.superClass.start, this.superClass.end, this.end );\r\n\t\t\t\tcode.insertRight( this.end, `));${syntheticDefaultExport}` );\r\n\t\t\t} else if ( syntheticDefaultExport ) {\r\n\t\t\t\tcode.insertRight( this.end, syntheticDefaultExport );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\tthis.body.transpile( code, transforms, false, null );\r\n\t\t}\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\n\r\nexport default class ClassExpression extends Node {\r\n\tinitialise ( transforms ) {\r\n\t\tthis.name = this.id ? this.id.name :\r\n\t\t            this.parent.type === 'VariableDeclarator' ? this.parent.id.name :\r\n\t\t            this.parent.type === 'AssignmentExpression' ? this.parent.left.name :\r\n\t\t            this.findScope( true ).createIdentifier( 'anonymous' );\r\n\r\n\t\tsuper.initialise( transforms );\r\n\t}\r\n\r\n\ttranspile ( code, transforms ) {\r\n\t\tif ( transforms.classes ) {\r\n\t\t\tconst superName = this.superClass && ( this.superClass.name || 'superclass' );\r\n\r\n\t\t\tconst i0 = this.getIndentation();\r\n\t\t\tconst i1 = i0 + code.getIndentString();\r\n\r\n\t\t\tif ( this.superClass ) {\r\n\t\t\t\tcode.remove( this.start, this.superClass.start );\r\n\t\t\t\tcode.remove( this.superClass.end, this.body.start );\r\n\t\t\t\tcode.insertLeft( this.start, `(function (${superName}) {\\n${i1}` );\r\n\t\t\t} else {\r\n\t\t\t\tcode.overwrite( this.start, this.body.start, `(function () {\\n${i1}` );\r\n\t\t\t}\r\n\r\n\t\t\tthis.body.transpile( code, transforms, true, superName );\r\n\r\n\t\t\tconst outro = `\\n\\n${i1}return ${this.name};\\n${i0}}(`;\r\n\r\n\t\t\tif ( this.superClass ) {\r\n\t\t\t\tcode.insertLeft( this.end, outro );\r\n\t\t\t\tcode.move( this.superClass.start, this.superClass.end, this.end );\r\n\t\t\t\tcode.insertRight( this.end, '))' );\r\n\t\t\t} else {\r\n\t\t\t\tcode.insertLeft( this.end, `\\n\\n${i1}return ${this.name};\\n${i0}}())` );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\tthis.body.transpile( code, transforms, false );\r\n\t\t}\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\nimport CompileError from '../../utils/CompileError.js';\r\nimport { loopStatement } from '../../utils/patterns.js';\r\n\r\nexport default class ContinueStatement extends Node {\r\n\ttranspile ( code ) {\r\n\t\tconst loop = this.findNearest( loopStatement );\r\n\t\tif ( loop.shouldRewriteAsFunction ) {\r\n\t\t\tif ( this.label ) throw new CompileError( this, 'Labels are not currently supported in a loop with locally-scoped variables' );\r\n\t\t\tcode.overwrite( this.start, this.start + 8, 'return' );\r\n\t\t}\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\nimport CompileError from '../../utils/CompileError.js';\r\n\r\nexport default class ExportDefaultDeclaration extends Node {\r\n\tinitialise ( transforms ) {\r\n\t\tif ( transforms.moduleExport ) throw new CompileError( this, 'export is not supported' );\r\n\t\tsuper.initialise( transforms );\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\nimport CompileError from '../../utils/CompileError.js';\r\n\r\nexport default class ExportNamedDeclaration extends Node {\r\n\tinitialise ( transforms ) {\r\n\t\tif ( transforms.moduleExport ) throw new CompileError( this, 'export is not supported' );\r\n\t\tsuper.initialise( transforms );\r\n\t}\r\n}\r\n","import Node from '../../Node.js';\r\n\r\nexport default class LoopStatement extends Node {\r\n\tfindScope ( functionScope ) {\r\n\t\treturn functionScope || !this.createdScope ? this.parent.findScope( functionScope ) : this.body.scope;\r\n\t}\r\n\r\n\tinitialise ( transforms ) {\r\n\t\tthis.body.createScope();\r\n\t\tthis.createdScope = true;\r\n\r\n\t\t// this is populated as and when reassignments occur\r\n\t\tthis.reassigned = Object.create( null );\r\n\t\tthis.aliases = Object.create( null );\r\n\r\n\t\tsuper.initialise( transforms );\r\n\r\n\t\tif ( transforms.letConst ) {\r\n\t\t\t// see if any block-scoped declarations are referenced\r\n\t\t\t// inside function expressions\r\n\t\t\tconst names = Object.keys( this.body.scope.declarations );\r\n\r\n\t\t\tlet i = names.length;\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tconst name = names[i];\r\n\t\t\t\tconst declaration = this.body.scope.declarations[ name ];\r\n\r\n\t\t\t\tlet j = declaration.instances.length;\r\n\t\t\t\twhile ( j-- ) {\r\n\t\t\t\t\tconst instance = declaration.instances[j];\r\n\t\t\t\t\tconst nearestFunctionExpression = instance.findNearest( /Function/ );\r\n\r\n\t\t\t\t\tif ( nearestFunctionExpression && nearestFunctionExpression.depth > this.depth ) {\r\n\t\t\t\t\t\tthis.shouldRewriteAsFunction = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( this.shouldRewriteAsFunction ) break;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttranspile ( code, transforms ) {\r\n\t\tconst needsBlock = this.type != 'ForOfStatement' && (\r\n\t\t\tthis.body.type !== 'BlockStatement'\r\n\t\t\t|| this.body.type === 'BlockStatement' && this.body.synthetic );\r\n\r\n\t\tif ( this.shouldRewriteAsFunction ) {\r\n\t\t\tconst i0 = this.getIndentation();\r\n\t\t\tconst i1 = i0 + code.getIndentString();\r\n\r\n\t\t\tconst argString = this.args ? ` ${this.args.join( ', ' )} ` : '';\r\n\t\t\tconst paramString = this.params ? ` ${this.params.join( ', ' )} ` : '';\r\n\r\n\t\t\tconst functionScope = this.findScope( true );\r\n\t\t\tconst loop = functionScope.createIdentifier( 'loop' );\r\n\r\n\t\t\tconst before = `var ${loop} = function (${paramString}) ` + ( this.body.synthetic ? `{\\n${i0}${code.getIndentString()}` : '' );\r\n\t\t\tconst after = ( this.body.synthetic ? `\\n${i0}}` : '' ) + `;\\n\\n${i0}`;\r\n\r\n\t\t\tcode.insertRight( this.body.start, before );\r\n\t\t\tcode.insertLeft( this.body.end, after );\r\n\t\t\tcode.move( this.start, this.body.start, this.body.end );\r\n\r\n\t\t\tif ( this.canBreak || this.canReturn ) {\r\n\t\t\t\tconst returned = functionScope.createIdentifier( 'returned' );\r\n\r\n\t\t\t\tlet insert = `{\\n${i1}var ${returned} = ${loop}(${argString});\\n`;\r\n\t\t\t\tif ( this.canBreak ) insert += `\\n${i1}if ( ${returned} === 'break' ) break;`;\r\n\t\t\t\tif ( this.canReturn ) insert += `\\n${i1}if ( ${returned} ) return ${returned}.v;`;\r\n\t\t\t\tinsert += `\\n${i0}}`;\r\n\r\n\t\t\t\tcode.insertRight( this.body.end, insert );\r\n\t\t\t} else {\r\n\t\t\t\tconst callExpression = `${loop}(${argString});`;\r\n\r\n\t\t\t\tif ( this.type === 'DoWhileStatement' ) {\r\n\t\t\t\t\tcode.overwrite( this.start, this.body.start, `do {\\n${i1}${callExpression}\\n${i0}}` );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcode.insertRight( this.body.end, callExpression );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if ( needsBlock ) {\r\n\t\t\tcode.insertLeft( this.body.start, '{ ' );\r\n\t\t\tcode.insertRight( this.body.end, ' }' );\r\n\t\t}\r\n\r\n\t\tsuper.transpile( code, transforms );\r\n\t}\r\n}\r\n","export default function extractNames ( node ) {\r\n\tconst names = [];\r\n\textractors[ node.type ]( names, node );\r\n\treturn names;\r\n}\r\n\r\nconst extractors = {\r\n\tIdentifier ( names, node ) {\r\n\t\tnames.push( node );\r\n\t},\r\n\r\n\tObjectPattern ( names, node ) {\r\n\t\tfor ( const prop of node.properties ) {\r\n\t\t\textractors[ prop.value.type ]( names, prop.value );\r\n\t\t}\r\n\t},\r\n\r\n\tArrayPattern ( names, node ) {\r\n\t\tfor ( const element of node.elements )  {\r\n\t\t\tif ( element ) extractors[ element.type ]( names, element );\r\n\t\t}\r\n\t},\r\n\r\n\tRestElement ( names, node ) {\r\n\t\textractors[ node.argument.type ]( names, node.argument );\r\n\t},\r\n\r\n\tAssignmentPattern ( names, node ) {\r\n\t\textractors[ node.left.type ]( names, node.left );\r\n\t}\r\n};\r\n","import LoopStatement from './shared/LoopStatement.js';\r\nimport extractNames from '../extractNames.js';\r\n\r\nexport default class ForStatement extends LoopStatement {\r\n\tfindScope ( functionScope ) {\r\n\t\treturn functionScope || !this.createdScope ? this.parent.findScope( functionScope ) : this.body.scope;\r\n\t}\r\n\r\n\ttranspile ( code, transforms ) {\r\n\t\tconst i1 = this.getIndentation() + code.getIndentString();\r\n\r\n\t\tif ( this.shouldRewriteAsFunction ) {\r\n\t\t\t// which variables are declared in the init statement?\r\n\t\t\tconst names = this.init.type === 'VariableDeclaration' ?\r\n\t\t\t\t[].concat.apply( [], this.init.declarations.map( declarator => extractNames( declarator.id ) ) ) :\r\n\t\t\t\t[];\r\n\r\n\t\t\tconst aliases = this.aliases;\r\n\r\n\t\t\tthis.args = names.map( name => name in this.aliases ? this.aliases[ name ].outer : name );\r\n\t\t\tthis.params = names.map( name => name in this.aliases ? this.aliases[ name ].inner : name );\r\n\r\n\t\t\tconst updates = Object.keys( this.reassigned )\r\n\t\t\t\t.map( name => `${aliases[ name ].outer} = ${aliases[ name ].inner};` );\r\n\r\n\t\t\tif ( updates.length ) {\r\n\t\t\t\tif ( this.body.synthetic ) {\r\n\t\t\t\t\tcode.insertLeft( this.body.body[0].end, `; ${updates.join(` `)}` );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst lastStatement = this.body.body[ this.body.body.length - 1 ];\r\n\t\t\t\t\tcode.insertLeft( lastStatement.end, `\\n\\n${i1}${updates.join(`\\n${i1}`)}` );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.transpile( code, transforms );\r\n\t}\r\n}\r\n","import LoopStatement from './shared/LoopStatement.js';\r\nimport extractNames from '../extractNames.js';\r\n\r\nexport default class ForInStatement extends LoopStatement {\r\n\tfindScope ( functionScope ) {\r\n\t\treturn functionScope || !this.createdScope ? this.parent.findScope( functionScope ) : this.body.scope;\r\n\t}\r\n\r\n\ttranspile ( code, transforms ) {\r\n\t\tif ( this.shouldRewriteAsFunction ) {\r\n\t\t\t// which variables are declared in the init statement?\r\n\t\t\tconst names = this.left.type === 'VariableDeclaration' ?\r\n\t\t\t\t[].concat.apply( [], this.left.declarations.map( declarator => extractNames( declarator.id ) ) ) :\r\n\t\t\t\t[];\r\n\r\n\t\t\tthis.args = names.map( name => name in this.aliases ? this.aliases[ name ].outer : name );\r\n\t\t\tthis.params = names.map( name => name in this.aliases ? this.aliases[ name ].inner : name );\r\n\t\t}\r\n\r\n\t\tsuper.transpile( code, transforms );\r\n\t}\r\n}\r\n","import { findIndex } from './array.js';\r\n\r\nconst handlers = {\r\n\tIdentifier: destructureIdentifier,\r\n\tAssignmentPattern: destructureAssignmentPattern,\r\n\tArrayPattern: destructureArrayPattern,\r\n\tObjectPattern: destructureObjectPattern\r\n};\r\n\r\nexport default function destructure ( code, scope, node, ref, inline, statementGenerators ) {\r\n\thandlers[ node.type ]( code, scope, node, ref, inline, statementGenerators );\r\n}\r\n\r\nfunction destructureIdentifier ( code, scope, node, ref, inline, statementGenerators ) {\r\n\tstatementGenerators.push( ( start, prefix, suffix ) => {\r\n\t\tcode.insertRight( node.start, inline ? prefix : `${prefix}var ` );\r\n\t\tcode.insertLeft( node.end, ` = ${ref}${suffix}` );\r\n\t\tcode.move( node.start, node.end, start );\r\n\t});\r\n}\r\n\r\nfunction destructureAssignmentPattern ( code, scope, node, ref, inline, statementGenerators ) {\r\n\tconst isIdentifier = node.left.type === 'Identifier';\r\n\tconst name = isIdentifier ? node.left.name : ref;\r\n\r\n\tif ( !inline ) {\r\n\t\tstatementGenerators.push( ( start, prefix, suffix ) => {\r\n\t\t\tcode.insertRight( node.left.end, `${prefix}if ( ${name} === void 0 ) ${name}` );\r\n\t\t\tcode.move( node.left.end, node.right.end, start );\r\n\t\t\tcode.insertLeft( node.right.end, suffix );\r\n\t\t});\r\n\t}\r\n\r\n\tif ( !isIdentifier ) {\r\n\t\tdestructure( code, scope, node.left, ref, inline, statementGenerators );\r\n\t}\r\n}\r\n\r\nfunction destructureArrayPattern ( code, scope, node, ref, inline, statementGenerators ) {\r\n\tlet c = node.start;\r\n\r\n\tnode.elements.forEach( ( element, i ) => {\r\n\t\tif ( !element ) return;\r\n\r\n\t\tif ( element.type === 'RestElement' ) {\r\n\t\t\thandleProperty( code, scope, c, element.argument, `${ref}.slice(${i})`, inline, statementGenerators );\r\n\t\t} else {\r\n\t\t\thandleProperty( code, scope, c, element, `${ref}[${i}]`, inline, statementGenerators );\r\n\t\t}\r\n\t\tc = element.end;\r\n\t});\r\n\r\n\tcode.remove( c, node.end );\r\n}\r\n\r\nfunction destructureObjectPattern ( code, scope, node, ref, inline, statementGenerators ) {\r\n\tlet c = node.start;\r\n\r\n\tnode.properties.forEach( prop => {\r\n\t\tlet value = prop.computed || prop.key.type !== 'Identifier' ? `${ref}[${code.slice(prop.key.start, prop.key.end)}]` : `${ref}.${prop.key.name}`;\r\n\t\thandleProperty( code, scope, c, prop.value, value, inline, statementGenerators );\r\n\t\tc = prop.end;\r\n\t});\r\n\r\n\tcode.remove( c, node.end );\r\n}\r\n\r\nfunction handleProperty ( code, scope, c, node, value, inline, statementGenerators ) {\r\n\tswitch ( node.type ) {\r\n\t\tcase 'Identifier': {\r\n\t\t\tcode.remove( c, node.start );\r\n\t\t\tdestructureIdentifier( code, scope, node, value, inline, statementGenerators );\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tcase 'AssignmentPattern': {\r\n\t\t\tlet name;\r\n\r\n\t\t\tconst isIdentifier = node.left.type === 'Identifier';\r\n\r\n\t\t\tif ( isIdentifier ) {\r\n\t\t\t\tname = node.left.name;\r\n\t\t\t\tconst declaration = scope.findDeclaration( name );\r\n\t\t\t\tif ( declaration ) name = declaration.name;\r\n\t\t\t} else {\r\n\t\t\t\tname = scope.createIdentifier( value );\r\n\t\t\t}\r\n\r\n\t\t\tstatementGenerators.push( ( start, prefix, suffix ) => {\r\n\t\t\t\tif ( inline ) {\r\n\t\t\t\t\tcode.insertRight( node.right.start, `${name} = ${value} === undefined ? ` );\r\n\t\t\t\t\tcode.insertLeft( node.right.end, ` : ${value}` );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcode.insertRight( node.right.start, `${prefix}var ${name} = ${value}; if ( ${name} === void 0 ) ${name} = ` );\r\n\t\t\t\t\tcode.insertLeft( node.right.end, suffix );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcode.move( node.right.start, node.right.end, start );\r\n\t\t\t});\r\n\r\n\t\t\tif ( isIdentifier ) {\r\n\t\t\t\tcode.remove( c, node.right.start );\r\n\t\t\t} else {\r\n\t\t\t\tcode.remove( c, node.left.start );\r\n\t\t\t\tcode.remove( node.left.end, node.right.start );\r\n\t\t\t\thandleProperty( code, scope, c, node.left, name, inline, statementGenerators );\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tcase 'ObjectPattern': {\r\n\t\t\tcode.remove( c, c = node.start );\r\n\r\n\t\t\tif ( node.properties.length > 1 ) {\r\n\t\t\t\tconst ref = scope.createIdentifier( value );\r\n\r\n\t\t\t\tstatementGenerators.push( ( start, prefix, suffix ) => {\r\n\t\t\t\t\t// this feels a tiny bit hacky, but we can't do a\r\n\t\t\t\t\t// straightforward insertLeft and keep correct order...\r\n\t\t\t\t\tcode.insertRight( node.start, `${prefix}var ${ref} = ` );\r\n\t\t\t\t\tcode.overwrite( node.start, c = node.start + 1, value );\r\n\t\t\t\t\tcode.insertLeft( c, suffix );\r\n\r\n\t\t\t\t\tcode.move( node.start, c, start );\r\n\t\t\t\t});\r\n\r\n\t\t\t\tnode.properties.forEach( prop => {\r\n\t\t\t\t\tconst value = prop.computed || prop.key.type !== 'Identifier' ? `${ref}[${code.slice(prop.key.start, prop.key.end)}]` : `${ref}.${prop.key.name}`;\r\n\t\t\t\t\thandleProperty( code, scope, c, prop.value, value, inline, statementGenerators );\r\n\t\t\t\t\tc = prop.end;\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tconst prop = node.properties[0];\r\n\t\t\t\tconst value_suffix = prop.computed || prop.key.type !== 'Identifier' ? `[${code.slice(prop.key.start, prop.key.end)}]` : `.${prop.key.name}`;\r\n\t\t\t\thandleProperty( code, scope, c, prop.value, `${value}${value_suffix}`, inline, statementGenerators );\r\n\t\t\t\tc = prop.end;\r\n\t\t\t}\r\n\r\n\t\t\tcode.remove( c, node.end );\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tcase 'ArrayPattern': {\r\n\t\t\tcode.remove( c, c = node.start );\r\n\r\n\t\t\tif ( node.elements.filter( Boolean ).length > 1 ) {\r\n\t\t\t\tconst ref = scope.createIdentifier( value );\r\n\r\n\t\t\t\tstatementGenerators.push( ( start, prefix, suffix ) => {\r\n\t\t\t\t\tcode.insertRight( node.start, `${prefix}var ${ref} = ` );\r\n\t\t\t\t\tcode.overwrite( node.start, c = node.start + 1, value );\r\n\t\t\t\t\tcode.insertLeft( c, suffix );\r\n\r\n\t\t\t\t\tcode.move( node.start, c, start );\r\n\t\t\t\t});\r\n\r\n\t\t\t\tnode.elements.forEach( ( element, i ) => {\r\n\t\t\t\t\tif ( !element ) return;\r\n\r\n\t\t\t\t\tif ( element.type === 'RestElement' ) {\r\n\t\t\t\t\t\thandleProperty( code, scope, c, element.argument, `${ref}.slice(${i})`, inline, statementGenerators );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\thandleProperty( code, scope, c, element, `${ref}[${i}]`, inline, statementGenerators );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tc = element.end;\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tconst index = findIndex( node.elements, Boolean );\r\n\t\t\t\tconst element = node.elements[ index ];\r\n\t\t\t\tif ( element.type === 'RestElement' ) {\r\n\t\t\t\t\thandleProperty( code, scope, c, element.argument, `${value}.slice(${index})`, inline, statementGenerators );\r\n\t\t\t\t} else {\r\n\t\t\t\t\thandleProperty( code, scope, c, element, `${value}[${index}]`, inline, statementGenerators );\r\n\t\t\t\t}\r\n\t\t\t\tc = element.end;\r\n\t\t\t}\r\n\r\n\t\t\tcode.remove( c, node.end );\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tdefault: {\r\n\t\t\tthrow new Error( `Unexpected node type in destructuring (${node.type})` );\r\n\t\t}\r\n\t}\r\n}\r\n","import LoopStatement from './shared/LoopStatement.js';\r\nimport CompileError from '../../utils/CompileError.js';\r\nimport destructure from '../../utils/destructure.js';\r\n\r\nexport default class ForOfStatement extends LoopStatement {\r\n\tinitialise ( transforms ) {\r\n\t\tif ( transforms.forOf && !transforms.dangerousForOf ) throw new CompileError( this, 'for...of statements are not supported. Use `transforms: { forOf: false }` to skip transformation and disable this error, or `transforms: { dangerousForOf: true }` if you know what you\\'re doing' );\r\n\t\tsuper.initialise( transforms );\r\n\t}\r\n\r\n\ttranspile ( code, transforms ) {\r\n\t\tif ( !transforms.dangerousForOf ) {\r\n\t\t\tsuper.transpile( code, transforms );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// edge case (#80)\r\n\t\tif ( !this.body.body[0] ) {\r\n\t\t\tif ( this.left.type === 'VariableDeclaration' && this.left.kind === 'var' ) {\r\n\t\t\t\tcode.remove( this.start, this.left.start );\r\n\t\t\t\tcode.insertLeft( this.left.end, ';' );\r\n\t\t\t\tcode.remove( this.left.end, this.end );\r\n\t\t\t} else {\r\n\t\t\t\tcode.remove( this.start, this.end );\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst scope = this.findScope( true );\r\n\t\tconst i0 = this.getIndentation();\r\n\t\tconst i1 = i0 + code.getIndentString();\r\n\r\n\t\tconst key = scope.createIdentifier( 'i' );\r\n\t\tconst list = scope.createIdentifier( 'list' );\r\n\r\n\t\tif ( this.body.synthetic ) {\r\n\t\t\tcode.insertRight( this.left.start, `{\\n${i1}` );\r\n\t\t\tcode.insertLeft( this.body.body[0].end, `\\n${i0}}` );\r\n\t\t}\r\n\r\n\t\tconst bodyStart = this.body.body[0].start;\r\n\r\n\t\tcode.remove( this.left.end, this.right.start );\r\n\t\tcode.move( this.left.start, this.left.end, bodyStart );\r\n\r\n\r\n\t\tcode.insertRight( this.right.start, `var ${key} = 0, ${list} = ` );\r\n\t\tcode.insertLeft( this.right.end, `; ${key} < ${list}.length; ${key} += 1` );\r\n\r\n\t\t// destructuring. TODO non declaration destructuring\r\n\t\tconst declarator = this.left.type === 'VariableDeclaration' && this.left.declarations[0];\r\n\t\tif ( declarator && declarator.id.type !== 'Identifier' ) {\r\n\t\t\tlet statementGenerators = [];\r\n\t\t\tconst ref = scope.createIdentifier( 'ref' );\r\n\t\t\tdestructure( code, scope, declarator.id, ref, false, statementGenerators );\r\n\r\n\t\t\tlet suffix = `;\\n${i1}`;\r\n\t\t\tstatementGenerators.forEach( ( fn, i ) => {\r\n\t\t\t\tif ( i === statementGenerators.length - 1 ) {\r\n\t\t\t\t\tsuffix = `;\\n\\n${i1}`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfn( bodyStart, '', suffix );\r\n\t\t\t});\r\n\r\n\t\t\tcode.insertLeft( this.left.start + this.left.kind.length + 1, ref );\r\n\t\t\tcode.insertLeft( this.left.end, ` = ${list}[${key}];\\n${i1}` );\r\n\t\t} else {\r\n\t\t\tcode.insertLeft( this.left.end, ` = ${list}[${key}];\\n\\n${i1}` );\r\n\t\t}\r\n\r\n\t\tsuper.transpile( code, transforms );\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\nimport CompileError from '../../utils/CompileError.js';\r\n\r\nexport default class FunctionDeclaration extends Node {\r\n\tinitialise ( transforms ) {\r\n\t\tif ( this.generator && transforms.generator ) {\r\n\t\t\tthrow new CompileError( this, 'Generators are not supported' );\r\n\t\t}\r\n\r\n\t\tthis.body.createScope();\r\n\r\n\t\tthis.findScope( true ).addDeclaration( this.id, 'function' );\r\n\t\tsuper.initialise( transforms );\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\nimport CompileError from '../../utils/CompileError.js';\r\n\r\nexport default class FunctionExpression extends Node {\r\n\tinitialise ( transforms ) {\r\n\t\tif ( this.generator && transforms.generator ) {\r\n\t\t\tthrow new CompileError( this, 'Generators are not supported' );\r\n\t\t}\r\n\r\n\t\tthis.body.createScope();\r\n\r\n\t\tif ( this.id ) {\r\n\t\t\t// function expression IDs belong to the child scope...\r\n\t\t\tthis.body.scope.addDeclaration( this.id, 'function' );\r\n\t\t}\r\n\r\n\t\tsuper.initialise( transforms );\r\n\r\n\t\tconst parent = this.parent;\r\n\t\tlet methodName;\r\n\r\n\t\tif ( transforms.conciseMethodProperty\r\n\t\t\t\t&& parent.type === 'Property'\r\n\t\t\t\t&& parent.kind === 'init'\r\n\t\t\t\t&& parent.method\r\n\t\t\t\t&& parent.key.type === 'Identifier' ) {\r\n\t\t\t// object literal concise method\r\n\t\t\tmethodName = parent.key.name;\r\n\t\t}\r\n\t\telse if ( transforms.classes\r\n\t\t\t\t&& parent.type === 'MethodDefinition'\r\n\t\t\t\t&& parent.kind === 'method'\r\n\t\t\t\t&& parent.key.type === 'Identifier' ) {\r\n\t\t\t// method definition in a class\r\n\t\t\tmethodName = parent.key.name;\r\n\t\t}\r\n\t\telse if ( this.id && this.id.type === 'Identifier' ) {\r\n\t\t\t// naked function expression\r\n\t\t\tmethodName = this.id.alias || this.id.name;\r\n\t\t}\r\n\r\n\t\tif ( methodName ) {\r\n\t\t\tfor ( const param of this.params ) {\r\n\t\t\t\tif ( param.type === 'Identifier' && methodName === param.name ) {\r\n\t\t\t\t\t// workaround for Safari 9/WebKit bug:\r\n\t\t\t\t\t// https://gitlab.com/Rich-Harris/buble/issues/154\r\n\t\t\t\t\t// change parameter name when same as method name\r\n\r\n\t\t\t\t\tconst scope = this.body.scope;\r\n\t\t\t\t\tconst declaration = scope.declarations[ methodName ];\r\n\r\n\t\t\t\t\tconst alias = scope.createIdentifier( methodName );\r\n\t\t\t\t\tparam.alias = alias;\r\n\r\n\t\t\t\t\tfor ( const identifier of declaration.instances ) {\r\n\t\t\t\t\t\tidentifier.alias = alias;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","export default function isReference ( node, parent ) {\r\n\tif ( node.type === 'MemberExpression' ) {\r\n\t\treturn !node.computed && isReference( node.object, node );\r\n\t}\r\n\r\n\tif ( node.type === 'Identifier' ) {\r\n\t\t// the only time we could have an identifier node without a parent is\r\n\t\t// if it's the entire body of a function without a block statement –\r\n\t\t// i.e. an arrow function expression like `a => a`\r\n\t\tif ( !parent ) return true;\r\n\r\n\t\tif ( /(Function|Class)Expression/.test( parent.type ) ) return false;\r\n\r\n\t\tif ( parent.type === 'VariableDeclarator' ) return node === parent.init;\r\n\r\n\t\t// TODO is this right?\r\n\t\tif ( parent.type === 'MemberExpression' || parent.type === 'MethodDefinition' ) {\r\n\t\t\treturn parent.computed || node === parent.object;\r\n\t\t}\r\n\r\n\t\tif ( parent.type === 'ArrayPattern' ) return false;\r\n\r\n\t\t// disregard the `bar` in `{ bar: foo }`, but keep it in `{ [bar]: foo }`\r\n\t\tif ( parent.type === 'Property' ) {\r\n\t\t\tif ( parent.parent.type === 'ObjectPattern' ) return false;\r\n\t\t\treturn parent.computed || node === parent.value;\r\n\t\t}\r\n\r\n\t\t// disregard the `bar` in `class Foo { bar () {...} }`\r\n\t\tif ( parent.type === 'MethodDefinition' ) return false;\r\n\r\n\t\t// disregard the `bar` in `export { foo as bar }`\r\n\t\tif ( parent.type === 'ExportSpecifier' && node !== parent.local ) return false;\r\n\r\n\t\treturn true;\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\nimport isReference from '../../utils/isReference.js';\r\nimport { loopStatement } from '../../utils/patterns.js';\r\n\r\nexport default class Identifier extends Node {\r\n\tfindScope ( functionScope ) {\r\n\t\tif ( this.parent.params && ~this.parent.params.indexOf( this ) ) {\r\n\t\t\treturn this.parent.body.scope;\r\n\t\t}\r\n\r\n\t\tif ( this.parent.type === 'FunctionExpression' && this === this.parent.id ) {\r\n\t\t\treturn this.parent.body.scope;\r\n\t\t}\r\n\r\n\t\treturn this.parent.findScope( functionScope\t);\r\n\t}\r\n\r\n\tinitialise ( transforms ) {\r\n\t\tif ( transforms.arrow && isReference( this, this.parent ) ) {\r\n\t\t\tif ( this.name === 'arguments' && !this.findScope( false ).contains( this.name ) ) {\r\n\t\t\t\tconst lexicalBoundary = this.findLexicalBoundary();\r\n\t\t\t\tconst arrowFunction = this.findNearest( 'ArrowFunctionExpression' );\r\n\t\t\t\tconst loop = this.findNearest( loopStatement );\r\n\r\n\t\t\t\tif ( arrowFunction && arrowFunction.depth > lexicalBoundary.depth ) {\r\n\t\t\t\t\tthis.alias = lexicalBoundary.getArgumentsAlias();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( loop && loop.body.contains( this ) && loop.depth > lexicalBoundary.depth ) {\r\n\t\t\t\t\tthis.alias = lexicalBoundary.getArgumentsAlias();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.findScope( false ).addReference( this );\r\n\t\t}\r\n\t}\r\n\r\n\ttranspile ( code ) {\r\n\t\tif ( this.alias ) {\r\n\t\t\tcode.overwrite( this.start, this.end, this.alias, true );\r\n\t\t}\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\n\r\nexport default class IfStatement extends Node {\r\n\tinitialise ( transforms ) {\r\n\t\tsuper.initialise( transforms );\r\n\t}\r\n\r\n\ttranspile ( code, transforms ) {\r\n\t\tif ( this.consequent.type !== 'BlockStatement'\r\n\t\t\t\t|| this.consequent.type === 'BlockStatement' && this.consequent.synthetic ) {\r\n\t\t\tcode.insertLeft( this.consequent.start, '{ ' );\r\n\t\t\tcode.insertRight( this.consequent.end, ' }' );\r\n\t\t}\r\n\r\n\t\tif ( this.alternate && this.alternate.type !== 'IfStatement' && (\r\n\t\t\t\tthis.alternate.type !== 'BlockStatement'\r\n\t\t\t\t|| this.alternate.type === 'BlockStatement' && this.alternate.synthetic ) ) {\r\n\t\t\tcode.insertLeft( this.alternate.start, '{ ' );\r\n\t\t\tcode.insertRight( this.alternate.end, ' }' );\r\n\t\t}\r\n\r\n\t\tsuper.transpile( code, transforms );\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\nimport CompileError from '../../utils/CompileError.js';\r\n\r\nexport default class ImportDeclaration extends Node {\r\n\tinitialise ( transforms ) {\r\n\t\tif ( transforms.moduleImport ) throw new CompileError( this, 'import is not supported' );\r\n\t\tsuper.initialise( transforms );\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\n\r\nexport default class ImportDefaultSpecifier extends Node {\r\n\tinitialise ( transforms ) {\r\n\t\tthis.findScope( true ).addDeclaration( this.local, 'import' );\r\n\t\tsuper.initialise( transforms );\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\n\r\nexport default class ImportSpecifier extends Node {\r\n\tinitialise ( transforms ) {\r\n\t\tthis.findScope( true ).addDeclaration( this.local, 'import' );\r\n\t\tsuper.initialise( transforms );\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\n\r\nconst IS_DATA_ATTRIBUTE = /-/;\r\n\r\nexport default class JSXAttribute extends Node {\r\n\ttranspile ( code, transforms ) {\r\n\t\tif ( this.value ) {\r\n\t\t\tcode.overwrite( this.name.end, this.value.start, ': ' );\r\n\t\t} else {\r\n\t\t\t// tag without value\r\n\t\t\tcode.overwrite( this.name.start, this.name.end, `${this.name.name}: true` );\r\n\t\t}\r\n\r\n\t\tif ( IS_DATA_ATTRIBUTE.test( this.name.name ) ) {\r\n\t\t\tcode.overwrite( this.name.start, this.name.end, `'${this.name.name}'` );\r\n\t\t}\r\n\r\n\t\tsuper.transpile( code, transforms );\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\n\r\nfunction containsNewLine ( node ) {\r\n\treturn node.type === 'Literal' && !/\\S/.test( node.value ) && /\\n/.test( node.value );\r\n}\r\n\r\nexport default class JSXClosingElement extends Node {\r\n\ttranspile ( code ) {\r\n\t\tlet spaceBeforeParen = true;\r\n\r\n\t\tconst lastChild = this.parent.children[ this.parent.children.length - 1 ];\r\n\r\n\t\t// omit space before closing paren if\r\n\t\t//   a) this is on a separate line, or\r\n\t\t//   b) there are no children but there are attributes\r\n\t\tif ( ( lastChild && containsNewLine( lastChild ) ) || ( this.parent.openingElement.attributes.length ) ) {\r\n\t\t\tspaceBeforeParen = false;\r\n\t\t}\r\n\r\n\t\tcode.overwrite( this.start, this.end, spaceBeforeParen ? ' )' : ')' );\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\n\r\nfunction normalise ( str, removeTrailingWhitespace ) {\r\n\tif ( removeTrailingWhitespace && /\\n/.test( str ) ) {\r\n\t\tstr = str.replace( /\\s+$/, '' );\r\n\t}\r\n\r\n\tstr = str\r\n\t\t.replace( /^\\n\\r?\\s+/, '' )       // remove leading newline + space\r\n\t\t.replace( /\\s*\\n\\r?\\s*/gm, ' ' ); // replace newlines with spaces\r\n\r\n\t// TODO prefer single quotes?\r\n\treturn JSON.stringify( str );\r\n}\r\n\r\nexport default class JSXElement extends Node {\r\n\ttranspile ( code, transforms ) {\r\n\t\tsuper.transpile( code, transforms );\r\n\r\n\t\tconst children = this.children.filter( child => {\r\n\t\t\tif ( child.type !== 'Literal' ) return true;\r\n\r\n\t\t\t// remove whitespace-only literals, unless on a single line\r\n\t\t\treturn /\\S/.test( child.value ) || !/\\n/.test( child.value );\r\n\t\t});\r\n\r\n\t\tif ( children.length ) {\r\n\t\t\tlet c = this.openingElement.end;\r\n\r\n\t\t\tlet i;\r\n\t\t\tfor ( i = 0; i < children.length; i += 1 ) {\r\n\t\t\t\tconst child = children[i];\r\n\r\n\t\t\t\tif ( child.type === 'JSXExpressionContainer' && child.expression.type === 'JSXEmptyExpression' ) {\r\n\t\t\t\t\t// empty block is a no op\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst tail = code.original[ c ] === '\\n' && child.type !== 'Literal' ? '' : ' ';\r\n\t\t\t\t\tcode.insertLeft( c, `,${tail}` );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( child.type === 'Literal' ) {\r\n\t\t\t\t\tconst str = normalise( child.value, i === children.length - 1 );\r\n\t\t\t\t\tcode.overwrite( child.start, child.end, str );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tc = child.end;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\n\r\nexport default class JSXExpressionContainer extends Node {\r\n\ttranspile ( code, transforms ) {\r\n\t\tcode.remove( this.start, this.expression.start );\r\n\t\tcode.remove( this.expression.end, this.end );\r\n\r\n\t\tsuper.transpile( code, transforms );\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\nimport CompileError from '../../utils/CompileError.js';\r\n\r\nexport default class JSXOpeningElement extends Node {\r\n\ttranspile ( code, transforms ) {\r\n\t\tcode.overwrite( this.start, this.name.start, `${this.program.jsx}( ` );\r\n\r\n\t\tconst html = this.name.type === 'JSXIdentifier' && this.name.name[0] === this.name.name[0].toLowerCase();\r\n\t\tif ( html ) code.insertRight( this.name.start, `'` );\r\n\r\n\t\tconst len = this.attributes.length;\r\n\t\tlet c = this.name.end;\r\n\r\n\t\tif ( len ) {\r\n\t\t\tlet i;\r\n\r\n\t\t\tlet hasSpread = false;\r\n\t\t\tfor ( i = 0; i < len; i += 1 ) {\r\n\t\t\t\tif ( this.attributes[i].type === 'JSXSpreadAttribute' ) {\r\n\t\t\t\t\thasSpread = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tc = this.attributes[0].end;\r\n\r\n\t\t\tfor ( i = 0; i < len; i += 1 ) {\r\n\t\t\t\tconst attr = this.attributes[i];\r\n\r\n\t\t\t\tif ( i > 0 ) {\r\n\t\t\t\t\tcode.overwrite( c, attr.start, ', ' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasSpread && attr.type !== 'JSXSpreadAttribute' ) {\r\n\t\t\t\t\tconst lastAttr = this.attributes[ i - 1 ];\r\n\t\t\t\t\tconst nextAttr = this.attributes[ i + 1 ];\r\n\r\n\t\t\t\t\tif ( !lastAttr || lastAttr.type === 'JSXSpreadAttribute' ) {\r\n\t\t\t\t\t\tcode.insertRight( attr.start, '{ ' );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( !nextAttr || nextAttr.type === 'JSXSpreadAttribute' ) {\r\n\t\t\t\t\t\tcode.insertLeft( attr.end, ' }' );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tc = attr.end;\r\n\t\t\t}\r\n\r\n\t\t\tlet after;\r\n\t\t\tlet before;\r\n\t\t\tif ( hasSpread ) {\r\n\t\t\t\tif ( len === 1 ) {\r\n\t\t\t\t\tbefore = html ? `',` : ',';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!this.program.options.objectAssign) {\r\n\t\t\t\t\t\tthrow new CompileError( this, 'Mixed JSX attributes ending in spread requires specified objectAssign option with \\'Object.assign\\' or polyfill helper.' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbefore = html ? `', ${this.program.options.objectAssign}({},` : `, ${this.program.options.objectAssign}({},`;\r\n\t\t\t\t\tafter = ')';\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tbefore = html ? `', {` : ', {';\r\n\t\t\t\tafter = ' }';\r\n\t\t\t}\r\n\r\n\t\t\tcode.insertRight( this.name.end, before );\r\n\r\n\t\t\tif ( after ) {\r\n\t\t\t\tcode.insertLeft( this.attributes[ len - 1 ].end, after );\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tcode.insertLeft( this.name.end, html ? `', null` : `, null` );\r\n\t\t\tc = this.name.end;\r\n\t\t}\r\n\r\n\t\tsuper.transpile( code, transforms );\r\n\r\n\t\tif ( this.selfClosing ) {\r\n\t\t\tcode.overwrite( c, this.end, this.attributes.length ? `)` : ` )` );\r\n\t\t} else {\r\n\t\t\tcode.remove( c, this.end );\r\n\t\t}\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\n\r\nexport default class JSXSpreadAttribute extends Node {\r\n\ttranspile ( code, transforms ) {\r\n\t\tcode.remove( this.start, this.argument.start );\r\n\t\tcode.remove( this.argument.end, this.end );\r\n\r\n\t\tsuper.transpile( code, transforms );\r\n\t}\r\n}\r\n","/*! https://mths.be/regenerate v1.3.2 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js/io.js or Browserified code,\n\t// and use it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar ERRORS = {\n\t\t'rangeOrder': 'A range\\u2019s `stop` value must be greater than or equal ' +\n\t\t\t'to the `start` value.',\n\t\t'codePointRange': 'Invalid code point value. Code points range from ' +\n\t\t\t'U+000000 to U+10FFFF.'\n\t};\n\n\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-pairs\n\tvar HIGH_SURROGATE_MIN = 0xD800;\n\tvar HIGH_SURROGATE_MAX = 0xDBFF;\n\tvar LOW_SURROGATE_MIN = 0xDC00;\n\tvar LOW_SURROGATE_MAX = 0xDFFF;\n\n\t// In Regenerate output, `\\0` is never preceded by `\\` because we sort by\n\t// code point value, so let’s keep this regular expression simple.\n\tvar regexNull = /\\\\x00([^0123456789]|$)/g;\n\n\tvar object = {};\n\tvar hasOwnProperty = object.hasOwnProperty;\n\tvar extend = function(destination, source) {\n\t\tvar key;\n\t\tfor (key in source) {\n\t\t\tif (hasOwnProperty.call(source, key)) {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t}\n\t\treturn destination;\n\t};\n\n\tvar forEach = function(array, callback) {\n\t\tvar index = -1;\n\t\tvar length = array.length;\n\t\twhile (++index < length) {\n\t\t\tcallback(array[index], index);\n\t\t}\n\t};\n\n\tvar toString = object.toString;\n\tvar isArray = function(value) {\n\t\treturn toString.call(value) == '[object Array]';\n\t};\n\tvar isNumber = function(value) {\n\t\treturn typeof value == 'number' ||\n\t\t\ttoString.call(value) == '[object Number]';\n\t};\n\n\t// This assumes that `number` is a positive integer that `toString()`s nicely\n\t// (which is the case for all code point values).\n\tvar zeroes = '0000';\n\tvar pad = function(number, totalCharacters) {\n\t\tvar string = String(number);\n\t\treturn string.length < totalCharacters\n\t\t\t? (zeroes + string).slice(-totalCharacters)\n\t\t\t: string;\n\t};\n\n\tvar hex = function(number) {\n\t\treturn Number(number).toString(16).toUpperCase();\n\t};\n\n\tvar slice = [].slice;\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar dataFromCodePoints = function(codePoints) {\n\t\tvar index = -1;\n\t\tvar length = codePoints.length;\n\t\tvar max = length - 1;\n\t\tvar result = [];\n\t\tvar isStart = true;\n\t\tvar tmp;\n\t\tvar previous = 0;\n\t\twhile (++index < length) {\n\t\t\ttmp = codePoints[index];\n\t\t\tif (isStart) {\n\t\t\t\tresult.push(tmp);\n\t\t\t\tprevious = tmp;\n\t\t\t\tisStart = false;\n\t\t\t} else {\n\t\t\t\tif (tmp == previous + 1) {\n\t\t\t\t\tif (index != max) {\n\t\t\t\t\t\tprevious = tmp;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisStart = true;\n\t\t\t\t\t\tresult.push(tmp + 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// End the previous range and start a new one.\n\t\t\t\t\tresult.push(previous + 1, tmp);\n\t\t\t\t\tprevious = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!isStart) {\n\t\t\tresult.push(tmp + 1);\n\t\t}\n\t\treturn result;\n\t};\n\n\tvar dataRemove = function(data, codePoint) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\t\t\tif (codePoint >= start && codePoint < end) {\n\t\t\t\t// Modify this pair.\n\t\t\t\tif (codePoint == start) {\n\t\t\t\t\tif (end == start + 1) {\n\t\t\t\t\t\t// Just remove `start` and `end`.\n\t\t\t\t\t\tdata.splice(index, 2);\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Just replace `start` with a new value.\n\t\t\t\t\t\tdata[index] = codePoint + 1;\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t}\n\t\t\t\t} else if (codePoint == end - 1) {\n\t\t\t\t\t// Just replace `end` with a new value.\n\t\t\t\t\tdata[index + 1] = codePoint;\n\t\t\t\t\treturn data;\n\t\t\t\t} else {\n\t\t\t\t\t// Replace `[start, end]` with `[startA, endA, startB, endB]`.\n\t\t\t\t\tdata.splice(index, 2, start, codePoint, codePoint + 1, end);\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn data;\n\t};\n\n\tvar dataRemoveRange = function(data, rangeStart, rangeEnd) {\n\t\tif (rangeEnd < rangeStart) {\n\t\t\tthrow Error(ERRORS.rangeOrder);\n\t\t}\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\twhile (index < data.length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\n\t\t\t// Exit as soon as no more matching pairs can be found.\n\t\t\tif (start > rangeEnd) {\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\t// Check if this range pair is equal to, or forms a subset of, the range\n\t\t\t// to be removed.\n\t\t\t// E.g. we have `[0, 11, 40, 51]` and want to remove 0-10 → `[40, 51]`.\n\t\t\t// E.g. we have `[40, 51]` and want to remove 0-100 → `[]`.\n\t\t\tif (rangeStart <= start && rangeEnd >= end) {\n\t\t\t\t// Remove this pair.\n\t\t\t\tdata.splice(index, 2);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check if both `rangeStart` and `rangeEnd` are within the bounds of\n\t\t\t// this pair.\n\t\t\t// E.g. we have `[0, 11]` and want to remove 4-6 → `[0, 4, 7, 11]`.\n\t\t\tif (rangeStart >= start && rangeEnd < end) {\n\t\t\t\tif (rangeStart == start) {\n\t\t\t\t\t// Replace `[start, end]` with `[startB, endB]`.\n\t\t\t\t\tdata[index] = rangeEnd + 1;\n\t\t\t\t\tdata[index + 1] = end + 1;\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t\t// Replace `[start, end]` with `[startA, endA, startB, endB]`.\n\t\t\t\tdata.splice(index, 2, start, rangeStart, rangeEnd + 1, end + 1);\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\t// Check if only `rangeStart` is within the bounds of this pair.\n\t\t\t// E.g. we have `[0, 11]` and want to remove 4-20 → `[0, 4]`.\n\t\t\tif (rangeStart >= start && rangeStart <= end) {\n\t\t\t\t// Replace `end` with `rangeStart`.\n\t\t\t\tdata[index + 1] = rangeStart;\n\t\t\t\t// Note: we cannot `return` just yet, in case any following pairs still\n\t\t\t\t// contain matching code points.\n\t\t\t\t// E.g. we have `[0, 11, 14, 31]` and want to remove 4-20\n\t\t\t\t// → `[0, 4, 21, 31]`.\n\t\t\t}\n\n\t\t\t// Check if only `rangeEnd` is within the bounds of this pair.\n\t\t\t// E.g. we have `[14, 31]` and want to remove 4-20 → `[21, 31]`.\n\t\t\telse if (rangeEnd >= start && rangeEnd <= end) {\n\t\t\t\t// Just replace `start`.\n\t\t\t\tdata[index] = rangeEnd + 1;\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tindex += 2;\n\t\t}\n\t\treturn data;\n\t};\n\n\t var dataAdd = function(data, codePoint) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar lastIndex = null;\n\t\tvar length = data.length;\n\t\tif (codePoint < 0x0 || codePoint > 0x10FFFF) {\n\t\t\tthrow RangeError(ERRORS.codePointRange);\n\t\t}\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\n\t\t\t// Check if the code point is already in the set.\n\t\t\tif (codePoint >= start && codePoint < end) {\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tif (codePoint == start - 1) {\n\t\t\t\t// Just replace `start` with a new value.\n\t\t\t\tdata[index] = codePoint;\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\t// At this point, if `start` is `greater` than `codePoint`, insert a new\n\t\t\t// `[start, end]` pair before the current pair, or after the current pair\n\t\t\t// if there is a known `lastIndex`.\n\t\t\tif (start > codePoint) {\n\t\t\t\tdata.splice(\n\t\t\t\t\tlastIndex != null ? lastIndex + 2 : 0,\n\t\t\t\t\t0,\n\t\t\t\t\tcodePoint,\n\t\t\t\t\tcodePoint + 1\n\t\t\t\t);\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tif (codePoint == end) {\n\t\t\t\t// Check if adding this code point causes two separate ranges to become\n\t\t\t\t// a single range, e.g. `dataAdd([0, 4, 5, 10], 4)` → `[0, 10]`.\n\t\t\t\tif (codePoint + 1 == data[index + 2]) {\n\t\t\t\t\tdata.splice(index, 4, start, data[index + 3]);\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t\t// Else, just replace `end` with a new value.\n\t\t\t\tdata[index + 1] = codePoint + 1;\n\t\t\t\treturn data;\n\t\t\t}\n\t\t\tlastIndex = index;\n\t\t\tindex += 2;\n\t\t}\n\t\t// The loop has finished; add the new pair to the end of the data set.\n\t\tdata.push(codePoint, codePoint + 1);\n\t\treturn data;\n\t};\n\n\tvar dataAddData = function(dataA, dataB) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar data = dataA.slice();\n\t\tvar length = dataB.length;\n\t\twhile (index < length) {\n\t\t\tstart = dataB[index];\n\t\t\tend = dataB[index + 1] - 1;\n\t\t\tif (start == end) {\n\t\t\t\tdata = dataAdd(data, start);\n\t\t\t} else {\n\t\t\t\tdata = dataAddRange(data, start, end);\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn data;\n\t};\n\n\tvar dataRemoveData = function(dataA, dataB) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar data = dataA.slice();\n\t\tvar length = dataB.length;\n\t\twhile (index < length) {\n\t\t\tstart = dataB[index];\n\t\t\tend = dataB[index + 1] - 1;\n\t\t\tif (start == end) {\n\t\t\t\tdata = dataRemove(data, start);\n\t\t\t} else {\n\t\t\t\tdata = dataRemoveRange(data, start, end);\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn data;\n\t};\n\n\tvar dataAddRange = function(data, rangeStart, rangeEnd) {\n\t\tif (rangeEnd < rangeStart) {\n\t\t\tthrow Error(ERRORS.rangeOrder);\n\t\t}\n\t\tif (\n\t\t\trangeStart < 0x0 || rangeStart > 0x10FFFF ||\n\t\t\trangeEnd < 0x0 || rangeEnd > 0x10FFFF\n\t\t) {\n\t\t\tthrow RangeError(ERRORS.codePointRange);\n\t\t}\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar added = false;\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\n\t\t\tif (added) {\n\t\t\t\t// The range has already been added to the set; at this point, we just\n\t\t\t\t// need to get rid of the following ranges in case they overlap.\n\n\t\t\t\t// Check if this range can be combined with the previous range.\n\t\t\t\tif (start == rangeEnd + 1) {\n\t\t\t\t\tdata.splice(index - 1, 2);\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Exit as soon as no more possibly overlapping pairs can be found.\n\t\t\t\tif (start > rangeEnd) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// E.g. `[0, 11, 12, 16]` and we’ve added 5-15, so we now have\n\t\t\t\t// `[0, 16, 12, 16]`. Remove the `12,16` part, as it lies within the\n\t\t\t\t// `0,16` range that was previously added.\n\t\t\t\tif (start >= rangeStart && start <= rangeEnd) {\n\t\t\t\t\t// `start` lies within the range that was previously added.\n\n\t\t\t\t\tif (end > rangeStart && end - 1 <= rangeEnd) {\n\t\t\t\t\t\t// `end` lies within the range that was previously added as well,\n\t\t\t\t\t\t// so remove this pair.\n\t\t\t\t\t\tdata.splice(index, 2);\n\t\t\t\t\t\tindex -= 2;\n\t\t\t\t\t\t// Note: we cannot `return` just yet, as there may still be other\n\t\t\t\t\t\t// overlapping pairs.\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// `start` lies within the range that was previously added, but\n\t\t\t\t\t\t// `end` doesn’t. E.g. `[0, 11, 12, 31]` and we’ve added 5-15, so\n\t\t\t\t\t\t// now we have `[0, 16, 12, 31]`. This must be written as `[0, 31]`.\n\t\t\t\t\t\t// Remove the previously added `end` and the current `start`.\n\t\t\t\t\t\tdata.splice(index - 1, 2);\n\t\t\t\t\t\tindex -= 2;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Note: we cannot return yet.\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\telse if (start == rangeEnd + 1) {\n\t\t\t\tdata[index] = rangeStart;\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\t// Check if a new pair must be inserted *before* the current one.\n\t\t\telse if (start > rangeEnd) {\n\t\t\t\tdata.splice(index, 0, rangeStart, rangeEnd + 1);\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\telse if (rangeStart >= start && rangeStart < end && rangeEnd + 1 <= end) {\n\t\t\t\t// The new range lies entirely within an existing range pair. No action\n\t\t\t\t// needed.\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\telse if (\n\t\t\t\t// E.g. `[0, 11]` and you add 5-15 → `[0, 16]`.\n\t\t\t\t(rangeStart >= start && rangeStart < end) ||\n\t\t\t\t// E.g. `[0, 3]` and you add 3-6 → `[0, 7]`.\n\t\t\t\tend == rangeStart\n\t\t\t) {\n\t\t\t\t// Replace `end` with the new value.\n\t\t\t\tdata[index + 1] = rangeEnd + 1;\n\t\t\t\t// Make sure the next range pair doesn’t overlap, e.g. `[0, 11, 12, 14]`\n\t\t\t\t// and you add 5-15 → `[0, 16]`, i.e. remove the `12,14` part.\n\t\t\t\tadded = true;\n\t\t\t\t// Note: we cannot `return` just yet.\n\t\t\t}\n\n\t\t\telse if (rangeStart <= start && rangeEnd + 1 >= end) {\n\t\t\t\t// The new range is a superset of the old range.\n\t\t\t\tdata[index] = rangeStart;\n\t\t\t\tdata[index + 1] = rangeEnd + 1;\n\t\t\t\tadded = true;\n\t\t\t}\n\n\t\t\tindex += 2;\n\t\t}\n\t\t// The loop has finished without doing anything; add the new pair to the end\n\t\t// of the data set.\n\t\tif (!added) {\n\t\t\tdata.push(rangeStart, rangeEnd + 1);\n\t\t}\n\t\treturn data;\n\t};\n\n\tvar dataContains = function(data, codePoint) {\n\t\tvar index = 0;\n\t\tvar length = data.length;\n\t\t// Exit early if `codePoint` is not within `data`’s overall range.\n\t\tvar start = data[index];\n\t\tvar end = data[length - 1];\n\t\tif (length >= 2) {\n\t\t\tif (codePoint < start || codePoint > end) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\t\t\tif (codePoint >= start && codePoint < end) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn false;\n\t};\n\n\tvar dataIntersection = function(data, codePoints) {\n\t\tvar index = 0;\n\t\tvar length = codePoints.length;\n\t\tvar codePoint;\n\t\tvar result = [];\n\t\twhile (index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tif (dataContains(data, codePoint)) {\n\t\t\t\tresult.push(codePoint);\n\t\t\t}\n\t\t\t++index;\n\t\t}\n\t\treturn dataFromCodePoints(result);\n\t};\n\n\tvar dataIsEmpty = function(data) {\n\t\treturn !data.length;\n\t};\n\n\tvar dataIsSingleton = function(data) {\n\t\t// Check if the set only represents a single code point.\n\t\treturn data.length == 2 && data[0] + 1 == data[1];\n\t};\n\n\tvar dataToArray = function(data) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar result = [];\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1];\n\t\t\twhile (start < end) {\n\t\t\t\tresult.push(start);\n\t\t\t\t++start;\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn result;\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\tvar floor = Math.floor;\n\tvar highSurrogate = function(codePoint) {\n\t\treturn parseInt(\n\t\t\tfloor((codePoint - 0x10000) / 0x400) + HIGH_SURROGATE_MIN,\n\t\t\t10\n\t\t);\n\t};\n\n\tvar lowSurrogate = function(codePoint) {\n\t\treturn parseInt(\n\t\t\t(codePoint - 0x10000) % 0x400 + LOW_SURROGATE_MIN,\n\t\t\t10\n\t\t);\n\t};\n\n\tvar stringFromCharCode = String.fromCharCode;\n\tvar codePointToString = function(codePoint) {\n\t\tvar string;\n\t\t// https://mathiasbynens.be/notes/javascript-escapes#single\n\t\t// Note: the `\\b` escape sequence for U+0008 BACKSPACE in strings has a\n\t\t// different meaning in regular expressions (word boundary), so it cannot\n\t\t// be used here.\n\t\tif (codePoint == 0x09) {\n\t\t\tstring = '\\\\t';\n\t\t}\n\t\t// Note: IE < 9 treats `'\\v'` as `'v'`, so avoid using it.\n\t\t// else if (codePoint == 0x0B) {\n\t\t// \tstring = '\\\\v';\n\t\t// }\n\t\telse if (codePoint == 0x0A) {\n\t\t\tstring = '\\\\n';\n\t\t}\n\t\telse if (codePoint == 0x0C) {\n\t\t\tstring = '\\\\f';\n\t\t}\n\t\telse if (codePoint == 0x0D) {\n\t\t\tstring = '\\\\r';\n\t\t}\n\t\telse if (codePoint == 0x5C) {\n\t\t\tstring = '\\\\\\\\';\n\t\t}\n\t\telse if (\n\t\t\tcodePoint == 0x24 ||\n\t\t\t(codePoint >= 0x28 && codePoint <= 0x2B) ||\n\t\t\tcodePoint == 0x2D || codePoint == 0x2E || codePoint == 0x3F ||\n\t\t\t(codePoint >= 0x5B && codePoint <= 0x5E) ||\n\t\t\t(codePoint >= 0x7B && codePoint <= 0x7D)\n\t\t) {\n\t\t\t// The code point maps to an unsafe printable ASCII character;\n\t\t\t// backslash-escape it. Here’s the list of those symbols:\n\t\t\t//\n\t\t\t//     $()*+-.?[\\]^{|}\n\t\t\t//\n\t\t\t// See #7 for more info.\n\t\t\tstring = '\\\\' + stringFromCharCode(codePoint);\n\t\t}\n\t\telse if (codePoint >= 0x20 && codePoint <= 0x7E) {\n\t\t\t// The code point maps to one of these printable ASCII symbols\n\t\t\t// (including the space character):\n\t\t\t//\n\t\t\t//      !\"#%&',/0123456789:;<=>@ABCDEFGHIJKLMNO\n\t\t\t//     PQRSTUVWXYZ_`abcdefghijklmnopqrstuvwxyz~\n\t\t\t//\n\t\t\t// These can safely be used directly.\n\t\t\tstring = stringFromCharCode(codePoint);\n\t\t}\n\t\telse if (codePoint <= 0xFF) {\n\t\t\t// https://mathiasbynens.be/notes/javascript-escapes#hexadecimal\n\t\t\tstring = '\\\\x' + pad(hex(codePoint), 2);\n\t\t}\n\t\telse { // `codePoint <= 0xFFFF` holds true.\n\t\t\t// https://mathiasbynens.be/notes/javascript-escapes#unicode\n\t\t\tstring = '\\\\u' + pad(hex(codePoint), 4);\n\t\t}\n\n\t\t// There’s no need to account for astral symbols / surrogate pairs here,\n\t\t// since `codePointToString` is private and only used for BMP code points.\n\t\t// But if that’s what you need, just add an `else` block with this code:\n\t\t//\n\t\t//     string = '\\\\u' + pad(hex(highSurrogate(codePoint)), 4)\n\t\t//     \t+ '\\\\u' + pad(hex(lowSurrogate(codePoint)), 4);\n\n\t\treturn string;\n\t};\n\n\tvar codePointToStringUnicode = function(codePoint) {\n\t\tif (codePoint <= 0xFFFF) {\n\t\t\treturn codePointToString(codePoint);\n\t\t}\n\t\treturn '\\\\u{' + codePoint.toString(16).toUpperCase() + '}';\n\t};\n\n\tvar symbolToCodePoint = function(symbol) {\n\t\tvar length = symbol.length;\n\t\tvar first = symbol.charCodeAt(0);\n\t\tvar second;\n\t\tif (\n\t\t\tfirst >= HIGH_SURROGATE_MIN && first <= HIGH_SURROGATE_MAX &&\n\t\t\tlength > 1 // There is a next code unit.\n\t\t) {\n\t\t\t// `first` is a high surrogate, and there is a next character. Assume\n\t\t\t// it’s a low surrogate (else it’s invalid usage of Regenerate anyway).\n\t\t\tsecond = symbol.charCodeAt(1);\n\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\treturn (first - HIGH_SURROGATE_MIN) * 0x400 +\n\t\t\t\tsecond - LOW_SURROGATE_MIN + 0x10000;\n\t\t}\n\t\treturn first;\n\t};\n\n\tvar createBMPCharacterClasses = function(data) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar result = '';\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar length = data.length;\n\t\tif (dataIsSingleton(data)) {\n\t\t\treturn codePointToString(data[0]);\n\t\t}\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\t\t\tif (start == end) {\n\t\t\t\tresult += codePointToString(start);\n\t\t\t} else if (start + 1 == end) {\n\t\t\t\tresult += codePointToString(start) + codePointToString(end);\n\t\t\t} else {\n\t\t\t\tresult += codePointToString(start) + '-' + codePointToString(end);\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn '[' + result + ']';\n\t};\n\n\tvar createUnicodeCharacterClasses = function(data) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar result = '';\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar length = data.length;\n\t\tif (dataIsSingleton(data)) {\n\t\t\treturn codePointToStringUnicode(data[0]);\n\t\t}\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\t\t\tif (start == end) {\n\t\t\t\tresult += codePointToStringUnicode(start);\n\t\t\t} else if (start + 1 == end) {\n\t\t\t\tresult += codePointToStringUnicode(start) + codePointToStringUnicode(end);\n\t\t\t} else {\n\t\t\t\tresult += codePointToStringUnicode(start) + '-' + codePointToStringUnicode(end);\n\t\t\t}\n\t\t\tindex += 2;\n\t\t}\n\t\treturn '[' + result + ']';\n\t};\n\n\tvar splitAtBMP = function(data) {\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar loneHighSurrogates = [];\n\t\tvar loneLowSurrogates = [];\n\t\tvar bmp = [];\n\t\tvar astral = [];\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1; // Note: the `- 1` makes `end` inclusive.\n\n\t\t\tif (start < HIGH_SURROGATE_MIN) {\n\n\t\t\t\t// The range starts and ends before the high surrogate range.\n\t\t\t\t// E.g. (0, 0x10).\n\t\t\t\tif (end < HIGH_SURROGATE_MIN) {\n\t\t\t\t\tbmp.push(start, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts before the high surrogate range and ends within it.\n\t\t\t\t// E.g. (0, 0xD855).\n\t\t\t\tif (end >= HIGH_SURROGATE_MIN && end <= HIGH_SURROGATE_MAX) {\n\t\t\t\t\tbmp.push(start, HIGH_SURROGATE_MIN);\n\t\t\t\t\tloneHighSurrogates.push(HIGH_SURROGATE_MIN, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts before the high surrogate range and ends in the low\n\t\t\t\t// surrogate range. E.g. (0, 0xDCFF).\n\t\t\t\tif (end >= LOW_SURROGATE_MIN && end <= LOW_SURROGATE_MAX) {\n\t\t\t\t\tbmp.push(start, HIGH_SURROGATE_MIN);\n\t\t\t\t\tloneHighSurrogates.push(HIGH_SURROGATE_MIN, HIGH_SURROGATE_MAX + 1);\n\t\t\t\t\tloneLowSurrogates.push(LOW_SURROGATE_MIN, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts before the high surrogate range and ends after the\n\t\t\t\t// low surrogate range. E.g. (0, 0x10FFFF).\n\t\t\t\tif (end > LOW_SURROGATE_MAX) {\n\t\t\t\t\tbmp.push(start, HIGH_SURROGATE_MIN);\n\t\t\t\t\tloneHighSurrogates.push(HIGH_SURROGATE_MIN, HIGH_SURROGATE_MAX + 1);\n\t\t\t\t\tloneLowSurrogates.push(LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1);\n\t\t\t\t\tif (end <= 0xFFFF) {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, end + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, 0xFFFF + 1);\n\t\t\t\t\t\tastral.push(0xFFFF + 1, end + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else if (start >= HIGH_SURROGATE_MIN && start <= HIGH_SURROGATE_MAX) {\n\n\t\t\t\t// The range starts and ends in the high surrogate range.\n\t\t\t\t// E.g. (0xD855, 0xD866).\n\t\t\t\tif (end >= HIGH_SURROGATE_MIN && end <= HIGH_SURROGATE_MAX) {\n\t\t\t\t\tloneHighSurrogates.push(start, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts in the high surrogate range and ends in the low\n\t\t\t\t// surrogate range. E.g. (0xD855, 0xDCFF).\n\t\t\t\tif (end >= LOW_SURROGATE_MIN && end <= LOW_SURROGATE_MAX) {\n\t\t\t\t\tloneHighSurrogates.push(start, HIGH_SURROGATE_MAX + 1);\n\t\t\t\t\tloneLowSurrogates.push(LOW_SURROGATE_MIN, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts in the high surrogate range and ends after the low\n\t\t\t\t// surrogate range. E.g. (0xD855, 0x10FFFF).\n\t\t\t\tif (end > LOW_SURROGATE_MAX) {\n\t\t\t\t\tloneHighSurrogates.push(start, HIGH_SURROGATE_MAX + 1);\n\t\t\t\t\tloneLowSurrogates.push(LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1);\n\t\t\t\t\tif (end <= 0xFFFF) {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, end + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, 0xFFFF + 1);\n\t\t\t\t\t\tastral.push(0xFFFF + 1, end + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else if (start >= LOW_SURROGATE_MIN && start <= LOW_SURROGATE_MAX) {\n\n\t\t\t\t// The range starts and ends in the low surrogate range.\n\t\t\t\t// E.g. (0xDCFF, 0xDDFF).\n\t\t\t\tif (end >= LOW_SURROGATE_MIN && end <= LOW_SURROGATE_MAX) {\n\t\t\t\t\tloneLowSurrogates.push(start, end + 1);\n\t\t\t\t}\n\n\t\t\t\t// The range starts in the low surrogate range and ends after the low\n\t\t\t\t// surrogate range. E.g. (0xDCFF, 0x10FFFF).\n\t\t\t\tif (end > LOW_SURROGATE_MAX) {\n\t\t\t\t\tloneLowSurrogates.push(start, LOW_SURROGATE_MAX + 1);\n\t\t\t\t\tif (end <= 0xFFFF) {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, end + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbmp.push(LOW_SURROGATE_MAX + 1, 0xFFFF + 1);\n\t\t\t\t\t\tastral.push(0xFFFF + 1, end + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else if (start > LOW_SURROGATE_MAX && start <= 0xFFFF) {\n\n\t\t\t\t// The range starts and ends after the low surrogate range.\n\t\t\t\t// E.g. (0xFFAA, 0x10FFFF).\n\t\t\t\tif (end <= 0xFFFF) {\n\t\t\t\t\tbmp.push(start, end + 1);\n\t\t\t\t} else {\n\t\t\t\t\tbmp.push(start, 0xFFFF + 1);\n\t\t\t\t\tastral.push(0xFFFF + 1, end + 1);\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// The range starts and ends in the astral range.\n\t\t\t\tastral.push(start, end + 1);\n\n\t\t\t}\n\n\t\t\tindex += 2;\n\t\t}\n\t\treturn {\n\t\t\t'loneHighSurrogates': loneHighSurrogates,\n\t\t\t'loneLowSurrogates': loneLowSurrogates,\n\t\t\t'bmp': bmp,\n\t\t\t'astral': astral\n\t\t};\n\t};\n\n\tvar optimizeSurrogateMappings = function(surrogateMappings) {\n\t\tvar result = [];\n\t\tvar tmpLow = [];\n\t\tvar addLow = false;\n\t\tvar mapping;\n\t\tvar nextMapping;\n\t\tvar highSurrogates;\n\t\tvar lowSurrogates;\n\t\tvar nextHighSurrogates;\n\t\tvar nextLowSurrogates;\n\t\tvar index = -1;\n\t\tvar length = surrogateMappings.length;\n\t\twhile (++index < length) {\n\t\t\tmapping = surrogateMappings[index];\n\t\t\tnextMapping = surrogateMappings[index + 1];\n\t\t\tif (!nextMapping) {\n\t\t\t\tresult.push(mapping);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\thighSurrogates = mapping[0];\n\t\t\tlowSurrogates = mapping[1];\n\t\t\tnextHighSurrogates = nextMapping[0];\n\t\t\tnextLowSurrogates = nextMapping[1];\n\n\t\t\t// Check for identical high surrogate ranges.\n\t\t\ttmpLow = lowSurrogates;\n\t\t\twhile (\n\t\t\t\tnextHighSurrogates &&\n\t\t\t\thighSurrogates[0] == nextHighSurrogates[0] &&\n\t\t\t\thighSurrogates[1] == nextHighSurrogates[1]\n\t\t\t) {\n\t\t\t\t// Merge with the next item.\n\t\t\t\tif (dataIsSingleton(nextLowSurrogates)) {\n\t\t\t\t\ttmpLow = dataAdd(tmpLow, nextLowSurrogates[0]);\n\t\t\t\t} else {\n\t\t\t\t\ttmpLow = dataAddRange(\n\t\t\t\t\t\ttmpLow,\n\t\t\t\t\t\tnextLowSurrogates[0],\n\t\t\t\t\t\tnextLowSurrogates[1] - 1\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t++index;\n\t\t\t\tmapping = surrogateMappings[index];\n\t\t\t\thighSurrogates = mapping[0];\n\t\t\t\tlowSurrogates = mapping[1];\n\t\t\t\tnextMapping = surrogateMappings[index + 1];\n\t\t\t\tnextHighSurrogates = nextMapping && nextMapping[0];\n\t\t\t\tnextLowSurrogates = nextMapping && nextMapping[1];\n\t\t\t\taddLow = true;\n\t\t\t}\n\t\t\tresult.push([\n\t\t\t\thighSurrogates,\n\t\t\t\taddLow ? tmpLow : lowSurrogates\n\t\t\t]);\n\t\t\taddLow = false;\n\t\t}\n\t\treturn optimizeByLowSurrogates(result);\n\t};\n\n\tvar optimizeByLowSurrogates = function(surrogateMappings) {\n\t\tif (surrogateMappings.length == 1) {\n\t\t\treturn surrogateMappings;\n\t\t}\n\t\tvar index = -1;\n\t\tvar innerIndex = -1;\n\t\twhile (++index < surrogateMappings.length) {\n\t\t\tvar mapping = surrogateMappings[index];\n\t\t\tvar lowSurrogates = mapping[1];\n\t\t\tvar lowSurrogateStart = lowSurrogates[0];\n\t\t\tvar lowSurrogateEnd = lowSurrogates[1];\n\t\t\tinnerIndex = index; // Note: the loop starts at the next index.\n\t\t\twhile (++innerIndex < surrogateMappings.length) {\n\t\t\t\tvar otherMapping = surrogateMappings[innerIndex];\n\t\t\t\tvar otherLowSurrogates = otherMapping[1];\n\t\t\t\tvar otherLowSurrogateStart = otherLowSurrogates[0];\n\t\t\t\tvar otherLowSurrogateEnd = otherLowSurrogates[1];\n\t\t\t\tif (\n\t\t\t\t\tlowSurrogateStart == otherLowSurrogateStart &&\n\t\t\t\t\tlowSurrogateEnd == otherLowSurrogateEnd\n\t\t\t\t) {\n\t\t\t\t\t// Add the code points in the other item to this one.\n\t\t\t\t\tif (dataIsSingleton(otherMapping[0])) {\n\t\t\t\t\t\tmapping[0] = dataAdd(mapping[0], otherMapping[0][0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmapping[0] = dataAddRange(\n\t\t\t\t\t\t\tmapping[0],\n\t\t\t\t\t\t\totherMapping[0][0],\n\t\t\t\t\t\t\totherMapping[0][1] - 1\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// Remove the other, now redundant, item.\n\t\t\t\t\tsurrogateMappings.splice(innerIndex, 1);\n\t\t\t\t\t--innerIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn surrogateMappings;\n\t};\n\n\tvar surrogateSet = function(data) {\n\t\t// Exit early if `data` is an empty set.\n\t\tif (!data.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Iterate over the data per `(start, end)` pair.\n\t\tvar index = 0;\n\t\tvar start;\n\t\tvar end;\n\t\tvar startHigh;\n\t\tvar startLow;\n\t\tvar endHigh;\n\t\tvar endLow;\n\t\tvar surrogateMappings = [];\n\t\tvar length = data.length;\n\t\twhile (index < length) {\n\t\t\tstart = data[index];\n\t\t\tend = data[index + 1] - 1;\n\n\t\t\tstartHigh = highSurrogate(start);\n\t\t\tstartLow = lowSurrogate(start);\n\t\t\tendHigh = highSurrogate(end);\n\t\t\tendLow = lowSurrogate(end);\n\n\t\t\tvar startsWithLowestLowSurrogate = startLow == LOW_SURROGATE_MIN;\n\t\t\tvar endsWithHighestLowSurrogate = endLow == LOW_SURROGATE_MAX;\n\t\t\tvar complete = false;\n\n\t\t\t// Append the previous high-surrogate-to-low-surrogate mappings.\n\t\t\t// Step 1: `(startHigh, startLow)` to `(startHigh, LOW_SURROGATE_MAX)`.\n\t\t\tif (\n\t\t\t\tstartHigh == endHigh ||\n\t\t\t\tstartsWithLowestLowSurrogate && endsWithHighestLowSurrogate\n\t\t\t) {\n\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t[startHigh, endHigh + 1],\n\t\t\t\t\t[startLow, endLow + 1]\n\t\t\t\t]);\n\t\t\t\tcomplete = true;\n\t\t\t} else {\n\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t[startHigh, startHigh + 1],\n\t\t\t\t\t[startLow, LOW_SURROGATE_MAX + 1]\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\t// Step 2: `(startHigh + 1, LOW_SURROGATE_MIN)` to\n\t\t\t// `(endHigh - 1, LOW_SURROGATE_MAX)`.\n\t\t\tif (!complete && startHigh + 1 < endHigh) {\n\t\t\t\tif (endsWithHighestLowSurrogate) {\n\t\t\t\t\t// Combine step 2 and step 3.\n\t\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t\t[startHigh + 1, endHigh + 1],\n\t\t\t\t\t\t[LOW_SURROGATE_MIN, endLow + 1]\n\t\t\t\t\t]);\n\t\t\t\t\tcomplete = true;\n\t\t\t\t} else {\n\t\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t\t[startHigh + 1, endHigh],\n\t\t\t\t\t\t[LOW_SURROGATE_MIN, LOW_SURROGATE_MAX + 1]\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Step 3. `(endHigh, LOW_SURROGATE_MIN)` to `(endHigh, endLow)`.\n\t\t\tif (!complete) {\n\t\t\t\tsurrogateMappings.push([\n\t\t\t\t\t[endHigh, endHigh + 1],\n\t\t\t\t\t[LOW_SURROGATE_MIN, endLow + 1]\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\tindex += 2;\n\t\t}\n\n\t\t// The format of `surrogateMappings` is as follows:\n\t\t//\n\t\t//     [ surrogateMapping1, surrogateMapping2 ]\n\t\t//\n\t\t// i.e.:\n\t\t//\n\t\t//     [\n\t\t//       [ highSurrogates1, lowSurrogates1 ],\n\t\t//       [ highSurrogates2, lowSurrogates2 ]\n\t\t//     ]\n\t\treturn optimizeSurrogateMappings(surrogateMappings);\n\t};\n\n\tvar createSurrogateCharacterClasses = function(surrogateMappings) {\n\t\tvar result = [];\n\t\tforEach(surrogateMappings, function(surrogateMapping) {\n\t\t\tvar highSurrogates = surrogateMapping[0];\n\t\t\tvar lowSurrogates = surrogateMapping[1];\n\t\t\tresult.push(\n\t\t\t\tcreateBMPCharacterClasses(highSurrogates) +\n\t\t\t\tcreateBMPCharacterClasses(lowSurrogates)\n\t\t\t);\n\t\t});\n\t\treturn result.join('|');\n\t};\n\n\tvar createCharacterClassesFromData = function(data, bmpOnly, hasUnicodeFlag) {\n\t\tif (hasUnicodeFlag) {\n\t\t\treturn createUnicodeCharacterClasses(data);\n\t\t}\n\t\tvar result = [];\n\n\t\tvar parts = splitAtBMP(data);\n\t\tvar loneHighSurrogates = parts.loneHighSurrogates;\n\t\tvar loneLowSurrogates = parts.loneLowSurrogates;\n\t\tvar bmp = parts.bmp;\n\t\tvar astral = parts.astral;\n\t\tvar hasLoneHighSurrogates = !dataIsEmpty(loneHighSurrogates);\n\t\tvar hasLoneLowSurrogates = !dataIsEmpty(loneLowSurrogates);\n\n\t\tvar surrogateMappings = surrogateSet(astral);\n\n\t\tif (bmpOnly) {\n\t\t\tbmp = dataAddData(bmp, loneHighSurrogates);\n\t\t\thasLoneHighSurrogates = false;\n\t\t\tbmp = dataAddData(bmp, loneLowSurrogates);\n\t\t\thasLoneLowSurrogates = false;\n\t\t}\n\n\t\tif (!dataIsEmpty(bmp)) {\n\t\t\t// The data set contains BMP code points that are not high surrogates\n\t\t\t// needed for astral code points in the set.\n\t\t\tresult.push(createBMPCharacterClasses(bmp));\n\t\t}\n\t\tif (surrogateMappings.length) {\n\t\t\t// The data set contains astral code points; append character classes\n\t\t\t// based on their surrogate pairs.\n\t\t\tresult.push(createSurrogateCharacterClasses(surrogateMappings));\n\t\t}\n\t\t// https://gist.github.com/mathiasbynens/bbe7f870208abcfec860\n\t\tif (hasLoneHighSurrogates) {\n\t\t\tresult.push(\n\t\t\t\tcreateBMPCharacterClasses(loneHighSurrogates) +\n\t\t\t\t// Make sure the high surrogates aren’t part of a surrogate pair.\n\t\t\t\t'(?![\\\\uDC00-\\\\uDFFF])'\n\t\t\t);\n\t\t}\n\t\tif (hasLoneLowSurrogates) {\n\t\t\tresult.push(\n\t\t\t\t// It is not possible to accurately assert the low surrogates aren’t\n\t\t\t\t// part of a surrogate pair, since JavaScript regular expressions do\n\t\t\t\t// not support lookbehind.\n\t\t\t\t'(?:[^\\\\uD800-\\\\uDBFF]|^)' +\n\t\t\t\tcreateBMPCharacterClasses(loneLowSurrogates)\n\t\t\t);\n\t\t}\n\t\treturn result.join('|');\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// `regenerate` can be used as a constructor (and new methods can be added to\n\t// its prototype) but also as a regular function, the latter of which is the\n\t// documented and most common usage. For that reason, it’s not capitalized.\n\tvar regenerate = function(value) {\n\t\tif (arguments.length > 1) {\n\t\t\tvalue = slice.call(arguments);\n\t\t}\n\t\tif (this instanceof regenerate) {\n\t\t\tthis.data = [];\n\t\t\treturn value ? this.add(value) : this;\n\t\t}\n\t\treturn (new regenerate).add(value);\n\t};\n\n\tregenerate.version = '1.3.2';\n\n\tvar proto = regenerate.prototype;\n\textend(proto, {\n\t\t'add': function(value) {\n\t\t\tvar $this = this;\n\t\t\tif (value == null) {\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\tif (value instanceof regenerate) {\n\t\t\t\t// Allow passing other Regenerate instances.\n\t\t\t\t$this.data = dataAddData($this.data, value.data);\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tvalue = slice.call(arguments);\n\t\t\t}\n\t\t\tif (isArray(value)) {\n\t\t\t\tforEach(value, function(item) {\n\t\t\t\t\t$this.add(item);\n\t\t\t\t});\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\t$this.data = dataAdd(\n\t\t\t\t$this.data,\n\t\t\t\tisNumber(value) ? value : symbolToCodePoint(value)\n\t\t\t);\n\t\t\treturn $this;\n\t\t},\n\t\t'remove': function(value) {\n\t\t\tvar $this = this;\n\t\t\tif (value == null) {\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\tif (value instanceof regenerate) {\n\t\t\t\t// Allow passing other Regenerate instances.\n\t\t\t\t$this.data = dataRemoveData($this.data, value.data);\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tvalue = slice.call(arguments);\n\t\t\t}\n\t\t\tif (isArray(value)) {\n\t\t\t\tforEach(value, function(item) {\n\t\t\t\t\t$this.remove(item);\n\t\t\t\t});\n\t\t\t\treturn $this;\n\t\t\t}\n\t\t\t$this.data = dataRemove(\n\t\t\t\t$this.data,\n\t\t\t\tisNumber(value) ? value : symbolToCodePoint(value)\n\t\t\t);\n\t\t\treturn $this;\n\t\t},\n\t\t'addRange': function(start, end) {\n\t\t\tvar $this = this;\n\t\t\t$this.data = dataAddRange($this.data,\n\t\t\t\tisNumber(start) ? start : symbolToCodePoint(start),\n\t\t\t\tisNumber(end) ? end : symbolToCodePoint(end)\n\t\t\t);\n\t\t\treturn $this;\n\t\t},\n\t\t'removeRange': function(start, end) {\n\t\t\tvar $this = this;\n\t\t\tvar startCodePoint = isNumber(start) ? start : symbolToCodePoint(start);\n\t\t\tvar endCodePoint = isNumber(end) ? end : symbolToCodePoint(end);\n\t\t\t$this.data = dataRemoveRange(\n\t\t\t\t$this.data,\n\t\t\t\tstartCodePoint,\n\t\t\t\tendCodePoint\n\t\t\t);\n\t\t\treturn $this;\n\t\t},\n\t\t'intersection': function(argument) {\n\t\t\tvar $this = this;\n\t\t\t// Allow passing other Regenerate instances.\n\t\t\t// TODO: Optimize this by writing and using `dataIntersectionData()`.\n\t\t\tvar array = argument instanceof regenerate ?\n\t\t\t\tdataToArray(argument.data) :\n\t\t\t\targument;\n\t\t\t$this.data = dataIntersection($this.data, array);\n\t\t\treturn $this;\n\t\t},\n\t\t'contains': function(codePoint) {\n\t\t\treturn dataContains(\n\t\t\t\tthis.data,\n\t\t\t\tisNumber(codePoint) ? codePoint : symbolToCodePoint(codePoint)\n\t\t\t);\n\t\t},\n\t\t'clone': function() {\n\t\t\tvar set = new regenerate;\n\t\t\tset.data = this.data.slice(0);\n\t\t\treturn set;\n\t\t},\n\t\t'toString': function(options) {\n\t\t\tvar result = createCharacterClassesFromData(\n\t\t\t\tthis.data,\n\t\t\t\toptions ? options.bmpOnly : false,\n\t\t\t\toptions ? options.hasUnicodeFlag : false\n\t\t\t);\n\t\t\tif (!result) {\n\t\t\t\t// For an empty set, return something that can be inserted `/here/` to\n\t\t\t\t// form a valid regular expression. Avoid `(?:)` since that matches the\n\t\t\t\t// empty string.\n\t\t\t\treturn '[]';\n\t\t\t}\n\t\t\t// Use `\\0` instead of `\\x00` where possible.\n\t\t\treturn result.replace(regexNull, '\\\\0$1');\n\t\t},\n\t\t'toRegExp': function(flags) {\n\t\t\tvar pattern = this.toString(\n\t\t\t\tflags && flags.indexOf('u') != -1 ?\n\t\t\t\t\t{ 'hasUnicodeFlag': true } :\n\t\t\t\t\tnull\n\t\t\t);\n\t\t\treturn RegExp(pattern, flags || '');\n\t\t},\n\t\t'valueOf': function() { // Note: `valueOf` is aliased as `toArray`.\n\t\t\treturn dataToArray(this.data);\n\t\t}\n\t});\n\n\tproto.toArray = proto.valueOf;\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn regenerate;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = regenerate;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfreeExports.regenerate = regenerate;\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.regenerate = regenerate;\n\t}\n\n}(this));\n","// Generated by `/scripts/character-class-escape-sets.js`. Do not edit.\nvar regenerate = require('regenerate');\n\nexports.REGULAR = {\n\t'd': regenerate()\n\t\t.addRange(0x30, 0x39),\n\t'D': regenerate()\n\t\t.addRange(0x0, 0x2F)\n\t\t.addRange(0x3A, 0xFFFF),\n\t's': regenerate(0x20, 0xA0, 0x1680, 0x202F, 0x205F, 0x3000, 0xFEFF)\n\t\t.addRange(0x9, 0xD)\n\t\t.addRange(0x2000, 0x200A)\n\t\t.addRange(0x2028, 0x2029),\n\t'S': regenerate()\n\t\t.addRange(0x0, 0x8)\n\t\t.addRange(0xE, 0x1F)\n\t\t.addRange(0x21, 0x9F)\n\t\t.addRange(0xA1, 0x167F)\n\t\t.addRange(0x1681, 0x1FFF)\n\t\t.addRange(0x200B, 0x2027)\n\t\t.addRange(0x202A, 0x202E)\n\t\t.addRange(0x2030, 0x205E)\n\t\t.addRange(0x2060, 0x2FFF)\n\t\t.addRange(0x3001, 0xFEFE)\n\t\t.addRange(0xFF00, 0xFFFF),\n\t'w': regenerate(0x5F)\n\t\t.addRange(0x30, 0x39)\n\t\t.addRange(0x41, 0x5A)\n\t\t.addRange(0x61, 0x7A),\n\t'W': regenerate(0x60)\n\t\t.addRange(0x0, 0x2F)\n\t\t.addRange(0x3A, 0x40)\n\t\t.addRange(0x5B, 0x5E)\n\t\t.addRange(0x7B, 0xFFFF)\n};\n\nexports.UNICODE = {\n\t'd': regenerate()\n\t\t.addRange(0x30, 0x39),\n\t'D': regenerate()\n\t\t.addRange(0x0, 0x2F)\n\t\t.addRange(0x3A, 0x10FFFF),\n\t's': regenerate(0x20, 0xA0, 0x1680, 0x202F, 0x205F, 0x3000, 0xFEFF)\n\t\t.addRange(0x9, 0xD)\n\t\t.addRange(0x2000, 0x200A)\n\t\t.addRange(0x2028, 0x2029),\n\t'S': regenerate()\n\t\t.addRange(0x0, 0x8)\n\t\t.addRange(0xE, 0x1F)\n\t\t.addRange(0x21, 0x9F)\n\t\t.addRange(0xA1, 0x167F)\n\t\t.addRange(0x1681, 0x1FFF)\n\t\t.addRange(0x200B, 0x2027)\n\t\t.addRange(0x202A, 0x202E)\n\t\t.addRange(0x2030, 0x205E)\n\t\t.addRange(0x2060, 0x2FFF)\n\t\t.addRange(0x3001, 0xFEFE)\n\t\t.addRange(0xFF00, 0x10FFFF),\n\t'w': regenerate(0x5F)\n\t\t.addRange(0x30, 0x39)\n\t\t.addRange(0x41, 0x5A)\n\t\t.addRange(0x61, 0x7A),\n\t'W': regenerate(0x60)\n\t\t.addRange(0x0, 0x2F)\n\t\t.addRange(0x3A, 0x40)\n\t\t.addRange(0x5B, 0x5E)\n\t\t.addRange(0x7B, 0x10FFFF)\n};\n\nexports.UNICODE_IGNORE_CASE = {\n\t'd': regenerate()\n\t\t.addRange(0x30, 0x39),\n\t'D': regenerate()\n\t\t.addRange(0x0, 0x2F)\n\t\t.addRange(0x3A, 0x10FFFF),\n\t's': regenerate(0x20, 0xA0, 0x1680, 0x202F, 0x205F, 0x3000, 0xFEFF)\n\t\t.addRange(0x9, 0xD)\n\t\t.addRange(0x2000, 0x200A)\n\t\t.addRange(0x2028, 0x2029),\n\t'S': regenerate()\n\t\t.addRange(0x0, 0x8)\n\t\t.addRange(0xE, 0x1F)\n\t\t.addRange(0x21, 0x9F)\n\t\t.addRange(0xA1, 0x167F)\n\t\t.addRange(0x1681, 0x1FFF)\n\t\t.addRange(0x200B, 0x2027)\n\t\t.addRange(0x202A, 0x202E)\n\t\t.addRange(0x2030, 0x205E)\n\t\t.addRange(0x2060, 0x2FFF)\n\t\t.addRange(0x3001, 0xFEFE)\n\t\t.addRange(0xFF00, 0x10FFFF),\n\t'w': regenerate(0x5F, 0x17F, 0x212A)\n\t\t.addRange(0x30, 0x39)\n\t\t.addRange(0x41, 0x5A)\n\t\t.addRange(0x61, 0x7A),\n\t'W': regenerate(0x4B, 0x53, 0x60)\n\t\t.addRange(0x0, 0x2F)\n\t\t.addRange(0x3A, 0x40)\n\t\t.addRange(0x5B, 0x5E)\n\t\t.addRange(0x7B, 0x10FFFF)\n};\n","{\n\t\"75\": 8490,\n\t\"83\": 383,\n\t\"107\": 8490,\n\t\"115\": 383,\n\t\"181\": 924,\n\t\"197\": 8491,\n\t\"383\": 83,\n\t\"452\": 453,\n\t\"453\": 452,\n\t\"455\": 456,\n\t\"456\": 455,\n\t\"458\": 459,\n\t\"459\": 458,\n\t\"497\": 498,\n\t\"498\": 497,\n\t\"837\": 8126,\n\t\"914\": 976,\n\t\"917\": 1013,\n\t\"920\": 1012,\n\t\"921\": 8126,\n\t\"922\": 1008,\n\t\"924\": 181,\n\t\"928\": 982,\n\t\"929\": 1009,\n\t\"931\": 962,\n\t\"934\": 981,\n\t\"937\": 8486,\n\t\"962\": 931,\n\t\"976\": 914,\n\t\"977\": 1012,\n\t\"981\": 934,\n\t\"982\": 928,\n\t\"1008\": 922,\n\t\"1009\": 929,\n\t\"1012\": [\n\t\t920,\n\t\t977\n\t],\n\t\"1013\": 917,\n\t\"7776\": 7835,\n\t\"7835\": 7776,\n\t\"8126\": [\n\t\t837,\n\t\t921\n\t],\n\t\"8486\": 937,\n\t\"8490\": 75,\n\t\"8491\": 197,\n\t\"66560\": 66600,\n\t\"66561\": 66601,\n\t\"66562\": 66602,\n\t\"66563\": 66603,\n\t\"66564\": 66604,\n\t\"66565\": 66605,\n\t\"66566\": 66606,\n\t\"66567\": 66607,\n\t\"66568\": 66608,\n\t\"66569\": 66609,\n\t\"66570\": 66610,\n\t\"66571\": 66611,\n\t\"66572\": 66612,\n\t\"66573\": 66613,\n\t\"66574\": 66614,\n\t\"66575\": 66615,\n\t\"66576\": 66616,\n\t\"66577\": 66617,\n\t\"66578\": 66618,\n\t\"66579\": 66619,\n\t\"66580\": 66620,\n\t\"66581\": 66621,\n\t\"66582\": 66622,\n\t\"66583\": 66623,\n\t\"66584\": 66624,\n\t\"66585\": 66625,\n\t\"66586\": 66626,\n\t\"66587\": 66627,\n\t\"66588\": 66628,\n\t\"66589\": 66629,\n\t\"66590\": 66630,\n\t\"66591\": 66631,\n\t\"66592\": 66632,\n\t\"66593\": 66633,\n\t\"66594\": 66634,\n\t\"66595\": 66635,\n\t\"66596\": 66636,\n\t\"66597\": 66637,\n\t\"66598\": 66638,\n\t\"66599\": 66639,\n\t\"66600\": 66560,\n\t\"66601\": 66561,\n\t\"66602\": 66562,\n\t\"66603\": 66563,\n\t\"66604\": 66564,\n\t\"66605\": 66565,\n\t\"66606\": 66566,\n\t\"66607\": 66567,\n\t\"66608\": 66568,\n\t\"66609\": 66569,\n\t\"66610\": 66570,\n\t\"66611\": 66571,\n\t\"66612\": 66572,\n\t\"66613\": 66573,\n\t\"66614\": 66574,\n\t\"66615\": 66575,\n\t\"66616\": 66576,\n\t\"66617\": 66577,\n\t\"66618\": 66578,\n\t\"66619\": 66579,\n\t\"66620\": 66580,\n\t\"66621\": 66581,\n\t\"66622\": 66582,\n\t\"66623\": 66583,\n\t\"66624\": 66584,\n\t\"66625\": 66585,\n\t\"66626\": 66586,\n\t\"66627\": 66587,\n\t\"66628\": 66588,\n\t\"66629\": 66589,\n\t\"66630\": 66590,\n\t\"66631\": 66591,\n\t\"66632\": 66592,\n\t\"66633\": 66593,\n\t\"66634\": 66594,\n\t\"66635\": 66595,\n\t\"66636\": 66596,\n\t\"66637\": 66597,\n\t\"66638\": 66598,\n\t\"66639\": 66599,\n\t\"68736\": 68800,\n\t\"68737\": 68801,\n\t\"68738\": 68802,\n\t\"68739\": 68803,\n\t\"68740\": 68804,\n\t\"68741\": 68805,\n\t\"68742\": 68806,\n\t\"68743\": 68807,\n\t\"68744\": 68808,\n\t\"68745\": 68809,\n\t\"68746\": 68810,\n\t\"68747\": 68811,\n\t\"68748\": 68812,\n\t\"68749\": 68813,\n\t\"68750\": 68814,\n\t\"68751\": 68815,\n\t\"68752\": 68816,\n\t\"68753\": 68817,\n\t\"68754\": 68818,\n\t\"68755\": 68819,\n\t\"68756\": 68820,\n\t\"68757\": 68821,\n\t\"68758\": 68822,\n\t\"68759\": 68823,\n\t\"68760\": 68824,\n\t\"68761\": 68825,\n\t\"68762\": 68826,\n\t\"68763\": 68827,\n\t\"68764\": 68828,\n\t\"68765\": 68829,\n\t\"68766\": 68830,\n\t\"68767\": 68831,\n\t\"68768\": 68832,\n\t\"68769\": 68833,\n\t\"68770\": 68834,\n\t\"68771\": 68835,\n\t\"68772\": 68836,\n\t\"68773\": 68837,\n\t\"68774\": 68838,\n\t\"68775\": 68839,\n\t\"68776\": 68840,\n\t\"68777\": 68841,\n\t\"68778\": 68842,\n\t\"68779\": 68843,\n\t\"68780\": 68844,\n\t\"68781\": 68845,\n\t\"68782\": 68846,\n\t\"68783\": 68847,\n\t\"68784\": 68848,\n\t\"68785\": 68849,\n\t\"68786\": 68850,\n\t\"68800\": 68736,\n\t\"68801\": 68737,\n\t\"68802\": 68738,\n\t\"68803\": 68739,\n\t\"68804\": 68740,\n\t\"68805\": 68741,\n\t\"68806\": 68742,\n\t\"68807\": 68743,\n\t\"68808\": 68744,\n\t\"68809\": 68745,\n\t\"68810\": 68746,\n\t\"68811\": 68747,\n\t\"68812\": 68748,\n\t\"68813\": 68749,\n\t\"68814\": 68750,\n\t\"68815\": 68751,\n\t\"68816\": 68752,\n\t\"68817\": 68753,\n\t\"68818\": 68754,\n\t\"68819\": 68755,\n\t\"68820\": 68756,\n\t\"68821\": 68757,\n\t\"68822\": 68758,\n\t\"68823\": 68759,\n\t\"68824\": 68760,\n\t\"68825\": 68761,\n\t\"68826\": 68762,\n\t\"68827\": 68763,\n\t\"68828\": 68764,\n\t\"68829\": 68765,\n\t\"68830\": 68766,\n\t\"68831\": 68767,\n\t\"68832\": 68768,\n\t\"68833\": 68769,\n\t\"68834\": 68770,\n\t\"68835\": 68771,\n\t\"68836\": 68772,\n\t\"68837\": 68773,\n\t\"68838\": 68774,\n\t\"68839\": 68775,\n\t\"68840\": 68776,\n\t\"68841\": 68777,\n\t\"68842\": 68778,\n\t\"68843\": 68779,\n\t\"68844\": 68780,\n\t\"68845\": 68781,\n\t\"68846\": 68782,\n\t\"68847\": 68783,\n\t\"68848\": 68784,\n\t\"68849\": 68785,\n\t\"68850\": 68786,\n\t\"71840\": 71872,\n\t\"71841\": 71873,\n\t\"71842\": 71874,\n\t\"71843\": 71875,\n\t\"71844\": 71876,\n\t\"71845\": 71877,\n\t\"71846\": 71878,\n\t\"71847\": 71879,\n\t\"71848\": 71880,\n\t\"71849\": 71881,\n\t\"71850\": 71882,\n\t\"71851\": 71883,\n\t\"71852\": 71884,\n\t\"71853\": 71885,\n\t\"71854\": 71886,\n\t\"71855\": 71887,\n\t\"71856\": 71888,\n\t\"71857\": 71889,\n\t\"71858\": 71890,\n\t\"71859\": 71891,\n\t\"71860\": 71892,\n\t\"71861\": 71893,\n\t\"71862\": 71894,\n\t\"71863\": 71895,\n\t\"71864\": 71896,\n\t\"71865\": 71897,\n\t\"71866\": 71898,\n\t\"71867\": 71899,\n\t\"71868\": 71900,\n\t\"71869\": 71901,\n\t\"71870\": 71902,\n\t\"71871\": 71903,\n\t\"71872\": 71840,\n\t\"71873\": 71841,\n\t\"71874\": 71842,\n\t\"71875\": 71843,\n\t\"71876\": 71844,\n\t\"71877\": 71845,\n\t\"71878\": 71846,\n\t\"71879\": 71847,\n\t\"71880\": 71848,\n\t\"71881\": 71849,\n\t\"71882\": 71850,\n\t\"71883\": 71851,\n\t\"71884\": 71852,\n\t\"71885\": 71853,\n\t\"71886\": 71854,\n\t\"71887\": 71855,\n\t\"71888\": 71856,\n\t\"71889\": 71857,\n\t\"71890\": 71858,\n\t\"71891\": 71859,\n\t\"71892\": 71860,\n\t\"71893\": 71861,\n\t\"71894\": 71862,\n\t\"71895\": 71863,\n\t\"71896\": 71864,\n\t\"71897\": 71865,\n\t\"71898\": 71866,\n\t\"71899\": 71867,\n\t\"71900\": 71868,\n\t\"71901\": 71869,\n\t\"71902\": 71870,\n\t\"71903\": 71871\n}\n","// regjsparser\n//\n// ==================================================================\n//\n// See ECMA-262 Standard: 15.10.1\n//\n// NOTE: The ECMA-262 standard uses the term \"Assertion\" for /^/. Here the\n//   term \"Anchor\" is used.\n//\n// Pattern ::\n//      Disjunction\n//\n// Disjunction ::\n//      Alternative\n//      Alternative | Disjunction\n//\n// Alternative ::\n//      [empty]\n//      Alternative Term\n//\n// Term ::\n//      Anchor\n//      Atom\n//      Atom Quantifier\n//\n// Anchor ::\n//      ^\n//      $\n//      \\ b\n//      \\ B\n//      ( ? = Disjunction )\n//      ( ? ! Disjunction )\n//\n// Quantifier ::\n//      QuantifierPrefix\n//      QuantifierPrefix ?\n//\n// QuantifierPrefix ::\n//      *\n//      +\n//      ?\n//      { DecimalDigits }\n//      { DecimalDigits , }\n//      { DecimalDigits , DecimalDigits }\n//\n// Atom ::\n//      PatternCharacter\n//      .\n//      \\ AtomEscape\n//      CharacterClass\n//      ( Disjunction )\n//      ( ? : Disjunction )\n//\n// PatternCharacter ::\n//      SourceCharacter but not any of: ^ $ \\ . * + ? ( ) [ ] { } |\n//\n// AtomEscape ::\n//      DecimalEscape\n//      CharacterEscape\n//      CharacterClassEscape\n//\n// CharacterEscape[U] ::\n//      ControlEscape\n//      c ControlLetter\n//      HexEscapeSequence\n//      RegExpUnicodeEscapeSequence[?U] (ES6)\n//      IdentityEscape[?U]\n//\n// ControlEscape ::\n//      one of f n r t v\n// ControlLetter ::\n//      one of\n//          a b c d e f g h i j k l m n o p q r s t u v w x y z\n//          A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\n//\n// IdentityEscape ::\n//      SourceCharacter but not IdentifierPart\n//      <ZWJ>\n//      <ZWNJ>\n//\n// DecimalEscape ::\n//      DecimalIntegerLiteral [lookahead ∉ DecimalDigit]\n//\n// CharacterClassEscape ::\n//      one of d D s S w W\n//\n// CharacterClass ::\n//      [ [lookahead ∉ {^}] ClassRanges ]\n//      [ ^ ClassRanges ]\n//\n// ClassRanges ::\n//      [empty]\n//      NonemptyClassRanges\n//\n// NonemptyClassRanges ::\n//      ClassAtom\n//      ClassAtom NonemptyClassRangesNoDash\n//      ClassAtom - ClassAtom ClassRanges\n//\n// NonemptyClassRangesNoDash ::\n//      ClassAtom\n//      ClassAtomNoDash NonemptyClassRangesNoDash\n//      ClassAtomNoDash - ClassAtom ClassRanges\n//\n// ClassAtom ::\n//      -\n//      ClassAtomNoDash\n//\n// ClassAtomNoDash ::\n//      SourceCharacter but not one of \\ or ] or -\n//      \\ ClassEscape\n//\n// ClassEscape ::\n//      DecimalEscape\n//      b\n//      CharacterEscape\n//      CharacterClassEscape\n\n(function() {\n\n  function parse(str, flags) {\n    function addRaw(node) {\n      node.raw = str.substring(node.range[0], node.range[1]);\n      return node;\n    }\n\n    function updateRawStart(node, start) {\n      node.range[0] = start;\n      return addRaw(node);\n    }\n\n    function createAnchor(kind, rawLength) {\n      return addRaw({\n        type: 'anchor',\n        kind: kind,\n        range: [\n          pos - rawLength,\n          pos\n        ]\n      });\n    }\n\n    function createValue(kind, codePoint, from, to) {\n      return addRaw({\n        type: 'value',\n        kind: kind,\n        codePoint: codePoint,\n        range: [from, to]\n      });\n    }\n\n    function createEscaped(kind, codePoint, value, fromOffset) {\n      fromOffset = fromOffset || 0;\n      return createValue(kind, codePoint, pos - (value.length + fromOffset), pos);\n    }\n\n    function createCharacter(matches) {\n      var _char = matches[0];\n      var first = _char.charCodeAt(0);\n      if (hasUnicodeFlag) {\n        var second;\n        if (_char.length === 1 && first >= 0xD800 && first <= 0xDBFF) {\n          second = lookahead().charCodeAt(0);\n          if (second >= 0xDC00 && second <= 0xDFFF) {\n            // Unicode surrogate pair\n            pos++;\n            return createValue(\n                'symbol',\n                (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000,\n                pos - 2, pos);\n          }\n        }\n      }\n      return createValue('symbol', first, pos - 1, pos);\n    }\n\n    function createDisjunction(alternatives, from, to) {\n      return addRaw({\n        type: 'disjunction',\n        body: alternatives,\n        range: [\n          from,\n          to\n        ]\n      });\n    }\n\n    function createDot() {\n      return addRaw({\n        type: 'dot',\n        range: [\n          pos - 1,\n          pos\n        ]\n      });\n    }\n\n    function createCharacterClassEscape(value) {\n      return addRaw({\n        type: 'characterClassEscape',\n        value: value,\n        range: [\n          pos - 2,\n          pos\n        ]\n      });\n    }\n\n    function createReference(matchIndex) {\n      return addRaw({\n        type: 'reference',\n        matchIndex: parseInt(matchIndex, 10),\n        range: [\n          pos - 1 - matchIndex.length,\n          pos\n        ]\n      });\n    }\n\n    function createGroup(behavior, disjunction, from, to) {\n      return addRaw({\n        type: 'group',\n        behavior: behavior,\n        body: disjunction,\n        range: [\n          from,\n          to\n        ]\n      });\n    }\n\n    function createQuantifier(min, max, from, to) {\n      if (to == null) {\n        from = pos - 1;\n        to = pos;\n      }\n\n      return addRaw({\n        type: 'quantifier',\n        min: min,\n        max: max,\n        greedy: true,\n        body: null, // set later on\n        range: [\n          from,\n          to\n        ]\n      });\n    }\n\n    function createAlternative(terms, from, to) {\n      return addRaw({\n        type: 'alternative',\n        body: terms,\n        range: [\n          from,\n          to\n        ]\n      });\n    }\n\n    function createCharacterClass(classRanges, negative, from, to) {\n      return addRaw({\n        type: 'characterClass',\n        body: classRanges,\n        negative: negative,\n        range: [\n          from,\n          to\n        ]\n      });\n    }\n\n    function createClassRange(min, max, from, to) {\n      // See 15.10.2.15:\n      if (min.codePoint > max.codePoint) {\n        bail('invalid range in character class', min.raw + '-' + max.raw, from, to);\n      }\n\n      return addRaw({\n        type: 'characterClassRange',\n        min: min,\n        max: max,\n        range: [\n          from,\n          to\n        ]\n      });\n    }\n\n    function flattenBody(body) {\n      if (body.type === 'alternative') {\n        return body.body;\n      } else {\n        return [body];\n      }\n    }\n\n    function isEmpty(obj) {\n      return obj.type === 'empty';\n    }\n\n    function incr(amount) {\n      amount = (amount || 1);\n      var res = str.substring(pos, pos + amount);\n      pos += (amount || 1);\n      return res;\n    }\n\n    function skip(value) {\n      if (!match(value)) {\n        bail('character', value);\n      }\n    }\n\n    function match(value) {\n      if (str.indexOf(value, pos) === pos) {\n        return incr(value.length);\n      }\n    }\n\n    function lookahead() {\n      return str[pos];\n    }\n\n    function current(value) {\n      return str.indexOf(value, pos) === pos;\n    }\n\n    function next(value) {\n      return str[pos + 1] === value;\n    }\n\n    function matchReg(regExp) {\n      var subStr = str.substring(pos);\n      var res = subStr.match(regExp);\n      if (res) {\n        res.range = [];\n        res.range[0] = pos;\n        incr(res[0].length);\n        res.range[1] = pos;\n      }\n      return res;\n    }\n\n    function parseDisjunction() {\n      // Disjunction ::\n      //      Alternative\n      //      Alternative | Disjunction\n      var res = [], from = pos;\n      res.push(parseAlternative());\n\n      while (match('|')) {\n        res.push(parseAlternative());\n      }\n\n      if (res.length === 1) {\n        return res[0];\n      }\n\n      return createDisjunction(res, from, pos);\n    }\n\n    function parseAlternative() {\n      var res = [], from = pos;\n      var term;\n\n      // Alternative ::\n      //      [empty]\n      //      Alternative Term\n      while (term = parseTerm()) {\n        res.push(term);\n      }\n\n      if (res.length === 1) {\n        return res[0];\n      }\n\n      return createAlternative(res, from, pos);\n    }\n\n    function parseTerm() {\n      // Term ::\n      //      Anchor\n      //      Atom\n      //      Atom Quantifier\n\n      if (pos >= str.length || current('|') || current(')')) {\n        return null; /* Means: The term is empty */\n      }\n\n      var anchor = parseAnchor();\n\n      if (anchor) {\n        return anchor;\n      }\n\n      var atom = parseAtom();\n      if (!atom) {\n        bail('Expected atom');\n      }\n      var quantifier = parseQuantifier() || false;\n      if (quantifier) {\n        quantifier.body = flattenBody(atom);\n        // The quantifier contains the atom. Therefore, the beginning of the\n        // quantifier range is given by the beginning of the atom.\n        updateRawStart(quantifier, atom.range[0]);\n        return quantifier;\n      }\n      return atom;\n    }\n\n    function parseGroup(matchA, typeA, matchB, typeB) {\n      var type = null, from = pos;\n\n      if (match(matchA)) {\n        type = typeA;\n      } else if (match(matchB)) {\n        type = typeB;\n      } else {\n        return false;\n      }\n\n      var body = parseDisjunction();\n      if (!body) {\n        bail('Expected disjunction');\n      }\n      skip(')');\n      var group = createGroup(type, flattenBody(body), from, pos);\n\n      if (type == 'normal') {\n        // Keep track of the number of closed groups. This is required for\n        // parseDecimalEscape(). In case the string is parsed a second time the\n        // value already holds the total count and no incrementation is required.\n        if (firstIteration) {\n          closedCaptureCounter++;\n        }\n      }\n      return group;\n    }\n\n    function parseAnchor() {\n      // Anchor ::\n      //      ^\n      //      $\n      //      \\ b\n      //      \\ B\n      //      ( ? = Disjunction )\n      //      ( ? ! Disjunction )\n      var res, from = pos;\n\n      if (match('^')) {\n        return createAnchor('start', 1 /* rawLength */);\n      } else if (match('$')) {\n        return createAnchor('end', 1 /* rawLength */);\n      } else if (match('\\\\b')) {\n        return createAnchor('boundary', 2 /* rawLength */);\n      } else if (match('\\\\B')) {\n        return createAnchor('not-boundary', 2 /* rawLength */);\n      } else {\n        return parseGroup('(?=', 'lookahead', '(?!', 'negativeLookahead');\n      }\n    }\n\n    function parseQuantifier() {\n      // Quantifier ::\n      //      QuantifierPrefix\n      //      QuantifierPrefix ?\n      //\n      // QuantifierPrefix ::\n      //      *\n      //      +\n      //      ?\n      //      { DecimalDigits }\n      //      { DecimalDigits , }\n      //      { DecimalDigits , DecimalDigits }\n\n      var res, from = pos;\n      var quantifier;\n      var min, max;\n\n      if (match('*')) {\n        quantifier = createQuantifier(0);\n      }\n      else if (match('+')) {\n        quantifier = createQuantifier(1);\n      }\n      else if (match('?')) {\n        quantifier = createQuantifier(0, 1);\n      }\n      else if (res = matchReg(/^\\{([0-9]+)\\}/)) {\n        min = parseInt(res[1], 10);\n        quantifier = createQuantifier(min, min, res.range[0], res.range[1]);\n      }\n      else if (res = matchReg(/^\\{([0-9]+),\\}/)) {\n        min = parseInt(res[1], 10);\n        quantifier = createQuantifier(min, undefined, res.range[0], res.range[1]);\n      }\n      else if (res = matchReg(/^\\{([0-9]+),([0-9]+)\\}/)) {\n        min = parseInt(res[1], 10);\n        max = parseInt(res[2], 10);\n        if (min > max) {\n          bail('numbers out of order in {} quantifier', '', from, pos);\n        }\n        quantifier = createQuantifier(min, max, res.range[0], res.range[1]);\n      }\n\n      if (quantifier) {\n        if (match('?')) {\n          quantifier.greedy = false;\n          quantifier.range[1] += 1;\n        }\n      }\n\n      return quantifier;\n    }\n\n    function parseAtom() {\n      // Atom ::\n      //      PatternCharacter\n      //      .\n      //      \\ AtomEscape\n      //      CharacterClass\n      //      ( Disjunction )\n      //      ( ? : Disjunction )\n\n      var res;\n\n      // jviereck: allow ']', '}' here as well to be compatible with browser's\n      //   implementations: ']'.match(/]/);\n      // if (res = matchReg(/^[^^$\\\\.*+?()[\\]{}|]/)) {\n      if (res = matchReg(/^[^^$\\\\.*+?(){[|]/)) {\n        //      PatternCharacter\n        return createCharacter(res);\n      }\n      else if (match('.')) {\n        //      .\n        return createDot();\n      }\n      else if (match('\\\\')) {\n        //      \\ AtomEscape\n        res = parseAtomEscape();\n        if (!res) {\n          bail('atomEscape');\n        }\n        return res;\n      }\n      else if (res = parseCharacterClass()) {\n        return res;\n      }\n      else {\n        //      ( Disjunction )\n        //      ( ? : Disjunction )\n        return parseGroup('(?:', 'ignore', '(', 'normal');\n      }\n    }\n\n    function parseUnicodeSurrogatePairEscape(firstEscape) {\n      if (hasUnicodeFlag) {\n        var first, second;\n        if (firstEscape.kind == 'unicodeEscape' &&\n          (first = firstEscape.codePoint) >= 0xD800 && first <= 0xDBFF &&\n          current('\\\\') && next('u') ) {\n          var prevPos = pos;\n          pos++;\n          var secondEscape = parseClassEscape();\n          if (secondEscape.kind == 'unicodeEscape' &&\n            (second = secondEscape.codePoint) >= 0xDC00 && second <= 0xDFFF) {\n            // Unicode surrogate pair\n            firstEscape.range[1] = secondEscape.range[1];\n            firstEscape.codePoint = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n            firstEscape.type = 'value';\n            firstEscape.kind = 'unicodeCodePointEscape';\n            addRaw(firstEscape);\n          }\n          else {\n            pos = prevPos;\n          }\n        }\n      }\n      return firstEscape;\n    }\n\n    function parseClassEscape() {\n      return parseAtomEscape(true);\n    }\n\n    function parseAtomEscape(insideCharacterClass) {\n      // AtomEscape ::\n      //      DecimalEscape\n      //      CharacterEscape\n      //      CharacterClassEscape\n\n      var res, from = pos;\n\n      res = parseDecimalEscape();\n      if (res) {\n        return res;\n      }\n\n      // For ClassEscape\n      if (insideCharacterClass) {\n        if (match('b')) {\n          // 15.10.2.19\n          // The production ClassEscape :: b evaluates by returning the\n          // CharSet containing the one character <BS> (Unicode value 0008).\n          return createEscaped('singleEscape', 0x0008, '\\\\b');\n        } else if (match('B')) {\n          bail('\\\\B not possible inside of CharacterClass', '', from);\n        }\n      }\n\n      res = parseCharacterEscape();\n\n      return res;\n    }\n\n\n    function parseDecimalEscape() {\n      // DecimalEscape ::\n      //      DecimalIntegerLiteral [lookahead ∉ DecimalDigit]\n      //      CharacterClassEscape :: one of d D s S w W\n\n      var res, match;\n\n      if (res = matchReg(/^(?!0)\\d+/)) {\n        match = res[0];\n        var refIdx = parseInt(res[0], 10);\n        if (refIdx <= closedCaptureCounter) {\n          // If the number is smaller than the normal-groups found so\n          // far, then it is a reference...\n          return createReference(res[0]);\n        } else {\n          // ... otherwise it needs to be interpreted as a octal (if the\n          // number is in an octal format). If it is NOT octal format,\n          // then the slash is ignored and the number is matched later\n          // as normal characters.\n\n          // Recall the negative decision to decide if the input must be parsed\n          // a second time with the total normal-groups.\n          backrefDenied.push(refIdx);\n\n          // Reset the position again, as maybe only parts of the previous\n          // matched numbers are actual octal numbers. E.g. in '019' only\n          // the '01' should be matched.\n          incr(-res[0].length);\n          if (res = matchReg(/^[0-7]{1,3}/)) {\n            return createEscaped('octal', parseInt(res[0], 8), res[0], 1);\n          } else {\n            // If we end up here, we have a case like /\\91/. Then the\n            // first slash is to be ignored and the 9 & 1 to be treated\n            // like ordinary characters. Create a character for the\n            // first number only here - other number-characters\n            // (if available) will be matched later.\n            res = createCharacter(matchReg(/^[89]/));\n            return updateRawStart(res, res.range[0] - 1);\n          }\n        }\n      }\n      // Only allow octal numbers in the following. All matched numbers start\n      // with a zero (if the do not, the previous if-branch is executed).\n      // If the number is not octal format and starts with zero (e.g. `091`)\n      // then only the zeros `0` is treated here and the `91` are ordinary\n      // characters.\n      // Example:\n      //   /\\091/.exec('\\091')[0].length === 3\n      else if (res = matchReg(/^[0-7]{1,3}/)) {\n        match = res[0];\n        if (/^0{1,3}$/.test(match)) {\n          // If they are all zeros, then only take the first one.\n          return createEscaped('null', 0x0000, '0', match.length + 1);\n        } else {\n          return createEscaped('octal', parseInt(match, 8), match, 1);\n        }\n      } else if (res = matchReg(/^[dDsSwW]/)) {\n        return createCharacterClassEscape(res[0]);\n      }\n      return false;\n    }\n\n    function parseCharacterEscape() {\n      // CharacterEscape ::\n      //      ControlEscape\n      //      c ControlLetter\n      //      HexEscapeSequence\n      //      UnicodeEscapeSequence\n      //      IdentityEscape\n\n      var res;\n      if (res = matchReg(/^[fnrtv]/)) {\n        // ControlEscape\n        var codePoint = 0;\n        switch (res[0]) {\n          case 't': codePoint = 0x009; break;\n          case 'n': codePoint = 0x00A; break;\n          case 'v': codePoint = 0x00B; break;\n          case 'f': codePoint = 0x00C; break;\n          case 'r': codePoint = 0x00D; break;\n        }\n        return createEscaped('singleEscape', codePoint, '\\\\' + res[0]);\n      } else if (res = matchReg(/^c([a-zA-Z])/)) {\n        // c ControlLetter\n        return createEscaped('controlLetter', res[1].charCodeAt(0) % 32, res[1], 2);\n      } else if (res = matchReg(/^x([0-9a-fA-F]{2})/)) {\n        // HexEscapeSequence\n        return createEscaped('hexadecimalEscape', parseInt(res[1], 16), res[1], 2);\n      } else if (res = matchReg(/^u([0-9a-fA-F]{4})/)) {\n        // UnicodeEscapeSequence\n        return parseUnicodeSurrogatePairEscape(\n          createEscaped('unicodeEscape', parseInt(res[1], 16), res[1], 2)\n        );\n      } else if (hasUnicodeFlag && (res = matchReg(/^u\\{([0-9a-fA-F]+)\\}/))) {\n        // RegExpUnicodeEscapeSequence (ES6 Unicode code point escape)\n        return createEscaped('unicodeCodePointEscape', parseInt(res[1], 16), res[1], 4);\n      } else {\n        // IdentityEscape\n        return parseIdentityEscape();\n      }\n    }\n\n    // Taken from the Esprima parser.\n    function isIdentifierPart(ch) {\n      // Generated by `tools/generate-identifier-regex.js`.\n      var NonAsciiIdentifierPart = new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]');\n\n      return (ch === 36) || (ch === 95) ||  // $ (dollar) and _ (underscore)\n        (ch >= 65 && ch <= 90) ||         // A..Z\n        (ch >= 97 && ch <= 122) ||        // a..z\n        (ch >= 48 && ch <= 57) ||         // 0..9\n        (ch === 92) ||                    // \\ (backslash)\n        ((ch >= 0x80) && NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n    }\n\n    function parseIdentityEscape() {\n      // IdentityEscape ::\n      //      SourceCharacter but not IdentifierPart\n      //      <ZWJ>\n      //      <ZWNJ>\n\n      var ZWJ = '\\u200C';\n      var ZWNJ = '\\u200D';\n\n      var tmp;\n\n      if (!isIdentifierPart(lookahead())) {\n        tmp = incr();\n        return createEscaped('identifier', tmp.charCodeAt(0), tmp, 1);\n      }\n\n      if (match(ZWJ)) {\n        // <ZWJ>\n        return createEscaped('identifier', 0x200C, ZWJ);\n      } else if (match(ZWNJ)) {\n        // <ZWNJ>\n        return createEscaped('identifier', 0x200D, ZWNJ);\n      }\n\n      return null;\n    }\n\n    function parseCharacterClass() {\n      // CharacterClass ::\n      //      [ [lookahead ∉ {^}] ClassRanges ]\n      //      [ ^ ClassRanges ]\n\n      var res, from = pos;\n      if (res = matchReg(/^\\[\\^/)) {\n        res = parseClassRanges();\n        skip(']');\n        return createCharacterClass(res, true, from, pos);\n      } else if (match('[')) {\n        res = parseClassRanges();\n        skip(']');\n        return createCharacterClass(res, false, from, pos);\n      }\n\n      return null;\n    }\n\n    function parseClassRanges() {\n      // ClassRanges ::\n      //      [empty]\n      //      NonemptyClassRanges\n\n      var res;\n      if (current(']')) {\n        // Empty array means nothing insinde of the ClassRange.\n        return [];\n      } else {\n        res = parseNonemptyClassRanges();\n        if (!res) {\n          bail('nonEmptyClassRanges');\n        }\n        return res;\n      }\n    }\n\n    function parseHelperClassRanges(atom) {\n      var from, to, res;\n      if (current('-') && !next(']')) {\n        // ClassAtom - ClassAtom ClassRanges\n        skip('-');\n\n        res = parseClassAtom();\n        if (!res) {\n          bail('classAtom');\n        }\n        to = pos;\n        var classRanges = parseClassRanges();\n        if (!classRanges) {\n          bail('classRanges');\n        }\n        from = atom.range[0];\n        if (classRanges.type === 'empty') {\n          return [createClassRange(atom, res, from, to)];\n        }\n        return [createClassRange(atom, res, from, to)].concat(classRanges);\n      }\n\n      res = parseNonemptyClassRangesNoDash();\n      if (!res) {\n        bail('nonEmptyClassRangesNoDash');\n      }\n\n      return [atom].concat(res);\n    }\n\n    function parseNonemptyClassRanges() {\n      // NonemptyClassRanges ::\n      //      ClassAtom\n      //      ClassAtom NonemptyClassRangesNoDash\n      //      ClassAtom - ClassAtom ClassRanges\n\n      var atom = parseClassAtom();\n      if (!atom) {\n        bail('classAtom');\n      }\n\n      if (current(']')) {\n        // ClassAtom\n        return [atom];\n      }\n\n      // ClassAtom NonemptyClassRangesNoDash\n      // ClassAtom - ClassAtom ClassRanges\n      return parseHelperClassRanges(atom);\n    }\n\n    function parseNonemptyClassRangesNoDash() {\n      // NonemptyClassRangesNoDash ::\n      //      ClassAtom\n      //      ClassAtomNoDash NonemptyClassRangesNoDash\n      //      ClassAtomNoDash - ClassAtom ClassRanges\n\n      var res = parseClassAtom();\n      if (!res) {\n        bail('classAtom');\n      }\n      if (current(']')) {\n        //      ClassAtom\n        return res;\n      }\n\n      // ClassAtomNoDash NonemptyClassRangesNoDash\n      // ClassAtomNoDash - ClassAtom ClassRanges\n      return parseHelperClassRanges(res);\n    }\n\n    function parseClassAtom() {\n      // ClassAtom ::\n      //      -\n      //      ClassAtomNoDash\n      if (match('-')) {\n        return createCharacter('-');\n      } else {\n        return parseClassAtomNoDash();\n      }\n    }\n\n    function parseClassAtomNoDash() {\n      // ClassAtomNoDash ::\n      //      SourceCharacter but not one of \\ or ] or -\n      //      \\ ClassEscape\n\n      var res;\n      if (res = matchReg(/^[^\\\\\\]-]/)) {\n        return createCharacter(res[0]);\n      } else if (match('\\\\')) {\n        res = parseClassEscape();\n        if (!res) {\n          bail('classEscape');\n        }\n\n        return parseUnicodeSurrogatePairEscape(res);\n      }\n    }\n\n    function bail(message, details, from, to) {\n      from = from == null ? pos : from;\n      to = to == null ? from : to;\n\n      var contextStart = Math.max(0, from - 10);\n      var contextEnd = Math.min(to + 10, str.length);\n\n      // Output a bit of context and a line pointing to where our error is.\n      //\n      // We are assuming that there are no actual newlines in the content as this is a regular expression.\n      var context = '    ' + str.substring(contextStart, contextEnd);\n      var pointer = '    ' + new Array(from - contextStart + 1).join(' ') + '^';\n\n      throw SyntaxError(message + ' at position ' + from + (details ? ': ' + details : '') + '\\n' + context + '\\n' + pointer);\n    }\n\n    var backrefDenied = [];\n    var closedCaptureCounter = 0;\n    var firstIteration = true;\n    var hasUnicodeFlag = (flags || \"\").indexOf(\"u\") !== -1;\n    var pos = 0;\n\n    // Convert the input to a string and treat the empty string special.\n    str = String(str);\n    if (str === '') {\n      str = '(?:)';\n    }\n\n    var result = parseDisjunction();\n\n    if (result.range[1] !== str.length) {\n      bail('Could not parse entire input - got stuck', '', result.range[1]);\n    }\n\n    // The spec requires to interpret the `\\2` in `/\\2()()/` as backreference.\n    // As the parser collects the number of capture groups as the string is\n    // parsed it is impossible to make these decisions at the point when the\n    // `\\2` is handled. In case the local decision turns out to be wrong after\n    // the parsing has finished, the input string is parsed a second time with\n    // the total number of capture groups set.\n    //\n    // SEE: https://github.com/jviereck/regjsparser/issues/70\n    for (var i = 0; i < backrefDenied.length; i++) {\n      if (backrefDenied[i] <= closedCaptureCounter) {\n        // Parse the input a second time.\n        pos = 0;\n        firstIteration = false;\n        return parseDisjunction();\n      }\n    }\n\n    return result;\n  }\n\n  var regjsparser = {\n    parse: parse\n  };\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = regjsparser;\n  } else {\n    window.regjsparser = regjsparser;\n  }\n\n}());\n","/*!\n * RegJSGen\n * Copyright 2014 Benjamin Tan <https://d10.github.io/>\n * Available under MIT license <http://d10.mit-license.org/>\n */\n;(function() {\n  'use strict';\n\n  /** Used to determine if values are of the language type `Object` */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used as a reference to the global object */\n  var root = (objectTypes[typeof window] && window) || this;\n\n  /** Backup possible global object */\n  var oldRoot = root;\n\n  /** Detect free variable `exports` */\n  var freeExports = objectTypes[typeof exports] && exports;\n\n  /** Detect free variable `module` */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root` */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /*! Based on https://mths.be/fromcodepoint v0.2.0 by @mathias */\n\n  var stringFromCharCode = String.fromCharCode;\n  var floor = Math.floor;\n  function fromCodePoint() {\n    var MAX_SIZE = 0x4000;\n    var codeUnits = [];\n    var highSurrogate;\n    var lowSurrogate;\n    var index = -1;\n    var length = arguments.length;\n    if (!length) {\n      return '';\n    }\n    var result = '';\n    while (++index < length) {\n      var codePoint = Number(arguments[index]);\n      if (\n        !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n        codePoint < 0 || // not a valid Unicode code point\n        codePoint > 0x10FFFF || // not a valid Unicode code point\n        floor(codePoint) != codePoint // not an integer\n      ) {\n        throw RangeError('Invalid code point: ' + codePoint);\n      }\n      if (codePoint <= 0xFFFF) {\n        // BMP code point\n        codeUnits.push(codePoint);\n      } else {\n        // Astral code point; split in surrogate halves\n        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        codePoint -= 0x10000;\n        highSurrogate = (codePoint >> 10) + 0xD800;\n        lowSurrogate = (codePoint % 0x400) + 0xDC00;\n        codeUnits.push(highSurrogate, lowSurrogate);\n      }\n      if (index + 1 == length || codeUnits.length > MAX_SIZE) {\n        result += stringFromCharCode.apply(null, codeUnits);\n        codeUnits.length = 0;\n      }\n    }\n    return result;\n  }\n\n  function assertType(type, expected) {\n    if (expected.indexOf('|') == -1) {\n      if (type == expected) {\n        return;\n      }\n\n      throw Error('Invalid node type: ' + type);\n    }\n\n    expected = assertType.hasOwnProperty(expected)\n      ? assertType[expected]\n      : (assertType[expected] = RegExp('^(?:' + expected + ')$'));\n\n    if (expected.test(type)) {\n      return;\n    }\n\n    throw Error('Invalid node type: ' + type);\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  function generate(node) {\n    var type = node.type;\n\n    if (generate.hasOwnProperty(type) && typeof generate[type] == 'function') {\n      return generate[type](node);\n    }\n\n    throw Error('Invalid node type: ' + type);\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  function generateAlternative(node) {\n    assertType(node.type, 'alternative');\n\n    var terms = node.body,\n        length = terms ? terms.length : 0;\n\n    if (length == 1) {\n      return generateTerm(terms[0]);\n    } else {\n      var i = -1,\n          result = '';\n\n      while (++i < length) {\n        result += generateTerm(terms[i]);\n      }\n\n      return result;\n    }\n  }\n\n  function generateAnchor(node) {\n    assertType(node.type, 'anchor');\n\n    switch (node.kind) {\n      case 'start':\n        return '^';\n      case 'end':\n        return '$';\n      case 'boundary':\n        return '\\\\b';\n      case 'not-boundary':\n        return '\\\\B';\n      default:\n        throw Error('Invalid assertion');\n    }\n  }\n\n  function generateAtom(node) {\n    assertType(node.type, 'anchor|characterClass|characterClassEscape|dot|group|reference|value');\n\n    return generate(node);\n  }\n\n  function generateCharacterClass(node) {\n    assertType(node.type, 'characterClass');\n\n    var classRanges = node.body,\n        length = classRanges ? classRanges.length : 0;\n\n    var i = -1,\n        result = '[';\n\n    if (node.negative) {\n      result += '^';\n    }\n\n    while (++i < length) {\n      result += generateClassAtom(classRanges[i]);\n    }\n\n    result += ']';\n\n    return result;\n  }\n\n  function generateCharacterClassEscape(node) {\n    assertType(node.type, 'characterClassEscape');\n\n    return '\\\\' + node.value;\n  }\n\n  function generateCharacterClassRange(node) {\n    assertType(node.type, 'characterClassRange');\n\n    var min = node.min,\n        max = node.max;\n\n    if (min.type == 'characterClassRange' || max.type == 'characterClassRange') {\n      throw Error('Invalid character class range');\n    }\n\n    return generateClassAtom(min) + '-' + generateClassAtom(max);\n  }\n\n  function generateClassAtom(node) {\n    assertType(node.type, 'anchor|characterClassEscape|characterClassRange|dot|value');\n\n    return generate(node);\n  }\n\n  function generateDisjunction(node) {\n    assertType(node.type, 'disjunction');\n\n    var body = node.body,\n        length = body ? body.length : 0;\n\n    if (length == 0) {\n      throw Error('No body');\n    } else if (length == 1) {\n      return generate(body[0]);\n    } else {\n      var i = -1,\n          result = '';\n\n      while (++i < length) {\n        if (i != 0) {\n          result += '|';\n        }\n        result += generate(body[i]);\n      }\n\n      return result;\n    }\n  }\n\n  function generateDot(node) {\n    assertType(node.type, 'dot');\n\n    return '.';\n  }\n\n  function generateGroup(node) {\n    assertType(node.type, 'group');\n\n    var result = '(';\n\n    switch (node.behavior) {\n      case 'normal':\n        break;\n      case 'ignore':\n        result += '?:';\n        break;\n      case 'lookahead':\n        result += '?=';\n        break;\n      case 'negativeLookahead':\n        result += '?!';\n        break;\n      default:\n        throw Error('Invalid behaviour: ' + node.behaviour);\n    }\n\n    var body = node.body,\n        length = body ? body.length : 0;\n\n    if (length == 1) {\n      result += generate(body[0]);\n    } else {\n      var i = -1;\n\n      while (++i < length) {\n        result += generate(body[i]);\n      }\n    }\n\n    result += ')';\n\n    return result;\n  }\n\n  function generateQuantifier(node) {\n    assertType(node.type, 'quantifier');\n\n    var quantifier = '',\n        min = node.min,\n        max = node.max;\n\n    switch (max) {\n      case undefined:\n      case null:\n        switch (min) {\n          case 0:\n            quantifier = '*'\n            break;\n          case 1:\n            quantifier = '+';\n            break;\n          default:\n            quantifier = '{' + min + ',}';\n            break;\n        }\n        break;\n      default:\n        if (min == max) {\n          quantifier = '{' + min + '}';\n        }\n        else if (min == 0 && max == 1) {\n          quantifier = '?';\n        } else {\n          quantifier = '{' + min + ',' + max + '}';\n        }\n        break;\n    }\n\n    if (!node.greedy) {\n      quantifier += '?';\n    }\n\n    return generateAtom(node.body[0]) + quantifier;\n  }\n\n  function generateReference(node) {\n    assertType(node.type, 'reference');\n\n    return '\\\\' + node.matchIndex;\n  }\n\n  function generateTerm(node) {\n    assertType(node.type, 'anchor|characterClass|characterClassEscape|empty|group|quantifier|reference|value');\n\n    return generate(node);\n  }\n\n  function generateValue(node) {\n    assertType(node.type, 'value');\n\n    var kind = node.kind,\n        codePoint = node.codePoint;\n\n    switch (kind) {\n      case 'controlLetter':\n        return '\\\\c' + fromCodePoint(codePoint + 64);\n      case 'hexadecimalEscape':\n        return '\\\\x' + ('00' + codePoint.toString(16).toUpperCase()).slice(-2);\n      case 'identifier':\n        return '\\\\' + fromCodePoint(codePoint);\n      case 'null':\n        return '\\\\' + codePoint;\n      case 'octal':\n        return '\\\\' + codePoint.toString(8);\n      case 'singleEscape':\n        switch (codePoint) {\n          case 0x0008:\n            return '\\\\b';\n          case 0x009:\n            return '\\\\t';\n          case 0x00A:\n            return '\\\\n';\n          case 0x00B:\n            return '\\\\v';\n          case 0x00C:\n            return '\\\\f';\n          case 0x00D:\n            return '\\\\r';\n          default:\n            throw Error('Invalid codepoint: ' + codePoint);\n        }\n      case 'symbol':\n        return fromCodePoint(codePoint);\n      case 'unicodeEscape':\n        return '\\\\u' + ('0000' + codePoint.toString(16).toUpperCase()).slice(-4);\n      case 'unicodeCodePointEscape':\n        return '\\\\u{' + codePoint.toString(16).toUpperCase() + '}';\n      default:\n        throw Error('Unsupported node kind: ' + kind);\n    }\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  generate.alternative = generateAlternative;\n  generate.anchor = generateAnchor;\n  generate.characterClass = generateCharacterClass;\n  generate.characterClassEscape = generateCharacterClassEscape;\n  generate.characterClassRange = generateCharacterClassRange;\n  generate.disjunction = generateDisjunction;\n  generate.dot = generateDot;\n  generate.group = generateGroup;\n  generate.quantifier = generateQuantifier;\n  generate.reference = generateReference;\n  generate.value = generateValue;\n\n  /*--------------------------------------------------------------------------*/\n\n  // export regjsgen\n  // some AMD build optimizers, like r.js, check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // define as an anonymous module so, through path mapping, it can be aliased\n    define(function() {\n      return {\n        'generate': generate\n      };\n    });\n  }\n  // check for `exports` after `define` in case a build optimizer adds an `exports` object\n  else if (freeExports && freeModule) {\n    // in Narwhal, Node.js, Rhino -require, or RingoJS\n    freeExports.generate = generate;\n  }\n  // in a browser or Rhino\n  else {\n    root.regjsgen = {\n      'generate': generate\n    };\n  }\n}.call(this));\n","var generate = require('regjsgen').generate;\nvar parse = require('regjsparser').parse;\nvar regenerate = require('regenerate');\nvar iuMappings = require('./data/iu-mappings.json');\nvar ESCAPE_SETS = require('./data/character-class-escape-sets.js');\n\nfunction getCharacterClassEscapeSet(character) {\n\tif (unicode) {\n\t\tif (ignoreCase) {\n\t\t\treturn ESCAPE_SETS.UNICODE_IGNORE_CASE[character];\n\t\t}\n\t\treturn ESCAPE_SETS.UNICODE[character];\n\t}\n\treturn ESCAPE_SETS.REGULAR[character];\n}\n\nvar object = {};\nvar hasOwnProperty = object.hasOwnProperty;\nfunction has(object, property) {\n\treturn hasOwnProperty.call(object, property);\n}\n\n// Prepare a Regenerate set containing all code points, used for negative\n// character classes (if any).\nvar UNICODE_SET = regenerate().addRange(0x0, 0x10FFFF);\n// Without the `u` flag, the range stops at 0xFFFF.\n// https://mths.be/es6#sec-pattern-semantics\nvar BMP_SET = regenerate().addRange(0x0, 0xFFFF);\n\n// Prepare a Regenerate set containing all code points that are supposed to be\n// matched by `/./u`. https://mths.be/es6#sec-atom\nvar DOT_SET_UNICODE = UNICODE_SET.clone() // all Unicode code points\n\t.remove(\n\t\t// minus `LineTerminator`s (https://mths.be/es6#sec-line-terminators):\n\t\t0x000A, // Line Feed <LF>\n\t\t0x000D, // Carriage Return <CR>\n\t\t0x2028, // Line Separator <LS>\n\t\t0x2029  // Paragraph Separator <PS>\n\t);\n// Prepare a Regenerate set containing all code points that are supposed to be\n// matched by `/./` (only BMP code points).\nvar DOT_SET = DOT_SET_UNICODE.clone()\n\t.intersection(BMP_SET);\n\n// Add a range of code points + any case-folded code points in that range to a\n// set.\nregenerate.prototype.iuAddRange = function(min, max) {\n\tvar $this = this;\n\tdo {\n\t\tvar folded = caseFold(min);\n\t\tif (folded) {\n\t\t\t$this.add(folded);\n\t\t}\n\t} while (++min <= max);\n\treturn $this;\n};\n\nfunction assign(target, source) {\n\tfor (var key in source) {\n\t\t// Note: `hasOwnProperty` is not needed here.\n\t\ttarget[key] = source[key];\n\t}\n}\n\nfunction update(item, pattern) {\n\t// TODO: Test if memoizing `pattern` here is worth the effort.\n\tif (!pattern) {\n\t\treturn;\n\t}\n\tvar tree = parse(pattern, '');\n\tswitch (tree.type) {\n\t\tcase 'characterClass':\n\t\tcase 'group':\n\t\tcase 'value':\n\t\t\t// No wrapping needed.\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t// Wrap the pattern in a non-capturing group.\n\t\t\ttree = wrap(tree, pattern);\n\t}\n\tassign(item, tree);\n}\n\nfunction wrap(tree, pattern) {\n\t// Wrap the pattern in a non-capturing group.\n\treturn {\n\t\t'type': 'group',\n\t\t'behavior': 'ignore',\n\t\t'body': [tree],\n\t\t'raw': '(?:' + pattern + ')'\n\t};\n}\n\nfunction caseFold(codePoint) {\n\treturn has(iuMappings, codePoint) ? iuMappings[codePoint] : false;\n}\n\nvar ignoreCase = false;\nvar unicode = false;\nfunction processCharacterClass(characterClassItem) {\n\tvar set = regenerate();\n\tvar body = characterClassItem.body.forEach(function(item) {\n\t\tswitch (item.type) {\n\t\t\tcase 'value':\n\t\t\t\tset.add(item.codePoint);\n\t\t\t\tif (ignoreCase && unicode) {\n\t\t\t\t\tvar folded = caseFold(item.codePoint);\n\t\t\t\t\tif (folded) {\n\t\t\t\t\t\tset.add(folded);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'characterClassRange':\n\t\t\t\tvar min = item.min.codePoint;\n\t\t\t\tvar max = item.max.codePoint;\n\t\t\t\tset.addRange(min, max);\n\t\t\t\tif (ignoreCase && unicode) {\n\t\t\t\t\tset.iuAddRange(min, max);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'characterClassEscape':\n\t\t\t\tset.add(getCharacterClassEscapeSet(item.value));\n\t\t\t\tbreak;\n\t\t\t// The `default` clause is only here as a safeguard; it should never be\n\t\t\t// reached. Code coverage tools should ignore it.\n\t\t\t/* istanbul ignore next */\n\t\t\tdefault:\n\t\t\t\tthrow Error('Unknown term type: ' + item.type);\n\t\t}\n\t});\n\tif (characterClassItem.negative) {\n\t\tset = (unicode ? UNICODE_SET : BMP_SET).clone().remove(set);\n\t}\n\tupdate(characterClassItem, set.toString());\n\treturn characterClassItem;\n}\n\nfunction processTerm(item) {\n\tswitch (item.type) {\n\t\tcase 'dot':\n\t\t\tupdate(\n\t\t\t\titem,\n\t\t\t\t(unicode ? DOT_SET_UNICODE : DOT_SET).toString()\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'characterClass':\n\t\t\titem = processCharacterClass(item);\n\t\t\tbreak;\n\t\tcase 'characterClassEscape':\n\t\t\tupdate(\n\t\t\t\titem,\n\t\t\t\tgetCharacterClassEscapeSet(item.value).toString()\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'alternative':\n\t\tcase 'disjunction':\n\t\tcase 'group':\n\t\tcase 'quantifier':\n\t\t\titem.body = item.body.map(processTerm);\n\t\t\tbreak;\n\t\tcase 'value':\n\t\t\tvar codePoint = item.codePoint;\n\t\t\tvar set = regenerate(codePoint);\n\t\t\tif (ignoreCase && unicode) {\n\t\t\t\tvar folded = caseFold(codePoint);\n\t\t\t\tif (folded) {\n\t\t\t\t\tset.add(folded);\n\t\t\t\t}\n\t\t\t}\n\t\t\tupdate(item, set.toString());\n\t\t\tbreak;\n\t\tcase 'anchor':\n\t\tcase 'empty':\n\t\tcase 'group':\n\t\tcase 'reference':\n\t\t\t// Nothing to do here.\n\t\t\tbreak;\n\t\t// The `default` clause is only here as a safeguard; it should never be\n\t\t// reached. Code coverage tools should ignore it.\n\t\t/* istanbul ignore next */\n\t\tdefault:\n\t\t\tthrow Error('Unknown term type: ' + item.type);\n\t}\n\treturn item;\n};\n\nmodule.exports = function(pattern, flags) {\n\tvar tree = parse(pattern, flags);\n\tignoreCase = flags ? flags.indexOf('i') > -1 : false;\n\tunicode = flags ? flags.indexOf('u') > -1 : false;\n\tassign(tree, processTerm(tree));\n\treturn generate(tree);\n};\n","import Node from '../Node.js';\r\nimport CompileError from '../../utils/CompileError.js';\r\nimport rewritePattern from 'regexpu-core';\r\n\r\nexport default class Literal extends Node {\r\n\tinitialise () {\r\n\t\tif ( typeof this.value === 'string' ) {\r\n\t\t\tthis.program.indentExclusionElements.push( this );\r\n\t\t}\r\n\t}\r\n\r\n\ttranspile ( code, transforms ) {\r\n\t\tif ( transforms.numericLiteral ) {\r\n\t\t\tconst leading = this.raw.slice( 0, 2 );\r\n\t\t\tif ( leading === '0b' || leading === '0o' ) {\r\n\t\t\t\tcode.overwrite( this.start, this.end, String( this.value ), true );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( this.regex ) {\r\n\t\t\tconst { pattern, flags } = this.regex;\r\n\r\n\t\t\tif ( transforms.stickyRegExp && /y/.test( flags ) ) throw new CompileError( this, 'Regular expression sticky flag is not supported' );\r\n\t\t\tif ( transforms.unicodeRegExp && /u/.test( flags ) ) {\r\n\t\t\t\tcode.overwrite( this.start, this.end, `/${rewritePattern( pattern, flags )}/${flags.replace( 'u', '' )}` );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\nimport reserved from '../../utils/reserved.js';\r\n\r\nexport default class MemberExpression extends Node {\r\n\ttranspile ( code, transforms ) {\r\n\t\tif ( transforms.reservedProperties && reserved[ this.property.name ] ) {\r\n\t\t\tcode.overwrite( this.object.end, this.property.start, `['` );\r\n\t\t\tcode.insertLeft( this.property.end, `']` );\r\n\t\t}\r\n\r\n\t\tsuper.transpile( code, transforms );\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\nimport spread, { isArguments } from '../../utils/spread.js';\r\n\r\nexport default class NewExpression extends Node {\r\n\tinitialise ( transforms ) {\r\n\t\tif ( transforms.spreadRest && this.arguments.length ) {\r\n\t\t\tconst lexicalBoundary = this.findLexicalBoundary();\r\n\r\n\t\t\tlet i = this.arguments.length;\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tconst arg = this.arguments[i];\r\n\t\t\t\tif ( arg.type === 'SpreadElement' && isArguments( arg.argument ) ) {\r\n\t\t\t\t\tthis.argumentsArrayAlias = lexicalBoundary.getArgumentsArrayAlias();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.initialise( transforms );\r\n\t}\r\n\r\n\ttranspile ( code, transforms ) {\r\n\t\tif ( transforms.spreadRest && this.arguments.length ) {\r\n\t\t\tconst firstArgument = this.arguments[0];\r\n\t\t\tconst isNew = true;\r\n\t\t\tlet hasSpreadElements = spread( code, this.arguments, firstArgument.start, this.argumentsArrayAlias, isNew );\r\n\r\n\t\t\tif ( hasSpreadElements ) {\r\n\t\t\t\tcode.insertRight( this.start + 'new'.length, ' (Function.prototype.bind.apply(' );\r\n\t\t\t\tcode.overwrite( this.callee.end, firstArgument.start, ', [ null ].concat( ' );\r\n\t\t\t\tcode.insertLeft( this.end, ' ))' );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.transpile( code, transforms );\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\nimport CompileError from '../../utils/CompileError.js';\r\n\r\nexport default class ObjectExpression extends Node {\r\n\ttranspile ( code, transforms ) {\r\n\t\tsuper.transpile( code, transforms );\r\n\r\n\t\tlet firstPropertyStart = this.start + 1;\r\n\t\tlet regularPropertyCount = 0;\r\n\t\tlet spreadPropertyCount = 0;\r\n\t\tlet computedPropertyCount = 0;\r\n\r\n\t\tfor ( let prop of this.properties ) {\r\n\t\t\tif ( prop.type === 'SpreadProperty' ) {\r\n\t\t\t\tspreadPropertyCount += 1;\r\n\t\t\t} else if ( prop.computed ) {\r\n\t\t\t\tcomputedPropertyCount += 1;\r\n\t\t\t} else if ( prop.type === 'Property' ) {\r\n\t\t\t\tregularPropertyCount += 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( spreadPropertyCount ) {\r\n\t\t\tif ( !this.program.options.objectAssign ) {\r\n\t\t\t\tthrow new CompileError( this, 'Object spread operator requires specified objectAssign option with \\'Object.assign\\' or polyfill helper.' );\r\n\t\t\t}\r\n\t\t\t// enclose run of non-spread properties in curlies\r\n\t\t\tlet i = this.properties.length;\r\n\t\t\tif ( regularPropertyCount ) {\r\n\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\tconst prop = this.properties[i];\r\n\r\n\t\t\t\t\tif ( prop.type === 'Property' && !prop.computed ) {\r\n\t\t\t\t\t\tconst lastProp = this.properties[ i - 1 ];\r\n\t\t\t\t\t\tconst nextProp = this.properties[ i + 1 ];\r\n\r\n\t\t\t\t\t\tif ( !lastProp || lastProp.type !== 'Property' || lastProp.computed ) {\r\n\t\t\t\t\t\t\tcode.insertRight( prop.start, '{' );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( !nextProp || nextProp.type !== 'Property' || nextProp.computed ) {\r\n\t\t\t\t\t\t\tcode.insertLeft( prop.end, '}' );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// wrap the whole thing in Object.assign\r\n\t\t\tfirstPropertyStart = this.properties[0].start;\r\n\t\t\tcode.overwrite( this.start, firstPropertyStart, `${this.program.options.objectAssign}({}, `);\r\n\t\t\tcode.overwrite( this.properties[ this.properties.length - 1 ].end, this.end, ')' );\r\n\t\t}\r\n\r\n\t\tif ( computedPropertyCount && transforms.computedProperty ) {\r\n\t\t\tconst i0 = this.getIndentation();\r\n\r\n\t\t\tlet isSimpleAssignment;\r\n\t\t\tlet name;\r\n\r\n\t\t\tif ( this.parent.type === 'VariableDeclarator' && this.parent.parent.declarations.length === 1 ) {\r\n\t\t\t\tisSimpleAssignment = true;\r\n\t\t\t\tname = this.parent.id.alias || this.parent.id.name; // TODO is this right?\r\n\t\t\t} else if ( this.parent.type === 'AssignmentExpression' && this.parent.parent.type === 'ExpressionStatement' && this.parent.left.type === 'Identifier' ) {\r\n\t\t\t\tisSimpleAssignment = true;\r\n\t\t\t\tname = this.parent.left.alias || this.parent.left.name; // TODO is this right?\r\n\t\t\t} else if ( this.parent.type === 'AssignmentPattern' && this.parent.left.type === 'Identifier' ) {\r\n\t\t\t\tisSimpleAssignment = true;\r\n\t\t\t\tname = this.parent.left.alias || this.parent.left.name; // TODO is this right?\r\n\t\t\t}\r\n\r\n\t\t\t// handle block scoping\r\n\t\t\tconst declaration = this.findScope( false ).findDeclaration( name );\r\n\t\t\tif ( declaration ) name = declaration.name;\r\n\r\n\t\t\tconst start = firstPropertyStart;\r\n\t\t\tconst end = this.end;\r\n\r\n\t\t\tif ( isSimpleAssignment ) {\r\n\t\t\t\t// ???\r\n\t\t\t} else {\r\n\t\t\t\tname = this.findScope( true ).createIdentifier( 'obj' );\r\n\r\n\t\t\t\tconst statement = this.findNearest( /(?:Statement|Declaration)$/ );\r\n\t\t\t\tcode.insertLeft( statement.end, `\\n${i0}var ${name};` );\r\n\r\n\t\t\t\tcode.insertRight( this.start, `( ${name} = ` );\r\n\t\t\t}\r\n\r\n\t\t\tconst len = this.properties.length;\r\n\t\t\tlet lastComputedProp;\r\n\t\t\tlet sawNonComputedProperty = false;\r\n\r\n\t\t\tfor ( let i = 0; i < len; i += 1 ) {\r\n\t\t\t\tconst prop = this.properties[i];\r\n\r\n\t\t\t\tif ( prop.computed ) {\r\n\t\t\t\t\tlastComputedProp = prop;\r\n\t\t\t\t\tlet moveStart = i > 0 ? this.properties[ i - 1 ].end : start;\r\n\r\n\t\t\t\t\tconst propId = isSimpleAssignment ? `;\\n${i0}${name}` : `, ${name}`;\r\n\r\n\t\t\t\t\tif (moveStart < prop.start) {\r\n\t\t\t\t\t\tcode.overwrite( moveStart, prop.start, propId );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcode.insertRight( prop.start, propId );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet c = prop.key.end;\r\n\t\t\t\t\twhile ( code.original[c] !== ']' ) c += 1;\r\n\t\t\t\t\tc += 1;\r\n\r\n\t\t\t\t\tif ( prop.value.start > c ) code.remove( c, prop.value.start );\r\n\t\t\t\t\tcode.insertLeft( c, ' = ' );\r\n\t\t\t\t\tcode.move( moveStart, prop.end, end );\r\n\r\n\t\t\t\t\tif ( i < len - 1 && ! sawNonComputedProperty ) {\r\n\t\t\t\t\t\t// remove trailing comma\r\n\t\t\t\t\t\tc = prop.end;\r\n\t\t\t\t\t\twhile ( code.original[c] !== ',' ) c += 1;\r\n\r\n\t\t\t\t\t\tcode.remove( prop.end, c + 1 );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( prop.method && transforms.conciseMethodProperty ) {\r\n\t\t\t\t\t\tcode.insertRight( prop.value.start, 'function ' );\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsawNonComputedProperty = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// special case\r\n\t\t\tif ( computedPropertyCount === len ) {\r\n\t\t\t\tcode.remove( this.properties[ len - 1 ].end, this.end - 1 );\r\n\t\t\t}\r\n\r\n\t\t\tif ( !isSimpleAssignment ) {\r\n\t\t\t\tcode.insertLeft( lastComputedProp.end, `, ${name} )` );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\nimport reserved from '../../utils/reserved.js';\r\n\r\nexport default class Property extends Node {\r\n\ttranspile ( code, transforms ) {\r\n\t\tif ( transforms.conciseMethodProperty && !this.computed && this.parent.type !== 'ObjectPattern' ) {\r\n\t\t\tif ( this.shorthand ) {\r\n\t\t\t\tcode.insertRight( this.start, `${this.key.name}: ` );\r\n\t\t\t} else if ( this.method ) {\r\n\t\t\t\tlet name = '';\r\n\t\t\t\tif ( this.program.options.namedFunctionExpressions !== false ) {\r\n\t\t\t\t\tif ( this.key.type === 'Literal' && typeof this.key.value === 'number' ) {\r\n\t\t\t\t\t\tname = \"\";\r\n\t\t\t\t\t} else if ( this.key.type === 'Identifier' ) {\r\n\t\t\t\t\t\tif ( reserved[ this.key.name ] ||\r\n\t\t\t\t\t\t\t ! /^[a-z_$][a-z0-9_$]*$/i.test( this.key.name ) ||\r\n\t\t\t\t\t\t     this.value.body.scope.references[this.key.name] ) {\r\n\t\t\t\t\t\t\tname = this.findScope( true ).createIdentifier( this.key.name );\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tname = this.key.name;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tname = this.findScope( true ).createIdentifier( this.key.value );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tname = ' ' + name;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( this.value.generator ) code.remove( this.start, this.key.start );\r\n\t\t\t\tcode.insertLeft( this.key.end, `: function${this.value.generator ? '*' : ''}${name}` );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( transforms.reservedProperties && reserved[ this.key.name ] ) {\r\n\t\t\tcode.insertRight( this.key.start, `'` );\r\n\t\t\tcode.insertLeft( this.key.end, `'` );\r\n\t\t}\r\n\r\n\t\tsuper.transpile( code, transforms );\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\nimport { loopStatement } from '../../utils/patterns.js';\r\n\r\nexport default class ReturnStatement extends Node {\r\n\tinitialise ( transforms ) {\r\n\t\tthis.loop = this.findNearest( loopStatement );\r\n\t\tthis.nearestFunction = this.findNearest( /Function/ );\r\n\r\n\t\tif ( this.loop && ( !this.nearestFunction || this.loop.depth > this.nearestFunction.depth ) ) {\r\n\t\t\tthis.loop.canReturn = true;\r\n\t\t\tthis.shouldWrap = true;\r\n\t\t}\r\n\r\n\t\tif ( this.argument ) this.argument.initialise( transforms );\r\n\t}\r\n\r\n\ttranspile ( code, transforms ) {\r\n\t\tconst shouldWrap = this.shouldWrap && this.loop && this.loop.shouldRewriteAsFunction;\r\n\r\n\t\tif ( this.argument ) {\r\n\t\t\tif ( shouldWrap ) code.insertRight( this.argument.start, `{ v: ` );\r\n\t\t\tthis.argument.transpile( code, transforms );\r\n\t\t\tif ( shouldWrap ) code.insertLeft( this.argument.end, ` }` );\r\n\t\t} else if ( shouldWrap ) {\r\n\t\t\tcode.insertLeft( this.start + 6, ' {}' );\r\n\t\t}\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\n\r\nexport default class SpreadProperty extends Node {\r\n\ttranspile ( code, transforms ) {\r\n\t\tcode.remove( this.start, this.argument.start );\r\n\t\tcode.remove( this.argument.end, this.end );\r\n\r\n\t\tsuper.transpile( code, transforms );\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\nimport CompileError from '../../utils/CompileError.js';\r\nimport { loopStatement } from '../../utils/patterns.js';\r\n\r\nexport default class Super extends Node {\r\n\tinitialise ( transforms ) {\r\n\t\tif ( transforms.classes ) {\r\n\t\t\tthis.method = this.findNearest( 'MethodDefinition' );\r\n\t\t\tif ( !this.method ) throw new CompileError( this, 'use of super outside class method' );\r\n\r\n\t\t\tconst parentClass = this.findNearest( 'ClassBody' ).parent;\r\n\t\t\tthis.superClassName = parentClass.superClass && (parentClass.superClass.name || 'superclass');\r\n\r\n\t\t\tif ( !this.superClassName ) throw new CompileError( this, 'super used in base class' );\r\n\r\n\t\t\tthis.isCalled = this.parent.type === 'CallExpression' && this === this.parent.callee;\r\n\r\n\t\t\tif ( this.method.kind !== 'constructor' && this.isCalled ) {\r\n\t\t\t\tthrow new CompileError( this, 'super() not allowed outside class constructor' );\r\n\t\t\t}\r\n\r\n\t\t\tthis.isMember = this.parent.type === 'MemberExpression';\r\n\r\n\t\t\tif ( !this.isCalled && !this.isMember ) {\r\n\t\t\t\tthrow new CompileError( this, 'Unexpected use of `super` (expected `super(...)` or `super.*`)' );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( transforms.arrow ) {\r\n\t\t\tconst lexicalBoundary = this.findLexicalBoundary();\r\n\t\t\tconst arrowFunction = this.findNearest( 'ArrowFunctionExpression' );\r\n\t\t\tconst loop = this.findNearest( loopStatement );\r\n\r\n\t\t\tif ( arrowFunction && arrowFunction.depth > lexicalBoundary.depth ) {\r\n\t\t\t\tthis.thisAlias = lexicalBoundary.getThisAlias();\r\n\t\t\t}\r\n\r\n\t\t\tif ( loop && loop.body.contains( this ) && loop.depth > lexicalBoundary.depth ) {\r\n\t\t\t\tthis.thisAlias = lexicalBoundary.getThisAlias();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttranspile ( code, transforms ) {\r\n\t\tif ( transforms.classes ) {\r\n\t\t\tconst expression = ( this.isCalled || this.method.static ) ?\r\n\t\t\t\tthis.superClassName :\r\n\t\t\t\t`${this.superClassName}.prototype`;\r\n\r\n\t\t\tcode.overwrite( this.start, this.end, expression, true );\r\n\r\n\t\t\tconst callExpression = this.isCalled ? this.parent : this.parent.parent;\r\n\r\n\t\t\tif ( callExpression && callExpression.type === 'CallExpression' ) {\r\n\t\t\t\tif ( !this.noCall ) { // special case – `super( ...args )`\r\n\t\t\t\t\tcode.insertLeft( callExpression.callee.end, '.call' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst thisAlias = this.thisAlias || 'this';\r\n\r\n\t\t\t\tif ( callExpression.arguments.length ) {\r\n\t\t\t\t\tcode.insertLeft( callExpression.arguments[0].start, `${thisAlias}, ` );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcode.insertLeft( callExpression.end - 1, `${thisAlias}` );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\nimport CompileError from '../../utils/CompileError.js';\r\n\r\nexport default class TaggedTemplateExpression extends Node {\r\n\tinitialise ( transforms ) {\r\n\t\tif ( transforms.templateString && !transforms.dangerousTaggedTemplateString ) {\r\n\t\t\tthrow new CompileError( this, 'Tagged template strings are not supported. Use `transforms: { templateString: false }` to skip transformation and disable this error, or `transforms: { dangerousTaggedTemplateString: true }` if you know what you\\'re doing' );\r\n\t\t}\r\n\r\n\t\tsuper.initialise( transforms );\r\n\t}\r\n\r\n\ttranspile ( code, transforms ) {\r\n\t\tif ( transforms.templateString && transforms.dangerousTaggedTemplateString ) {\r\n\t\t\tconst ordered = this.quasi.expressions.concat( this.quasi.quasis ).sort( ( a, b ) => a.start - b.start );\r\n\r\n\t\t\t// insert strings at start\r\n\t\t\tconst templateStrings = this.quasi.quasis.map( quasi => JSON.stringify( quasi.value.cooked ) );\r\n\t\t\tcode.overwrite( this.tag.end, ordered[0].start, `([${templateStrings.join(', ')}]` );\r\n\r\n\t\t\tlet lastIndex = ordered[0].start;\r\n\t\t\tordered.forEach( node => {\r\n\t\t\t\tif ( node.type === 'TemplateElement' ) {\r\n\t\t\t\t\tcode.remove( lastIndex, node.end );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcode.overwrite( lastIndex, node.start, ', ' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlastIndex = node.end;\r\n\t\t\t});\r\n\r\n\t\t\tcode.overwrite( lastIndex, this.end, ')' );\r\n\t\t}\r\n\r\n\t\tsuper.transpile( code, transforms );\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\n\r\nexport default class TemplateElement extends Node {\r\n\tinitialise () {\r\n\t\tthis.program.indentExclusionElements.push( this );\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\n\r\nexport default class TemplateLiteral extends Node {\r\n\ttranspile ( code, transforms ) {\r\n\t\tif ( transforms.templateString && this.parent.type !== 'TaggedTemplateExpression' ) {\r\n\t\t\tlet ordered = this.expressions.concat( this.quasis )\r\n\t\t\t\t.sort( ( a, b ) => a.start - b.start || a.end - b.end )\r\n\t\t\t\t.filter( ( node, i ) => {\r\n\t\t\t\t\t// include all expressions\r\n\t\t\t\t\tif ( node.type !== 'TemplateElement' ) return true;\r\n\r\n\t\t\t\t\t// include all non-empty strings\r\n\t\t\t\t\tif ( node.value.raw ) return true;\r\n\r\n\t\t\t\t\t// exclude all empty strings not at the head\r\n\t\t\t\t\treturn !i;\r\n\t\t\t\t});\r\n\r\n\t\t\t// special case – we may be able to skip the first element,\r\n\t\t\t// if it's the empty string, but only if the second and\r\n\t\t\t// third elements aren't both expressions (since they maybe\r\n\t\t\t// be numeric, and `1 + 2 + '3' === '33'`)\r\n\t\t\tif ( ordered.length >= 3 ) {\r\n\t\t\t\tconst [ first, , third ] = ordered;\r\n\t\t\t\tif ( first.type === 'TemplateElement' && first.value.raw === '' && third.type === 'TemplateElement' ) {\r\n\t\t\t\t\tordered.shift();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst parenthesise = ( this.quasis.length !== 1 || this.expressions.length !== 0 ) &&\r\n\t\t\t                     this.parent.type !== 'AssignmentExpression' &&\r\n\t\t\t                     this.parent.type !== 'AssignmentPattern' &&\r\n\t\t\t                     this.parent.type !== 'VariableDeclarator' &&\r\n\t\t\t                     ( this.parent.type !== 'BinaryExpression' || this.parent.operator !== '+' );\r\n\r\n\t\t\tif ( parenthesise ) code.insertRight( this.start, '(' );\r\n\r\n\t\t\tlet lastIndex = this.start;\r\n\r\n\t\t\tordered.forEach( ( node, i ) => {\r\n\t\t\t\tif ( node.type === 'TemplateElement' ) {\r\n\t\t\t\t\tlet replacement = '';\r\n\t\t\t\t\tif ( i ) replacement += ' + ';\r\n\t\t\t\t\treplacement += JSON.stringify( node.value.cooked );\r\n\r\n\t\t\t\t\tcode.overwrite( lastIndex, node.end, replacement );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst parenthesise = node.type !== 'Identifier'; // TODO other cases where it's safe\r\n\r\n\t\t\t\t\tlet replacement = '';\r\n\t\t\t\t\tif ( i ) replacement += ' + ';\r\n\t\t\t\t\tif ( parenthesise ) replacement += '(';\r\n\r\n\t\t\t\t\tcode.overwrite( lastIndex, node.start, replacement );\r\n\r\n\t\t\t\t\tif ( parenthesise ) code.insertLeft( node.end, ')' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlastIndex = node.end;\r\n\t\t\t});\r\n\r\n\t\t\tlet close = '';\r\n\t\t\tif ( parenthesise ) close += ')';\r\n\r\n\t\t\tcode.overwrite( lastIndex, this.end, close );\r\n\t\t}\r\n\r\n\t\tsuper.transpile( code, transforms );\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\nimport { loopStatement } from '../../utils/patterns.js';\r\n\r\nexport default class ThisExpression extends Node {\r\n\tinitialise ( transforms ) {\r\n\t\tif ( transforms.arrow ) {\r\n\t\t\tconst lexicalBoundary = this.findLexicalBoundary();\r\n\t\t\tconst arrowFunction = this.findNearest( 'ArrowFunctionExpression' );\r\n\t\t\tconst loop = this.findNearest( loopStatement );\r\n\r\n\t\t\tif ( ( arrowFunction && arrowFunction.depth > lexicalBoundary.depth )\r\n\t\t\t|| ( loop && loop.body.contains( this ) && loop.depth > lexicalBoundary.depth )\r\n\t\t\t|| ( loop && loop.right && loop.right.contains( this ) ) ) {\r\n\t\t\t\tthis.alias = lexicalBoundary.getThisAlias();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttranspile ( code ) {\r\n\t\tif ( this.alias ) {\r\n\t\t\tcode.overwrite( this.start, this.end, this.alias, true );\r\n\t\t}\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\nimport CompileError from '../../utils/CompileError.js';\r\n\r\nexport default class UpdateExpression extends Node {\r\n\tinitialise ( transforms ) {\r\n\t\tif ( this.argument.type === 'Identifier' ) {\r\n\t\t\tconst declaration = this.findScope( false ).findDeclaration( this.argument.name );\r\n\t\t\tif ( declaration && declaration.kind === 'const' ) {\r\n\t\t\t\tthrow new CompileError( this, `${this.argument.name} is read-only` );\r\n\t\t\t}\r\n\r\n\t\t\t// special case – https://gitlab.com/Rich-Harris/buble/issues/150\r\n\t\t\tconst statement = declaration && declaration.node.ancestor( 3 );\r\n\t\t\tif ( statement && statement.type === 'ForStatement' && statement.body.contains( this ) ) {\r\n\t\t\t\tstatement.reassigned[ this.argument.name ] = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.initialise( transforms );\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\nimport destructure from '../../utils/destructure.js';\r\nimport { loopStatement } from '../../utils/patterns.js';\r\n\r\nexport default class VariableDeclaration extends Node {\r\n\tinitialise ( transforms ) {\r\n\t\tthis.scope = this.findScope( this.kind === 'var' );\r\n\t\tthis.declarations.forEach( declarator => declarator.initialise( transforms ) );\r\n\t}\r\n\r\n\ttranspile ( code, transforms ) {\r\n\t\tconst i0 = this.getIndentation();\r\n\t\tlet kind = this.kind;\r\n\r\n\t\tif ( transforms.letConst && kind !== 'var' ) {\r\n\t\t\tkind = 'var';\r\n\t\t\tcode.overwrite( this.start, this.start + this.kind.length, kind, true );\r\n\t\t}\r\n\r\n\t\tif ( transforms.destructuring && this.parent.type !== 'ForOfStatement' ) {\r\n\t\t\tlet c = this.start;\r\n\t\t\tlet lastDeclaratorIsPattern;\r\n\r\n\t\t\tthis.declarations.forEach( ( declarator, i ) => {\r\n\t\t\t\tif ( declarator.id.type === 'Identifier' ) {\r\n\t\t\t\t\tif ( i > 0 && this.declarations[ i - 1 ].id.type !== 'Identifier' ) {\r\n\t\t\t\t\t\tcode.overwrite( c, declarator.id.start, `var ` );\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst inline = loopStatement.test( this.parent.type );\r\n\r\n\t\t\t\t\tif ( i === 0 ) {\r\n\t\t\t\t\t\tcode.remove( c, declarator.id.start );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcode.overwrite( c, declarator.id.start, `;\\n${i0}` );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst simple = declarator.init.type === 'Identifier' && !declarator.init.rewritten;\r\n\r\n\t\t\t\t\tconst name = simple ? declarator.init.name : declarator.findScope( true ).createIdentifier( 'ref' );\r\n\r\n\t\t\t\t\tlet c = declarator.start;\r\n\r\n\t\t\t\t\tlet statementGenerators = [];\r\n\r\n\t\t\t\t\tif ( simple ) {\r\n\t\t\t\t\t\tcode.remove( declarator.id.end, declarator.end );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstatementGenerators.push( ( start, prefix, suffix ) => {\r\n\t\t\t\t\t\t\tcode.insertRight( declarator.id.end, `var ${name}` );\r\n\t\t\t\t\t\t\tcode.insertLeft( declarator.init.end, `${suffix}` );\r\n\t\t\t\t\t\t\tcode.move( declarator.id.end, declarator.end, start );\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdestructure( code, declarator.findScope( false ), declarator.id, name, inline, statementGenerators );\r\n\r\n\t\t\t\t\tlet prefix = inline ? 'var ' : '';\r\n\t\t\t\t\tlet suffix = inline ? `, ` : `;\\n${i0}`;\r\n\t\t\t\t\tstatementGenerators.forEach( ( fn, j ) => {\r\n\t\t\t\t\t\tif ( i === this.declarations.length - 1 && j === statementGenerators.length - 1 ) {\r\n\t\t\t\t\t\t\tsuffix = inline ? '' : ';';\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfn( declarator.start, j === 0 ? prefix : '', suffix );\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdeclarator.transpile( code, transforms );\r\n\r\n\t\t\t\tc = declarator.end;\r\n\t\t\t\tlastDeclaratorIsPattern = declarator.id.type !== 'Identifier';\r\n\t\t\t});\r\n\r\n\t\t\tif ( lastDeclaratorIsPattern ) {\r\n\t\t\t\tcode.remove( c, this.end );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\tthis.declarations.forEach( declarator => {\r\n\t\t\t\tdeclarator.transpile( code, transforms );\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n","import Node from '../Node.js';\r\n\r\nexport default class VariableDeclarator extends Node {\r\n\tinitialise ( transforms ) {\r\n\t\tlet kind = this.parent.kind;\r\n\t\tif ( kind === 'let' && this.parent.parent.type === 'ForStatement' ) {\r\n\t\t\tkind = 'for.let'; // special case...\r\n\t\t}\r\n\r\n\t\tthis.parent.scope.addDeclaration( this.id, kind );\r\n\t\tsuper.initialise( transforms );\r\n\t}\r\n\r\n\ttranspile ( code, transforms ) {\r\n\t\tif ( !this.init && transforms.letConst && this.parent.kind !== 'var' ) {\r\n\t\t\tlet inLoop = this.findNearest( /Function|^For(In|Of)?Statement|^(?:Do)?WhileStatement/ );\r\n\t\t\tif ( inLoop && ! /Function/.test( inLoop.type ) && ! this.isLeftDeclaratorOfLoop() ) {\r\n\t\t\t\tcode.insertLeft( this.id.end, ' = (void 0)' );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( this.id ) this.id.transpile( code, transforms );\r\n\t\tif ( this.init ) this.init.transpile( code, transforms );\r\n\t}\r\n\r\n\tisLeftDeclaratorOfLoop () {\r\n\t\treturn this.parent\r\n\t\t\t&& this.parent.type === 'VariableDeclaration'\r\n\t\t\t&& this.parent.parent\r\n\t\t\t&& (this.parent.parent.type === 'ForInStatement'\r\n\t\t\t\t|| this.parent.parent.type === 'ForOfStatement')\r\n\t\t\t&& this.parent.parent.left\r\n\t\t\t&& this.parent.parent.left.declarations[0] === this;\r\n\t}\r\n}\r\n","import ArrayExpression from './ArrayExpression.js';\r\nimport ArrowFunctionExpression from './ArrowFunctionExpression.js';\r\nimport AssignmentExpression from './AssignmentExpression.js';\r\nimport BinaryExpression from './BinaryExpression.js';\r\nimport BreakStatement from './BreakStatement.js';\r\nimport CallExpression from './CallExpression.js';\r\nimport ClassBody from './ClassBody.js';\r\nimport ClassDeclaration from './ClassDeclaration.js';\r\nimport ClassExpression from './ClassExpression.js';\r\nimport ContinueStatement from './ContinueStatement.js';\r\nimport ExportDefaultDeclaration from './ExportDefaultDeclaration.js';\r\nimport ExportNamedDeclaration from './ExportNamedDeclaration.js';\r\nimport ForStatement from './ForStatement.js';\r\nimport ForInStatement from './ForInStatement.js';\r\nimport ForOfStatement from './ForOfStatement.js';\r\nimport FunctionDeclaration from './FunctionDeclaration.js';\r\nimport FunctionExpression from './FunctionExpression.js';\r\nimport Identifier from './Identifier.js';\r\nimport IfStatement from './IfStatement.js';\r\nimport ImportDeclaration from './ImportDeclaration.js';\r\nimport ImportDefaultSpecifier from './ImportDefaultSpecifier.js';\r\nimport ImportSpecifier from './ImportSpecifier.js';\r\nimport JSXAttribute from './JSXAttribute.js';\r\nimport JSXClosingElement from './JSXClosingElement.js';\r\nimport JSXElement from './JSXElement.js';\r\nimport JSXExpressionContainer from './JSXExpressionContainer.js';\r\nimport JSXOpeningElement from './JSXOpeningElement.js';\r\nimport JSXSpreadAttribute from './JSXSpreadAttribute.js';\r\nimport Literal from './Literal.js';\r\nimport LoopStatement from './shared/LoopStatement.js';\r\nimport MemberExpression from './MemberExpression.js';\r\nimport NewExpression from './NewExpression.js';\r\nimport ObjectExpression from './ObjectExpression.js';\r\nimport Property from './Property.js';\r\nimport ReturnStatement from './ReturnStatement.js';\r\nimport SpreadProperty from './SpreadProperty.js';\r\nimport Super from './Super.js';\r\nimport TaggedTemplateExpression from './TaggedTemplateExpression.js';\r\nimport TemplateElement from './TemplateElement.js';\r\nimport TemplateLiteral from './TemplateLiteral.js';\r\nimport ThisExpression from './ThisExpression.js';\r\nimport UpdateExpression from './UpdateExpression.js';\r\nimport VariableDeclaration from './VariableDeclaration.js';\r\nimport VariableDeclarator from './VariableDeclarator.js';\r\n\r\nexport default {\r\n\tArrayExpression,\r\n\tArrowFunctionExpression,\r\n\tAssignmentExpression,\r\n\tBinaryExpression,\r\n\tBreakStatement,\r\n\tCallExpression,\r\n\tClassBody,\r\n\tClassDeclaration,\r\n\tClassExpression,\r\n\tContinueStatement,\r\n\tDoWhileStatement: LoopStatement,\r\n\tExportNamedDeclaration,\r\n\tExportDefaultDeclaration,\r\n\tForStatement,\r\n\tForInStatement,\r\n\tForOfStatement,\r\n\tFunctionDeclaration,\r\n\tFunctionExpression,\r\n\tIdentifier,\r\n\tIfStatement,\r\n\tImportDeclaration,\r\n\tImportDefaultSpecifier,\r\n\tImportSpecifier,\r\n\tJSXAttribute,\r\n\tJSXClosingElement,\r\n\tJSXElement,\r\n\tJSXExpressionContainer,\r\n\tJSXOpeningElement,\r\n\tJSXSpreadAttribute,\r\n\tLiteral,\r\n\tMemberExpression,\r\n\tNewExpression,\r\n\tObjectExpression,\r\n\tProperty,\r\n\tReturnStatement,\r\n\tSpreadProperty,\r\n\tSuper,\r\n\tTaggedTemplateExpression,\r\n\tTemplateElement,\r\n\tTemplateLiteral,\r\n\tThisExpression,\r\n\tUpdateExpression,\r\n\tVariableDeclaration,\r\n\tVariableDeclarator,\r\n\tWhileStatement: LoopStatement\r\n};\r\n","import types from './types/index.js';\r\nimport BlockStatement from './BlockStatement.js';\r\nimport Node from './Node.js';\r\nimport keys from './keys.js';\r\n\r\nconst statementsWithBlocks = {\r\n\tIfStatement: 'consequent',\r\n\tForStatement: 'body',\r\n\tForInStatement: 'body',\r\n\tForOfStatement: 'body',\r\n\tWhileStatement: 'body',\r\n\tDoWhileStatement: 'body',\r\n\tArrowFunctionExpression: 'body'\r\n};\r\n\r\nexport default function wrap ( raw, parent ) {\r\n\tif ( !raw ) return;\r\n\r\n\tif ( 'length' in raw ) {\r\n\t\tlet i = raw.length;\r\n\t\twhile ( i-- ) wrap( raw[i], parent );\r\n\t\treturn;\r\n\t}\r\n\r\n\t// with e.g. shorthand properties, key and value are\r\n\t// the same node. We don't want to wrap an object twice\r\n\tif ( raw.__wrapped ) return;\r\n\traw.__wrapped = true;\r\n\r\n\tif ( !keys[ raw.type ] ) {\r\n\t\tkeys[ raw.type ] = Object.keys( raw ).filter( key => typeof raw[ key ] === 'object' );\r\n\t}\r\n\r\n\t// special case – body-less if/for/while statements. TODO others?\r\n\tconst bodyType = statementsWithBlocks[ raw.type ];\r\n\tif ( bodyType && raw[ bodyType ].type !== 'BlockStatement' ) {\r\n\t\tconst expression = raw[ bodyType ];\r\n\r\n\t\t// create a synthetic block statement, otherwise all hell\r\n\t\t// breaks loose when it comes to block scoping\r\n\t\traw[ bodyType ] = {\r\n\t\t\tstart: expression.start,\r\n\t\t\tend: expression.end,\r\n\t\t\ttype: 'BlockStatement',\r\n\t\t\tbody: [ expression ],\r\n\t\t\tsynthetic: true\r\n\t\t};\r\n\t}\r\n\r\n\tnew Node( raw, parent );\r\n\r\n\tconst type = ( raw.type === 'BlockStatement' ? BlockStatement : types[ raw.type ] ) || Node;\r\n\traw.__proto__ = type.prototype;\r\n}\r\n","import extractNames from './extractNames.js';\r\nimport reserved from '../utils/reserved.js';\r\nimport CompileError from '../utils/CompileError.js';\r\n\r\nconst letConst = /^(?:let|const)$/;\r\n\r\nexport default function Scope ( options ) {\r\n\toptions = options || {};\r\n\r\n\tthis.parent = options.parent;\r\n\tthis.isBlockScope = !!options.block;\r\n\r\n\tlet scope = this;\r\n\twhile ( scope.isBlockScope ) scope = scope.parent;\r\n\tthis.functionScope = scope;\r\n\r\n\tthis.identifiers = [];\r\n\tthis.declarations = Object.create( null );\r\n\tthis.references = Object.create( null );\r\n\tthis.blockScopedDeclarations = this.isBlockScope ? null : Object.create( null );\r\n\tthis.aliases = this.isBlockScope ? null : Object.create( null );\r\n}\r\n\r\nScope.prototype = {\r\n\taddDeclaration ( node, kind ) {\r\n\t\tfor ( const identifier of extractNames( node ) ) {\r\n\t\t\tconst name = identifier.name;\r\n\t\t\tconst existingDeclaration = this.declarations[ name ];\r\n\t\t\tif ( existingDeclaration && ( letConst.test( kind ) || letConst.test( existingDeclaration.kind ) ) ) {\r\n\t\t\t\t// TODO warn about double var declarations?\r\n\t\t\t\tthrow new CompileError( identifier, `${name} is already declared` );\r\n\t\t\t}\r\n\r\n\t\t\tconst declaration = { name, node: identifier, kind, instances: [] };\r\n\t\t\tthis.declarations[ name ] = declaration;\r\n\r\n\t\t\tif ( this.isBlockScope ) {\r\n\t\t\t\tif ( !this.functionScope.blockScopedDeclarations[ name ] ) this.functionScope.blockScopedDeclarations[ name ] = [];\r\n\t\t\t\tthis.functionScope.blockScopedDeclarations[ name ].push( declaration );\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\taddReference ( identifier ) {\r\n\t\tif ( this.consolidated ) {\r\n\t\t\tthis.consolidateReference( identifier );\r\n\t\t} else {\r\n\t\t\tthis.identifiers.push( identifier );\r\n\t\t}\r\n\t},\r\n\r\n\tconsolidate () {\r\n\t\tfor ( let i = 0; i < this.identifiers.length; i += 1 ) { // we might push to the array during consolidation, so don't cache length\r\n\t\t\tconst identifier = this.identifiers[i];\r\n\t\t\tthis.consolidateReference( identifier );\r\n\t\t}\r\n\r\n\t\tthis.consolidated = true; // TODO understand why this is necessary... seems bad\r\n\t},\r\n\r\n\tconsolidateReference ( identifier ) {\r\n\t\tconst declaration = this.declarations[ identifier.name ];\r\n\t\tif ( declaration ) {\r\n\t\t\tdeclaration.instances.push( identifier );\r\n\t\t} else {\r\n\t\t\tthis.references[ identifier.name ] = true;\r\n\t\t\tif ( this.parent ) this.parent.addReference( identifier );\r\n\t\t}\r\n\t},\r\n\r\n\tcontains ( name ) {\r\n\t\treturn this.declarations[ name ] ||\r\n\t\t       ( this.parent ? this.parent.contains( name ) : false );\r\n\t},\r\n\r\n\tcreateIdentifier ( base ) {\r\n\t\tif ( typeof base === 'number' ) base = base.toString();\r\n\r\n\t\tbase = base\r\n\t\t\t.replace( /\\s/g, '' )\r\n\t\t\t.replace( /\\[([^\\]]+)\\]/g, '_$1' )\r\n\t\t\t.replace( /[^a-zA-Z0-9_$]/g, '_' )\r\n\t\t\t.replace( /_{2,}/, '_' );\r\n\r\n\t\tlet name = base;\r\n\t\tlet counter = 1;\r\n\r\n\t\twhile ( this.declarations[ name ] || this.references[ name ] || this.aliases[ name ] || name in reserved ) {\r\n\t\t\tname = `${base}$${counter++}`;\r\n\t\t}\r\n\r\n\t\tthis.aliases[ name ] = true;\r\n\t\treturn name;\r\n\t},\r\n\r\n\tfindDeclaration ( name ) {\r\n\t\treturn this.declarations[ name ] ||\r\n\t\t       ( this.parent && this.parent.findDeclaration( name ) );\r\n\t}\r\n};\r\n","import './wrap.js'; // TODO necessary for ordering. sort it out\r\nimport Node from './Node.js';\r\nimport Scope from './Scope.js';\r\nimport destructure from '../utils/destructure.js';\r\n\r\nfunction isUseStrict ( node ) {\r\n\tif ( !node ) return false;\r\n\tif ( node.type !== 'ExpressionStatement' ) return false;\r\n\tif ( node.expression.type !== 'Literal' ) return false;\r\n\treturn node.expression.value === 'use strict';\r\n}\r\n\r\nexport default class BlockStatement extends Node {\r\n\tcreateScope () {\r\n\t\tthis.parentIsFunction = /Function/.test( this.parent.type );\r\n\t\tthis.isFunctionBlock = this.parentIsFunction || this.parent.type === 'Root';\r\n\t\tthis.scope = new Scope({\r\n\t\t\tblock: !this.isFunctionBlock,\r\n\t\t\tparent: this.parent.findScope( false )\r\n\t\t});\r\n\r\n\t\tif ( this.parentIsFunction ) {\r\n\t\t\tthis.parent.params.forEach( node => {\r\n\t\t\t\tthis.scope.addDeclaration( node, 'param' );\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tinitialise ( transforms ) {\r\n\t\tthis.thisAlias = null;\r\n\t\tthis.argumentsAlias = null;\r\n\t\tthis.defaultParameters = [];\r\n\r\n\t\t// normally the scope gets created here, during initialisation,\r\n\t\t// but in some cases (e.g. `for` statements), we need to create\r\n\t\t// the scope early, as it pertains to both the init block and\r\n\t\t// the body of the statement\r\n\t\tif ( !this.scope ) this.createScope();\r\n\r\n\t\tthis.body.forEach( node => node.initialise( transforms ) );\r\n\r\n\t\tthis.scope.consolidate();\r\n\t}\r\n\r\n\tfindLexicalBoundary () {\r\n\t\tif ( this.type === 'Program' ) return this;\r\n\t\tif ( /^Function/.test( this.parent.type ) ) return this;\r\n\r\n\t\treturn this.parent.findLexicalBoundary();\r\n\t}\r\n\r\n\tfindScope ( functionScope ) {\r\n\t\tif ( functionScope && !this.isFunctionBlock ) return this.parent.findScope( functionScope );\r\n\t\treturn this.scope;\r\n\t}\r\n\r\n\tgetArgumentsAlias () {\r\n\t\tif ( !this.argumentsAlias ) {\r\n\t\t\tthis.argumentsAlias = this.scope.createIdentifier( 'arguments' );\r\n\t\t}\r\n\r\n\t\treturn this.argumentsAlias;\r\n\t}\r\n\r\n\tgetArgumentsArrayAlias () {\r\n\t\tif ( !this.argumentsArrayAlias ) {\r\n\t\t\tthis.argumentsArrayAlias = this.scope.createIdentifier( 'argsArray' );\r\n\t\t}\r\n\r\n\t\treturn this.argumentsArrayAlias;\r\n\t}\r\n\r\n\tgetThisAlias () {\r\n\t\tif ( !this.thisAlias ) {\r\n\t\t\tthis.thisAlias = this.scope.createIdentifier( 'this' );\r\n\t\t}\r\n\r\n\t\treturn this.thisAlias;\r\n\t}\r\n\r\n\tgetIndentation () {\r\n\t\tif ( this.indentation === undefined ) {\r\n\t\t\tconst source = this.program.magicString.original;\r\n\r\n\t\t\tconst useOuter = this.synthetic || !this.body.length;\r\n\t\t\tlet c = useOuter ? this.start : this.body[0].start;\r\n\r\n\t\t\twhile ( c && source[c] !== '\\n' ) c -= 1;\r\n\r\n\t\t\tthis.indentation = '';\r\n\r\n\t\t\twhile ( true ) { // eslint-disable-line no-constant-condition\r\n\t\t\t\tc += 1;\r\n\t\t\t\tconst char = source[c];\r\n\r\n\t\t\t\tif ( char !== ' ' && char !== '\\t' ) break;\r\n\r\n\t\t\t\tthis.indentation += char;\r\n\t\t\t}\r\n\r\n\t\t\tconst indentString = this.program.magicString.getIndentString();\r\n\r\n\t\t\t// account for dedented class constructors\r\n\t\t\tlet parent = this.parent;\r\n\t\t\twhile ( parent ) {\r\n\t\t\t\tif ( parent.kind === 'constructor' && !parent.parent.parent.superClass ) {\r\n\t\t\t\t\tthis.indentation = this.indentation.replace( indentString, '' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tparent = parent.parent;\r\n\t\t\t}\r\n\r\n\t\t\tif ( useOuter ) this.indentation += indentString;\r\n\t\t}\r\n\r\n\t\treturn this.indentation;\r\n\t}\r\n\r\n\ttranspile ( code, transforms ) {\r\n\t\tconst indentation = this.getIndentation();\r\n\r\n\t\tlet introStatementGenerators = [];\r\n\r\n\t\tif ( this.argumentsAlias ) {\r\n\t\t\tintroStatementGenerators.push( ( start, prefix, suffix ) => {\r\n\t\t\t\tconst assignment = `${prefix}var ${this.argumentsAlias} = arguments${suffix}`;\r\n\t\t\t\tcode.insertLeft( start, assignment );\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif ( this.thisAlias ) {\r\n\t\t\tintroStatementGenerators.push( ( start, prefix, suffix ) => {\r\n\t\t\t\tconst assignment = `${prefix}var ${this.thisAlias} = this${suffix}`;\r\n\t\t\t\tcode.insertLeft( start, assignment );\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif ( this.argumentsArrayAlias ) {\r\n\t\t\tintroStatementGenerators.push( ( start, prefix, suffix ) => {\r\n\t\t\t\tconst i = this.scope.createIdentifier( 'i' );\r\n\t\t\t\tconst assignment = `${prefix}var ${i} = arguments.length, ${this.argumentsArrayAlias} = Array(${i});\\n${indentation}while ( ${i}-- ) ${this.argumentsArrayAlias}[${i}] = arguments[${i}]${suffix}`;\r\n\t\t\t\tcode.insertLeft( start, assignment );\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif ( /Function/.test( this.parent.type ) ) {\r\n\t\t\tthis.transpileParameters( code, transforms, indentation, introStatementGenerators );\r\n\t\t}\r\n\r\n\t\tif ( transforms.letConst && this.isFunctionBlock ) {\r\n\t\t\tthis.transpileBlockScopedIdentifiers( code );\r\n\t\t}\r\n\r\n\t\tsuper.transpile( code, transforms );\r\n\r\n\t\tif ( this.synthetic ) {\r\n\t\t\tif ( this.parent.type === 'ArrowFunctionExpression' ) {\r\n\t\t\t\tconst expr = this.body[0];\r\n\r\n\t\t\t\tif ( introStatementGenerators.length ) {\r\n\t\t\t\t\tcode.insertLeft( this.start, `{` ).insertRight( this.end, `${this.parent.getIndentation()}}` );\r\n\r\n\t\t\t\t\tcode.insertRight( expr.start, `\\n${indentation}return ` );\r\n\t\t\t\t\tcode.insertLeft( expr.end, `;\\n` );\r\n\t\t\t\t} else if ( transforms.arrow ) {\r\n\t\t\t\t\tcode.insertLeft( expr.start, `{ return ` );\r\n\t\t\t\t\tcode.insertLeft( expr.end, `; }` );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\telse if ( introStatementGenerators.length ) {\r\n\t\t\t\tcode.insertLeft( this.start, `{` ).insertRight( this.end, `}` );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet start;\r\n\t\tif ( isUseStrict( this.body[0] ) ) {\r\n\t\t\tstart = this.body[0].end;\r\n\t\t} else if ( this.synthetic || this.parent.type === 'Root' ) {\r\n\t\t\tstart = this.start;\r\n\t\t} else {\r\n\t\t\tstart = this.start + 1;\r\n\t\t}\r\n\r\n\t\tlet prefix = `\\n${indentation}`;\r\n\t\tlet suffix = ';';\r\n\t\tintroStatementGenerators.forEach( ( fn, i ) => {\r\n\t\t\tif ( i === introStatementGenerators.length - 1 ) suffix = `;\\n`;\r\n\t\t\tfn( start, prefix, suffix );\r\n\t\t});\r\n\t}\r\n\r\n\ttranspileParameters ( code, transforms, indentation, introStatementGenerators ) {\r\n\t\tconst params = this.parent.params;\r\n\r\n\t\tparams.forEach( param => {\r\n\t\t\tif ( param.type === 'AssignmentPattern' && param.left.type === 'Identifier' ) {\r\n\t\t\t\tif ( transforms.defaultParameter ) {\r\n\t\t\t\t\tintroStatementGenerators.push( ( start, prefix, suffix ) => {\r\n\t\t\t\t\t\tconst lhs = `${prefix}if ( ${param.left.name} === void 0 ) ${param.left.name}`;\r\n\r\n\t\t\t\t\t\tcode\r\n\t\t\t\t\t\t\t.insertRight( param.left.end, lhs )\r\n\t\t\t\t\t\t\t.move( param.left.end, param.right.end, start )\r\n\t\t\t\t\t\t\t.insertLeft( param.right.end, suffix );\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\telse if ( param.type === 'RestElement' ) {\r\n\t\t\t\tif ( transforms.spreadRest ) {\r\n\t\t\t\t\tintroStatementGenerators.push( ( start, prefix, suffix ) => {\r\n\t\t\t\t\t\tconst penultimateParam = params[ params.length - 2 ];\r\n\r\n\t\t\t\t\t\tif ( penultimateParam ) {\r\n\t\t\t\t\t\t\tcode.remove( penultimateParam ? penultimateParam.end : param.start, param.end );\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlet start = param.start, end = param.end; // TODO https://gitlab.com/Rich-Harris/buble/issues/8\r\n\r\n\t\t\t\t\t\t\twhile ( /\\s/.test( code.original[ start - 1 ] ) ) start -= 1;\r\n\t\t\t\t\t\t\twhile ( /\\s/.test( code.original[ end ] ) ) end += 1;\r\n\r\n\t\t\t\t\t\t\tcode.remove( start, end );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst name = param.argument.name;\r\n\t\t\t\t\t\tconst len = this.scope.createIdentifier( 'len' );\r\n\t\t\t\t\t\tconst count = params.length - 1;\r\n\r\n\t\t\t\t\t\tif ( count ) {\r\n\t\t\t\t\t\t\tcode.insertLeft( start, `${prefix}var ${name} = [], ${len} = arguments.length - ${count};\\n${indentation}while ( ${len}-- > 0 ) ${name}[ ${len} ] = arguments[ ${len} + ${count} ]${suffix}` );\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcode.insertLeft( start, `${prefix}var ${name} = [], ${len} = arguments.length;\\n${indentation}while ( ${len}-- ) ${name}[ ${len} ] = arguments[ ${len} ]${suffix}` );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\telse if ( param.type !== 'Identifier' ) {\r\n\t\t\t\tif ( transforms.parameterDestructuring ) {\r\n\t\t\t\t\tconst ref = this.scope.createIdentifier( 'ref' );\r\n\t\t\t\t\tdestructure( code, this.scope, param, ref, false, introStatementGenerators );\r\n\t\t\t\t\tcode.insertLeft( param.start, ref );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\ttranspileBlockScopedIdentifiers ( code ) {\r\n\t\tObject.keys( this.scope.blockScopedDeclarations ).forEach( name => {\r\n\t\t\tconst declarations = this.scope.blockScopedDeclarations[ name ];\r\n\r\n\t\t\tfor ( let declaration of declarations ) {\r\n\t\t\t\tlet cont = false; // TODO implement proper continue...\r\n\r\n\t\t\t\tif ( declaration.kind === 'for.let' ) {\r\n\t\t\t\t\t// special case\r\n\t\t\t\t\tconst forStatement = declaration.node.findNearest( 'ForStatement' );\r\n\r\n\t\t\t\t\tif ( forStatement.shouldRewriteAsFunction ) {\r\n\t\t\t\t\t\tconst outerAlias = this.scope.createIdentifier( name );\r\n\t\t\t\t\t\tconst innerAlias = forStatement.reassigned[ name ] ?\r\n\t\t\t\t\t\t\tthis.scope.createIdentifier( name ) :\r\n\t\t\t\t\t\t\tname;\r\n\r\n\t\t\t\t\t\tdeclaration.name = outerAlias;\r\n\t\t\t\t\t\tcode.overwrite( declaration.node.start, declaration.node.end, outerAlias, true );\r\n\r\n\t\t\t\t\t\tforStatement.aliases[ name ] = {\r\n\t\t\t\t\t\t\touter: outerAlias,\r\n\t\t\t\t\t\t\tinner: innerAlias\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tfor ( const identifier of declaration.instances ) {\r\n\t\t\t\t\t\t\tconst alias = forStatement.body.contains( identifier ) ?\r\n\t\t\t\t\t\t\t\tinnerAlias :\r\n\t\t\t\t\t\t\t\touterAlias;\r\n\r\n\t\t\t\t\t\t\tif ( name !== alias ) {\r\n\t\t\t\t\t\t\t\tcode.overwrite( identifier.start, identifier.end, alias, true );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcont = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( !cont ) {\r\n\t\t\t\t\tconst alias = this.scope.createIdentifier( name );\r\n\r\n\t\t\t\t\tif ( name !== alias ) {\r\n\t\t\t\t\t\tdeclaration.name = alias;\r\n\t\t\t\t\t\tcode.overwrite( declaration.node.start, declaration.node.end, alias, true );\r\n\r\n\t\t\t\t\t\tfor ( const identifier of declaration.instances ) {\r\n\t\t\t\t\t\t\tidentifier.rewritten = true;\r\n\t\t\t\t\t\t\tcode.overwrite( identifier.start, identifier.end, alias, true );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n","import MagicString from 'magic-string';\r\nimport BlockStatement from './BlockStatement.js';\r\nimport wrap from './wrap.js';\r\n\r\nexport default function Program ( source, ast, transforms, options ) {\r\n\tthis.type = 'Root';\r\n\r\n\t// options\r\n\tthis.jsx = options.jsx || 'React.createElement';\r\n\tthis.options = options;\r\n\r\n\tthis.source = source;\r\n\tthis.magicString = new MagicString( source );\r\n\r\n\tthis.ast = ast;\r\n\tthis.depth = 0;\r\n\r\n\twrap( this.body = ast, this );\r\n\tthis.body.__proto__ = BlockStatement.prototype;\r\n\r\n\tthis.indentExclusionElements = [];\r\n\tthis.body.initialise( transforms );\r\n\r\n\tthis.indentExclusions = Object.create( null );\r\n\tfor ( const node of this.indentExclusionElements ) {\r\n\t\tfor ( let i = node.start; i < node.end; i += 1 ) {\r\n\t\t\tthis.indentExclusions[ i ] = true;\r\n\t\t}\r\n\t}\r\n\r\n\tthis.body.transpile( this.magicString, transforms );\r\n}\r\n\r\nProgram.prototype = {\r\n\texport ( options = {} ) {\r\n\t\treturn {\r\n\t\t\tcode: this.magicString.toString(),\r\n\t\t\tmap: this.magicString.generateMap({\r\n\t\t\t\tfile: options.file,\r\n\t\t\t\tsource: options.source,\r\n\t\t\t\tincludeContent: options.includeContent !== false\r\n\t\t\t})\r\n\t\t};\r\n\t},\r\n\r\n\tfindNearest () {\r\n\t\treturn null;\r\n\t},\r\n\r\n\tfindScope () {\r\n\t\treturn null;\r\n\t}\r\n};\r\n","export const matrix = {\r\n\tchrome: {\r\n\t\t    48: 0b1001111011111100111110101111101,\r\n\t\t    49: 0b1001111111111100111111111111111,\r\n\t\t    50: 0b1011111111111100111111111111111,\r\n\t\t    51: 0b1011111111111100111111111111111,\r\n\t\t    52: 0b1111111111111100111111111111111\r\n\t},\r\n\tfirefox: {\r\n\t\t    43: 0b1000111111101100000110111011101,\r\n\t\t    44: 0b1000111111101100000110111011101,\r\n\t\t    45: 0b1000111111101100000110111011101,\r\n\t\t    46: 0b1010111111111100000110111011101,\r\n\t\t    47: 0b1010111111111100111111111011111,\r\n\t\t    48: 0b1010111111111100111111111011111\r\n\t},\r\n\tsafari: {\r\n\t\t     8: 0b1000000000000000000000000000000,\r\n\t\t     9: 0b1001111001101100000011101011110\r\n\t},\r\n\tie: {\r\n\t\t     8: 0b0000000000000000000000000000000,\r\n\t\t     9: 0b1000000000000000000000000000000,\r\n\t\t    10: 0b1000000000000000000000000000000,\r\n\t\t    11: 0b1000000000000000111000001100000\r\n\t},\r\n\tedge: {\r\n\t\t    12: 0b1011110110111100011010001011101,\r\n\t\t    13: 0b1011111110111100011111001011111\r\n\t},\r\n\tnode: {\r\n\t\t'0.10': 0b1000000000101000000000001000000,\r\n\t\t'0.12': 0b1000001000101000000010001000100,\r\n\t\t     4: 0b1001111000111100111111001111111,\r\n\t\t     5: 0b1001111000111100111111001111111,\r\n\t\t     6: 0b1011111111111100111111111111111\r\n\t}\r\n};\r\n\r\nexport const features = [\r\n\t'arrow',\r\n\t'classes',\r\n\t'collections',\r\n\t'computedProperty',\r\n\t'conciseMethodProperty',\r\n\t'constLoop',\r\n\t'constRedef',\r\n\t'defaultParameter',\r\n\t'destructuring',\r\n\t'extendNatives',\r\n\t'forOf',\r\n\t'generator',\r\n\t'letConst',\r\n\t'letLoop',\r\n\t'letLoopScope',\r\n\t'moduleExport',\r\n\t'moduleImport',\r\n\t'numericLiteral',\r\n\t'objectProto',\r\n\t'objectSuper',\r\n\t'oldOctalLiteral',\r\n\t'parameterDestructuring',\r\n\t'spreadRest',\r\n\t'stickyRegExp',\r\n\t'symbol',\r\n\t'templateString',\r\n\t'unicodeEscape',\r\n\t'unicodeIdentifier',\r\n\t'unicodeRegExp',\r\n\r\n\t// ES2016\r\n\t'exponentiation',\r\n\r\n\t// additional transforms, not from\r\n\t// https://featuretests.io\r\n\t'reservedProperties'\r\n];\r\n","{\r\n  \"name\": \"buble\",\r\n  \"version\": \"0.15.4\",\r\n  \"description\": \"The blazing fast, batteries-included ES2015 compiler\",\r\n  \"main\": \"dist/buble.umd.js\",\r\n  \"jsnext:main\": \"dist/buble.es.js\",\r\n  \"files\": [\r\n    \"bin\",\r\n    \"src\",\r\n    \"dist\",\r\n    \"register.js\",\r\n    \"README.md\"\r\n  ],\r\n  \"scripts\": {\r\n    \"build\": \"npm run build:umd && npm run build:es && npm run build:browser\",\r\n    \"build:umd\": \"rollup -c -f umd -o dist/buble.umd.js\",\r\n    \"build:browser\": \"rollup -c --environment DEPS -f umd -o dist/buble.deps.js\",\r\n    \"build:es\": \"rollup -c -f es6 -o dist/buble.es.js\",\r\n    \"test\": \"mocha test/test.js --compilers js:./register\",\r\n    \"pretest\": \"npm run build:umd && npm run build:browser\",\r\n    \"test:node\": \"mocha test/test.js --compilers js:./register\",\r\n    \"pretest:node\": \"npm run build:umd\",\r\n    \"prepublish\": \"npm test && npm run build:es\",\r\n    \"lint\": \"eslint src\"\r\n  },\r\n  \"bin\": {\r\n    \"buble\": \"./bin/buble\"\r\n  },\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"git+https://gitlab.com/Rich-Harris/buble.git\"\r\n  },\r\n  \"keywords\": [\r\n    \"javascript\",\r\n    \"transpilation\",\r\n    \"compilation\",\r\n    \"esnext\",\r\n    \"es2015\",\r\n    \"es2017\",\r\n    \"es6\",\r\n    \"es7\"\r\n  ],\r\n  \"author\": \"Rich Harris\",\r\n  \"license\": \"MIT\",\r\n  \"bugs\": {\r\n    \"url\": \"https://gitlab.com/Rich-Harris/buble/issues\"\r\n  },\r\n  \"homepage\": \"https://gitlab.com/Rich-Harris/buble#README\",\r\n  \"devDependencies\": {\r\n    \"buble\": \"0.8.2\",\r\n    \"console-group\": \"^0.2.1\",\r\n    \"eslint\": \"^2.10.1\",\r\n    \"glob\": \"^7.0.3\",\r\n    \"mocha\": \"^2.4.5\",\r\n    \"regexpu-core\": \"^2.0.0\",\r\n    \"rimraf\": \"^2.5.2\",\r\n    \"rollup\": \"^0.26.3\",\r\n    \"rollup-plugin-buble\": \"^0.8.0\",\r\n    \"rollup-plugin-commonjs\": \"^2.2.1\",\r\n    \"rollup-plugin-json\": \"^2.0.0\",\r\n    \"rollup-plugin-node-resolve\": \"^1.5.0\",\r\n    \"source-map\": \"^0.5.6\",\r\n    \"source-map-support\": \"^0.4.0\"\r\n  },\r\n  \"dependencies\": {\r\n    \"acorn\": \"^5.1.1\",\r\n    \"acorn-es7-plugin\": \"^1.1.7\",\r\n    \"acorn-jsx\": \"^3.0.1\",\r\n    \"acorn-object-spread\": \"^1.0.0\",\r\n    \"chalk\": \"^1.1.3\",\r\n    \"magic-string\": \"0.15.2\",\r\n    \"vlq\": \"0.2.1\",\r\n    \"minimist\": \"^1.2.0\",\r\n    \"os-homedir\": \"^1.0.1\"\r\n  }\r\n}\r\n","import acorn from 'acorn/dist/acorn.js';\r\nimport acornJsx from 'acorn-jsx/inject';\r\nimport acornAsyncAwait from 'acorn-es7-plugin';\r\nimport acornObjectSpread from 'acorn-object-rest-spread/inject';\r\nimport Program from './program/Program.js';\r\nimport { features, matrix } from './support.js';\r\nimport getSnippet from './utils/getSnippet.js';\r\n\r\nconst { parse } = [\r\n\tacornAsyncAwait,\r\n\tacornObjectSpread,\r\n\tacornJsx\r\n].reduce( ( final, plugin ) => plugin( final ), acorn );\r\n\r\nconst dangerousTransforms = [\r\n\t'dangerousTaggedTemplateString',\r\n\t'dangerousForOf'\r\n];\r\n\r\nexport function target ( target ) {\r\n\tconst targets = Object.keys( target );\r\n\tlet bitmask = targets.length ?\r\n\t\t0b1111111111111111111111111111111 :\r\n\t\t0b1000000000000000000000000000000;\r\n\r\n\tObject.keys( target ).forEach( environment => {\r\n\t\tconst versions = matrix[ environment ];\r\n\t\tif ( !versions ) throw new Error( `Unknown environment '${environment}'. Please raise an issue at https://gitlab.com/Rich-Harris/buble/issues` );\r\n\r\n\t\tconst targetVersion = target[ environment ];\r\n\t\tif ( !( targetVersion in versions ) ) throw new Error( `Support data exists for the following versions of ${environment}: ${Object.keys( versions ).join( ', ')}. Please raise an issue at https://gitlab.com/Rich-Harris/buble/issues` );\r\n\t\tconst support = versions[ targetVersion ];\r\n\r\n\t\tbitmask &= support;\r\n\t});\r\n\r\n\tlet transforms = Object.create( null );\r\n\tfeatures.forEach( ( name, i ) => {\r\n\t\ttransforms[ name ] = !( bitmask & 1 << i );\r\n\t});\r\n\r\n\tdangerousTransforms.forEach( name => {\r\n\t\ttransforms[ name ] = false;\r\n\t});\r\n\r\n\treturn transforms;\r\n}\r\n\r\nexport function transform ( source, options = {} ) {\r\n\tlet ast;\r\n\r\n\ttry {\r\n\t\tast = parse( source, {\r\n\t\t\tecmaVersion: 8,\r\n\t\t\tpreserveParens: true,\r\n\t\t\tsourceType: 'module',\r\n\t\t\tplugins: {\r\n\t\t\t\tasyncawait: {awaitAnywhere: true, asyncExits: true},\r\n\t\t\t\tjsx: true,\r\n\t\t\t\tobjectRestSpread: true\r\n\t\t\t}\r\n\t\t});\r\n\t} catch ( err ) {\r\n\t\terr.snippet = getSnippet( source, err.loc );\r\n\t\terr.toString = () => `${err.name}: ${err.message}\\n${err.snippet}`;\r\n\t\tthrow err;\r\n\t}\r\n\r\n\tlet transforms = target( options.target || {} );\r\n\tObject.keys( options.transforms || {} ).forEach( name => {\r\n\t\tif ( name === 'modules' ) {\r\n\t\t\tif ( !( 'moduleImport' in options.transforms ) ) transforms.moduleImport = options.transforms.modules;\r\n\t\t\tif ( !( 'moduleExport' in options.transforms ) ) transforms.moduleExport = options.transforms.modules;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( !( name in transforms ) ) throw new Error( `Unknown transform '${name}'` );\r\n\t\ttransforms[ name ] = options.transforms[ name ];\r\n\t});\r\n\r\n\treturn new Program( source, ast, transforms, options ).export( options );\r\n}\r\n\r\nexport { version as VERSION } from '../package.json';\r\n"],"names":["this","require$$0","const","toJSON","let","element","super","target","source","temp","fn","ref","require$$2","require$$1","rewritePattern","prop","i","replacement","c","start","alias","identifier","0b1001111011111100111110101111101","0b1001111111111100111111111111111","0b1011111111111100111111111111111","0b1111111111111100111111111111111","0b1000111111101100000110111011101","0b1010111111111100000110111011101","0b1010111111111100111111111011111","0b1000000000000000000000000000000","0b1001111001101100000011101011110","0b0000000000000000000000000000000","0b1000000000000000111000001100000","0b1011110110111100011010001011101","0b1011111110111100011111001011111","0b1000000000101000000000001000000","0b1000001000101000000010001000100","0b1001111000111100111111001111111","acorn","0b1111111111111111111111111111111"],"mappings":";;;;;;;;;;AAAA,IAAA,CAAC,UAAU,MAAM,EAAE,OAAO,EAAE;KAC3B,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,MAAM,KAAK,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC;KAC/E,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,SAAS,CAAC,EAAE,OAAO,CAAC;MACxE,OAAO,EAAE,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,EAAE,CAAC,CAAC;KAC/C,CAACA,iBAAI,GAAG,UAAU,OAAO,EAAE,EAAE,YAAY,CAAC;;;;AAI3C,IAAA,IAAI,aAAa,GAAG;MAClB,CAAC,EAAE,qNAAqN;MACxN,CAAC,EAAE,8CAA8C;MACjD,CAAC,EAAE,MAAM;MACT,MAAM,EAAE,wEAAwE;MAChF,UAAU,EAAE,gBAAgB;KAC7B,CAAC;;;;AAIF,IAAA,IAAI,oBAAoB,GAAG,6KAA6K,CAAC;;AAEzM,IAAA,IAAI,QAAQ,GAAG;MACb,CAAC,EAAE,oBAAoB;MACvB,CAAC,EAAE,oBAAoB,GAAG,0CAA0C;KACrE,CAAC;;;;;;;;;;AAUF,IAAA,IAAI,4BAA4B,GAAG,qrIAAqrI,CAAC;AACztI,IAAA,IAAI,uBAAuB,GAAG,+gFAA+gF,CAAC;;AAE9iF,IAAA,IAAI,uBAAuB,GAAG,IAAI,MAAM,CAAC,GAAG,GAAG,4BAA4B,GAAG,GAAG,CAAC,CAAC;AACnF,IAAA,IAAI,kBAAkB,GAAG,IAAI,MAAM,CAAC,GAAG,GAAG,4BAA4B,GAAG,uBAAuB,GAAG,GAAG,CAAC,CAAC;;AAExG,IAAA,4BAA4B,GAAG,uBAAuB,GAAG,IAAI,CAAC;;;;;;;;;AAS9D,IAAA,IAAI,0BAA0B,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;;AAG3hC,IAAA,IAAI,qBAAqB,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,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"}